"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureForSwc = void 0;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("./versions");
const add_swc_config_1 = require("@nx/js/src/utils/swc/add-swc-config");
function configureForSwc(tree, projectRoot) {
    const swcConfigPath = (0, devkit_1.joinPathFragments)(projectRoot, '.swcrc');
    const rootPackageJson = (0, devkit_1.readJson)(tree, 'package.json');
    const hasSwcDepedency = rootPackageJson.dependencies?.['@swc/core'] ||
        rootPackageJson.devDependencies?.['@swc/core'];
    const hasSwcCliDependency = rootPackageJson.dependencies?.['@swc/cli'] ||
        rootPackageJson.devDependencies?.['@swc/cli'];
    if (!tree.exists(swcConfigPath)) {
        (0, add_swc_config_1.addSwcConfig)(tree, projectRoot);
    }
    if (tree.exists(swcConfigPath)) {
        (0, devkit_1.updateJson)(tree, swcConfigPath, (json) => {
            return {
                ...json,
                exclude: [...json.exclude, '.*.d.ts$'],
            };
        });
    }
    if (!hasSwcDepedency || !hasSwcCliDependency) {
        addSwcDependencies(tree);
        return () => (0, devkit_1.installPackagesTask)(tree);
    }
}
exports.configureForSwc = configureForSwc;
function addSwcDependencies(tree) {
    return (0, devkit_1.addDependenciesToPackageJson)(tree, {}, {
        '@swc-node/register': versions_1.swcNodeVersion,
        '@swc/cli': versions_1.swcCliVersion,
        '@swc/core': versions_1.swcCoreVersion,
    });
}
