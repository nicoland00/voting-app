/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@coral-xyz";
exports.ids = ["vendor-chunks/@coral-xyz"];
exports.modules = {

/***/ "(ssr)/../node_modules/@coral-xyz/anchor-errors/dist/index.js":
/*!**************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor-errors/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Instruction errors.\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_VIOLATED = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = exports.ANCHOR_ERROR__CONSTRAINT_SPACE = exports.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = exports.ANCHOR_ERROR__CONSTRAINT_ZERO = exports.ANCHOR_ERROR__CONSTRAINT_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_CLOSE = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = exports.ANCHOR_ERROR__CONSTRAINT_STATE = exports.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = exports.ANCHOR_ERROR__CONSTRAINT_SEEDS = exports.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = exports.ANCHOR_ERROR__CONSTRAINT_OWNER = exports.ANCHOR_ERROR__CONSTRAINT_RAW = exports.ANCHOR_ERROR__CONSTRAINT_SIGNER = exports.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = exports.ANCHOR_ERROR__CONSTRAINT_MUT = exports.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = exports.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = exports.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = exports.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = exports.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = exports.ANCHOR_ERROR__INSTRUCTION_MISSING = void 0;\nexports.ANCHOR_ERROR__DEPRECATED = exports.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = exports.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = exports.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = exports.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = exports.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = exports.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = exports.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = exports.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = exports.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = exports.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = exports.ANCHOR_ERROR__INVALID_PROGRAM_ID = exports.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = exports.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = exports.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = exports.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = void 0;\n/** 8 byte instruction identifier not provided. */ exports.ANCHOR_ERROR__INSTRUCTION_MISSING = 100;\n/** Fallback functions are not supported. */ exports.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = 101;\n/** The program could not deserialize the given instruction. */ exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = 102;\n/** The program could not serialize the given instruction. */ exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = 103;\n// IDL instruction errors.\n/** The program was compiled without idl instructions. */ exports.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = 1000;\n/** The transaction was given an invalid program for the IDL instruction. */ exports.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = 1001;\n/** IDL account must be empty in order to resize, try closing first. */ exports.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = 1002;\n// Event instructions.\n/** The program was compiled without `event-cpi` feature. */ exports.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = 1500;\n// Constraint errors.\n/** A mut constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MUT = 2000;\n/** A has one constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = 2001;\n/** A signer constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_SIGNER = 2002;\n/** A raw constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_RAW = 2003;\n/** An owner constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_OWNER = 2004;\n/** A rent exemption constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = 2005;\n/** A seeds constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_SEEDS = 2006;\n/** An executable constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = 2007;\n/** Deprecated Error, feel free to replace with something else. */ exports.ANCHOR_ERROR__CONSTRAINT_STATE = 2008;\n/** An associated constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = 2009;\n/** An associated init constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = 2010;\n/** A close constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_CLOSE = 2011;\n/** An address constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_ADDRESS = 2012;\n/** Expected zero account discriminant. */ exports.ANCHOR_ERROR__CONSTRAINT_ZERO = 2013;\n/** A token mint constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = 2014;\n/** A token owner constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = 2015;\n/** A mint mint authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = 2016;\n/** A mint freeze authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = 2017;\n/** A mint decimals constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = 2018;\n/** A space constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_SPACE = 2019;\n/** A required account for the constraint is None. */ exports.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = 2020;\n/** A token account token program constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = 2021;\n/** A mint token program constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = 2022;\n/** An associated token account token program constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = 2023;\n/** A group pointer extension constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = 2024;\n/** A group pointer extension authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = 2025;\n/** A group pointer extension group address constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = 2026;\n/** A group member pointer extension constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = 2027;\n/** A group member pointer extension authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = 2028;\n/** A group member pointer extension group address constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = 2029;\n/** A metadata pointer extension constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = 2030;\n/** A metadata pointer extension authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = 2031;\n/** A metadata pointer extension metadata address constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = 2032;\n/** A close authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = 2033;\n/** A close authority extension authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = 2034;\n/** A permanent delegate extension constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = 2035;\n/** A permanent delegate extension delegate constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = 2036;\n/** A transfer hook extension constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = 2037;\n/** A transfer hook extension authority constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = 2038;\n/** A transfer hook extension transfer hook program id constraint was violated. */ exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = 2039;\n// Require errors.\n/** A require expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_VIOLATED = 2500;\n/** A require_eq expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = 2501;\n/** A require_keys_eq expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = 2502;\n/** A require_neq expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = 2503;\n/** A require_keys_neq expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = 2504;\n/** A require_gt expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = 2505;\n/** A require_gte expression was violated. */ exports.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = 2506;\n// Account errors.\n/** The account discriminator was already set on this account. */ exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = 3000;\n/** No 8 byte discriminator was found on the account. */ exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = 3001;\n/** 8 byte discriminator did not match what was expected. */ exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = 3002;\n/** Failed to deserialize the account. */ exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = 3003;\n/** Failed to serialize the account. */ exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = 3004;\n/** Not enough account keys given to the instruction. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = 3005;\n/** The given account is not mutable. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = 3006;\n/** The given account is owned by a different program than expected. */ exports.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = 3007;\n/** Program ID was not as expected. */ exports.ANCHOR_ERROR__INVALID_PROGRAM_ID = 3008;\n/** Program account is not executable. */ exports.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = 3009;\n/** The given account did not sign. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = 3010;\n/** The given account is not owned by the system program. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = 3011;\n/** The program expected this account to be already initialized. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = 3012;\n/** The given account is not a program data account. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = 3013;\n/** The given account is not the associated token account. */ exports.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = 3014;\n/** The given public key does not match the required sysvar. */ exports.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = 3015;\n/** The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit. */ exports.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = 3016;\n/** The account was duplicated for more than one reallocation. */ exports.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = 3017;\n// Miscellaneous errors.\n/** The declared program id does not match the actual program id. */ exports.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = 4100;\n/** You cannot/should not initialize the payer account as a program account. */ exports.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = 4101;\n/** The program could not perform the numeric conversion, out of range integral type conversion attempted. */ exports.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = 4102;\n// Deprecated errors.\n/** The API being used is deprecated and should no longer be used. */ exports.ANCHOR_ERROR__DEPRECATED = 5000; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor-errors/dist/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/accounts.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/accounts.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshAccountsCoder: () => (/* binding */ BorshAccountsCoder)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _discriminator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./discriminator.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/discriminator.js\");\n\n\n\n\n/**\n * Encodes and decodes account objects.\n */ class BorshAccountsCoder {\n    constructor(idl){\n        this.idl = idl;\n        if (!idl.accounts) {\n            this.accountLayouts = new Map();\n            return;\n        }\n        const types = idl.types;\n        if (!types) {\n            throw new Error(\"Accounts require `idl.types`\");\n        }\n        const layouts = idl.accounts.map((acc)=>{\n            const typeDef = types.find((ty)=>ty.name === acc.name);\n            if (!typeDef) {\n                throw new Error(`Account not found: ${acc.name}`);\n            }\n            return [\n                acc.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_2__.IdlCoder.typeDefLayout({\n                    typeDef,\n                    types\n                })\n            ];\n        });\n        this.accountLayouts = new Map(layouts);\n    }\n    async encode(accountName, account) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        const len = layout.encode(account, buffer);\n        const accountData = buffer.slice(0, len);\n        const discriminator = this.accountDiscriminator(accountName);\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n            discriminator,\n            accountData\n        ]);\n    }\n    decode(accountName, data) {\n        // Assert the account discriminator is correct.\n        const discriminator = this.accountDiscriminator(accountName);\n        if (discriminator.compare(data.slice(0, _discriminator_js__WEBPACK_IMPORTED_MODULE_3__.DISCRIMINATOR_SIZE))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeAny(data) {\n        const discriminator = data.slice(0, _discriminator_js__WEBPACK_IMPORTED_MODULE_3__.DISCRIMINATOR_SIZE);\n        const accountName = Array.from(this.accountLayouts.keys()).find((key)=>this.accountDiscriminator(key).equals(discriminator));\n        if (!accountName) {\n            throw new Error(\"Account not found\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeUnchecked(accountName, acc) {\n        // Chop off the discriminator before decoding.\n        const data = acc.subarray(_discriminator_js__WEBPACK_IMPORTED_MODULE_3__.DISCRIMINATOR_SIZE);\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        return layout.decode(data);\n    }\n    memcmp(accountName, appendData) {\n        const discriminator = this.accountDiscriminator(accountName);\n        return {\n            offset: 0,\n            bytes: bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(appendData ? buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n                discriminator,\n                appendData\n            ]) : discriminator)\n        };\n    }\n    size(accountName) {\n        return _discriminator_js__WEBPACK_IMPORTED_MODULE_3__.DISCRIMINATOR_SIZE + _idl_js__WEBPACK_IMPORTED_MODULE_2__.IdlCoder.typeSize({\n            defined: {\n                name: accountName\n            }\n        }, this.idl);\n    }\n    /**\n     * Calculates and returns a unique 8 byte discriminator prepended to all anchor accounts.\n     *\n     * @param name The name of the account to calculate the discriminator.\n     */ accountDiscriminator(name) {\n        var _a;\n        const account = (_a = this.idl.accounts) === null || _a === void 0 ? void 0 : _a.find((acc)=>acc.name === name);\n        if (!account) {\n            throw new Error(`Account not found: ${name}`);\n        }\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(account.discriminator);\n    }\n} //# sourceMappingURL=accounts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/accounts.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/discriminator.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/discriminator.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DISCRIMINATOR_SIZE: () => (/* binding */ DISCRIMINATOR_SIZE)\n/* harmony export */ });\n/**\n * Number of bytes in anchor discriminators\n */ const DISCRIMINATOR_SIZE = 8; //# sourceMappingURL=discriminator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2Rpc2NyaW1pbmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUEscUJBQXFCLEVBQUUsQ0FDcEMseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC9kaXNjcmltaW5hdG9yLmpzP2Y4MzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBOdW1iZXIgb2YgYnl0ZXMgaW4gYW5jaG9yIGRpc2NyaW1pbmF0b3JzXG4gKi9cbmV4cG9ydCBjb25zdCBESVNDUklNSU5BVE9SX1NJWkUgPSA4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlzY3JpbWluYXRvci5qcy5tYXAiXSwibmFtZXMiOlsiRElTQ1JJTUlOQVRPUl9TSVpFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/discriminator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/event.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/event.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshEventCoder: () => (/* binding */ BorshEventCoder)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_bytes_base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/bytes/base64.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n\nclass BorshEventCoder {\n    constructor(idl){\n        var _a;\n        if (!idl.events) {\n            this.layouts = new Map();\n            return;\n        }\n        const types = idl.types;\n        if (!types) {\n            throw new Error(\"Events require `idl.types`\");\n        }\n        const layouts = idl.events.map((ev)=>{\n            const typeDef = types.find((ty)=>ty.name === ev.name);\n            if (!typeDef) {\n                throw new Error(`Event not found: ${ev.name}`);\n            }\n            return [\n                ev.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_2__.IdlCoder.typeDefLayout({\n                    typeDef,\n                    types\n                })\n            ];\n        });\n        this.layouts = new Map(layouts);\n        this.discriminators = new Map(((_a = idl.events) !== null && _a !== void 0 ? _a : []).map((ev)=>[\n                _utils_bytes_base64_js__WEBPACK_IMPORTED_MODULE_1__.encode(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(ev.discriminator)),\n                ev.name\n            ]));\n    }\n    decode(log) {\n        let logArr;\n        // This will throw if log length is not a multiple of 4.\n        try {\n            logArr = _utils_bytes_base64_js__WEBPACK_IMPORTED_MODULE_1__.decode(log);\n        } catch (e) {\n            return null;\n        }\n        const disc = _utils_bytes_base64_js__WEBPACK_IMPORTED_MODULE_1__.encode(logArr.slice(0, 8));\n        // Only deserialize if the discriminator implies a proper event.\n        const eventName = this.discriminators.get(disc);\n        if (!eventName) {\n            return null;\n        }\n        const layout = this.layouts.get(eventName);\n        if (!layout) {\n            throw new Error(`Unknown event: ${eventName}`);\n        }\n        const data = layout.decode(logArr.slice(8));\n        return {\n            data,\n            name: eventName\n        };\n    }\n} //# sourceMappingURL=event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2V2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdDO0FBQ3NCO0FBQ2xCO0FBQzdCLE1BQU1HO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUlDO1FBQ0osSUFBSSxDQUFDRCxJQUFJRSxNQUFNLEVBQUU7WUFDYixJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJQztZQUNuQjtRQUNKO1FBQ0EsTUFBTUMsUUFBUUwsSUFBSUssS0FBSztRQUN2QixJQUFJLENBQUNBLE9BQU87WUFDUixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxNQUFNSCxVQUFVSCxJQUFJRSxNQUFNLENBQUNLLEdBQUcsQ0FBQyxDQUFDQztZQUM1QixNQUFNQyxVQUFVSixNQUFNSyxJQUFJLENBQUMsQ0FBQ0MsS0FBT0EsR0FBR0MsSUFBSSxLQUFLSixHQUFHSSxJQUFJO1lBQ3RELElBQUksQ0FBQ0gsU0FBUztnQkFDVixNQUFNLElBQUlILE1BQU0sQ0FBQyxpQkFBaUIsRUFBRUUsR0FBR0ksSUFBSSxDQUFDLENBQUM7WUFDakQ7WUFDQSxPQUFPO2dCQUFDSixHQUFHSSxJQUFJO2dCQUFFZiw2Q0FBUUEsQ0FBQ2dCLGFBQWEsQ0FBQztvQkFBRUo7b0JBQVNKO2dCQUFNO2FBQUc7UUFDaEU7UUFDQSxJQUFJLENBQUNGLE9BQU8sR0FBRyxJQUFJQyxJQUFJRDtRQUN2QixJQUFJLENBQUNXLGNBQWMsR0FBRyxJQUFJVixJQUFJLENBQUMsQ0FBQ0gsS0FBS0QsSUFBSUUsTUFBTSxNQUFNLFFBQVFELE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUUsRUFBRU0sR0FBRyxDQUFDLENBQUNDLEtBQU87Z0JBQzlGWiwwREFBYSxDQUFDRCwwQ0FBTUEsQ0FBQ3FCLElBQUksQ0FBQ1IsR0FBR1MsYUFBYTtnQkFDMUNULEdBQUdJLElBQUk7YUFDVjtJQUNMO0lBQ0FNLE9BQU9DLEdBQUcsRUFBRTtRQUNSLElBQUlDO1FBQ0osd0RBQXdEO1FBQ3hELElBQUk7WUFDQUEsU0FBU3hCLDBEQUFhLENBQUN1QjtRQUMzQixFQUNBLE9BQU9FLEdBQUc7WUFDTixPQUFPO1FBQ1g7UUFDQSxNQUFNQyxPQUFPMUIsMERBQWEsQ0FBQ3dCLE9BQU9HLEtBQUssQ0FBQyxHQUFHO1FBQzNDLGdFQUFnRTtRQUNoRSxNQUFNQyxZQUFZLElBQUksQ0FBQ1YsY0FBYyxDQUFDVyxHQUFHLENBQUNIO1FBQzFDLElBQUksQ0FBQ0UsV0FBVztZQUNaLE9BQU87UUFDWDtRQUNBLE1BQU1FLFNBQVMsSUFBSSxDQUFDdkIsT0FBTyxDQUFDc0IsR0FBRyxDQUFDRDtRQUNoQyxJQUFJLENBQUNFLFFBQVE7WUFDVCxNQUFNLElBQUlwQixNQUFNLENBQUMsZUFBZSxFQUFFa0IsVUFBVSxDQUFDO1FBQ2pEO1FBQ0EsTUFBTUcsT0FBT0QsT0FBT1IsTUFBTSxDQUFDRSxPQUFPRyxLQUFLLENBQUM7UUFDeEMsT0FBTztZQUFFSTtZQUFNZixNQUFNWTtRQUFVO0lBQ25DO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2V2ZW50LmpzP2Q4YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gXCIuLi8uLi91dGlscy9ieXRlcy9iYXNlNjQuanNcIjtcbmltcG9ydCB7IElkbENvZGVyIH0gZnJvbSBcIi4vaWRsLmpzXCI7XG5leHBvcnQgY2xhc3MgQm9yc2hFdmVudENvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoIWlkbC5ldmVudHMpIHtcbiAgICAgICAgICAgIHRoaXMubGF5b3V0cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0eXBlcyA9IGlkbC50eXBlcztcbiAgICAgICAgaWYgKCF0eXBlcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXZlbnRzIHJlcXVpcmUgYGlkbC50eXBlc2BcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGF5b3V0cyA9IGlkbC5ldmVudHMubWFwKChldikgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZURlZiA9IHR5cGVzLmZpbmQoKHR5KSA9PiB0eS5uYW1lID09PSBldi5uYW1lKTtcbiAgICAgICAgICAgIGlmICghdHlwZURlZikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRXZlbnQgbm90IGZvdW5kOiAke2V2Lm5hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gW2V2Lm5hbWUsIElkbENvZGVyLnR5cGVEZWZMYXlvdXQoeyB0eXBlRGVmLCB0eXBlcyB9KV07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxheW91dHMgPSBuZXcgTWFwKGxheW91dHMpO1xuICAgICAgICB0aGlzLmRpc2NyaW1pbmF0b3JzID0gbmV3IE1hcCgoKF9hID0gaWRsLmV2ZW50cykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10pLm1hcCgoZXYpID0+IFtcbiAgICAgICAgICAgIGJhc2U2NC5lbmNvZGUoQnVmZmVyLmZyb20oZXYuZGlzY3JpbWluYXRvcikpLFxuICAgICAgICAgICAgZXYubmFtZSxcbiAgICAgICAgXSkpO1xuICAgIH1cbiAgICBkZWNvZGUobG9nKSB7XG4gICAgICAgIGxldCBsb2dBcnI7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBpZiBsb2cgbGVuZ3RoIGlzIG5vdCBhIG11bHRpcGxlIG9mIDQuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsb2dBcnIgPSBiYXNlNjQuZGVjb2RlKGxvZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRpc2MgPSBiYXNlNjQuZW5jb2RlKGxvZ0Fyci5zbGljZSgwLCA4KSk7XG4gICAgICAgIC8vIE9ubHkgZGVzZXJpYWxpemUgaWYgdGhlIGRpc2NyaW1pbmF0b3IgaW1wbGllcyBhIHByb3BlciBldmVudC5cbiAgICAgICAgY29uc3QgZXZlbnROYW1lID0gdGhpcy5kaXNjcmltaW5hdG9ycy5nZXQoZGlzYyk7XG4gICAgICAgIGlmICghZXZlbnROYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsYXlvdXQgPSB0aGlzLmxheW91dHMuZ2V0KGV2ZW50TmFtZSk7XG4gICAgICAgIGlmICghbGF5b3V0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gZXZlbnQ6ICR7ZXZlbnROYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRhdGEgPSBsYXlvdXQuZGVjb2RlKGxvZ0Fyci5zbGljZSg4KSk7XG4gICAgICAgIHJldHVybiB7IGRhdGEsIG5hbWU6IGV2ZW50TmFtZSB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJCdWZmZXIiLCJiYXNlNjQiLCJJZGxDb2RlciIsIkJvcnNoRXZlbnRDb2RlciIsImNvbnN0cnVjdG9yIiwiaWRsIiwiX2EiLCJldmVudHMiLCJsYXlvdXRzIiwiTWFwIiwidHlwZXMiLCJFcnJvciIsIm1hcCIsImV2IiwidHlwZURlZiIsImZpbmQiLCJ0eSIsIm5hbWUiLCJ0eXBlRGVmTGF5b3V0IiwiZGlzY3JpbWluYXRvcnMiLCJlbmNvZGUiLCJmcm9tIiwiZGlzY3JpbWluYXRvciIsImRlY29kZSIsImxvZyIsImxvZ0FyciIsImUiLCJkaXNjIiwic2xpY2UiLCJldmVudE5hbWUiLCJnZXQiLCJsYXlvdXQiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/event.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdlCoder: () => (/* binding */ IdlCoder)\n/* harmony export */ });\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\");\n\n\n\nclass IdlCoder {\n    static fieldLayout(field, types = [], genericArgs) {\n        const fieldName = field.name;\n        switch(field.type){\n            case \"bool\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.bool(fieldName);\n                }\n            case \"u8\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u8(fieldName);\n                }\n            case \"i8\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i8(fieldName);\n                }\n            case \"u16\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u16(fieldName);\n                }\n            case \"i16\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i16(fieldName);\n                }\n            case \"u32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u32(fieldName);\n                }\n            case \"i32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i32(fieldName);\n                }\n            case \"f32\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.f32(fieldName);\n                }\n            case \"u64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u64(fieldName);\n                }\n            case \"i64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i64(fieldName);\n                }\n            case \"f64\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.f64(fieldName);\n                }\n            case \"u128\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u128(fieldName);\n                }\n            case \"i128\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i128(fieldName);\n                }\n            case \"u256\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.u256(fieldName);\n                }\n            case \"i256\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.i256(fieldName);\n                }\n            case \"bytes\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.vecU8(fieldName);\n                }\n            case \"string\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.str(fieldName);\n                }\n            case \"pubkey\":\n                {\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.publicKey(fieldName);\n                }\n            default:\n                {\n                    if (\"option\" in field.type) {\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.option(IdlCoder.fieldLayout({\n                            type: field.type.option\n                        }, types, genericArgs), fieldName);\n                    }\n                    if (\"vec\" in field.type) {\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.vec(IdlCoder.fieldLayout({\n                            type: field.type.vec\n                        }, types, genericArgs), fieldName);\n                    }\n                    if (\"array\" in field.type) {\n                        let [type, len] = field.type.array;\n                        len = IdlCoder.resolveArrayLen(len, genericArgs);\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.array(IdlCoder.fieldLayout({\n                            type\n                        }, types, genericArgs), len, fieldName);\n                    }\n                    if (\"defined\" in field.type) {\n                        if (!types) {\n                            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(\"User defined types not provided\");\n                        }\n                        const definedName = field.type.defined.name;\n                        const typeDef = types.find((t)=>t.name === definedName);\n                        if (!typeDef) {\n                            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Type not found: ${field.name}`);\n                        }\n                        return IdlCoder.typeDefLayout({\n                            typeDef,\n                            types,\n                            genericArgs: genericArgs !== null && genericArgs !== void 0 ? genericArgs : field.type.defined.generics,\n                            name: fieldName\n                        });\n                    }\n                    if (\"generic\" in field.type) {\n                        const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n                        if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n                            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Invalid generic field: ${field.name}`);\n                        }\n                        return IdlCoder.fieldLayout({\n                            ...field,\n                            type: genericArg.type\n                        }, types);\n                    }\n                    throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Not yet implemented: ${JSON.stringify(field.type)}`);\n                }\n        }\n    }\n    /**\n     * Get the type layout of the given defined type(struct or enum).\n     */ static typeDefLayout({ typeDef, types, name, genericArgs }) {\n        switch(typeDef.type.kind){\n            case \"struct\":\n                {\n                    const fieldLayouts = (0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.handleDefinedFields)(typeDef.type.fields, ()=>[], (fields)=>fields.map((f)=>{\n                            const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                                type: f.type,\n                                typeDef,\n                                genericArgs\n                            }) : genericArgs;\n                            return IdlCoder.fieldLayout(f, types, genArgs);\n                        }), (fields)=>fields.map((f, i)=>{\n                            const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                                type: f,\n                                typeDef,\n                                genericArgs\n                            }) : genericArgs;\n                            return IdlCoder.fieldLayout({\n                                name: i.toString(),\n                                type: f\n                            }, types, genArgs);\n                        }));\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.struct(fieldLayouts, name);\n                }\n            case \"enum\":\n                {\n                    const variants = typeDef.type.variants.map((variant)=>{\n                        const fieldLayouts = (0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.handleDefinedFields)(variant.fields, ()=>[], (fields)=>fields.map((f)=>{\n                                const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                                    type: f.type,\n                                    typeDef,\n                                    genericArgs\n                                }) : genericArgs;\n                                return IdlCoder.fieldLayout(f, types, genArgs);\n                            }), (fields)=>fields.map((f, i)=>{\n                                const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                                    type: f,\n                                    typeDef,\n                                    genericArgs\n                                }) : genericArgs;\n                                return IdlCoder.fieldLayout({\n                                    name: i.toString(),\n                                    type: f\n                                }, types, genArgs);\n                            }));\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.struct(fieldLayouts, variant.name);\n                    });\n                    if (name !== undefined) {\n                        // Buffer-layout lib requires the name to be null (on construction)\n                        // when used as a field.\n                        return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.rustEnum(variants).replicate(name);\n                    }\n                    return _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_0__.rustEnum(variants, name);\n                }\n            case \"type\":\n                {\n                    return IdlCoder.fieldLayout({\n                        type: typeDef.type.alias,\n                        name\n                    }, types);\n                }\n        }\n    }\n    /**\n     * Get the type of the size in bytes. Returns `1` for variable length types.\n     */ static typeSize(ty, idl, genericArgs) {\n        var _a;\n        switch(ty){\n            case \"bool\":\n                return 1;\n            case \"u8\":\n                return 1;\n            case \"i8\":\n                return 1;\n            case \"i16\":\n                return 2;\n            case \"u16\":\n                return 2;\n            case \"u32\":\n                return 4;\n            case \"i32\":\n                return 4;\n            case \"f32\":\n                return 4;\n            case \"u64\":\n                return 8;\n            case \"i64\":\n                return 8;\n            case \"f64\":\n                return 8;\n            case \"u128\":\n                return 16;\n            case \"i128\":\n                return 16;\n            case \"u256\":\n                return 32;\n            case \"i256\":\n                return 32;\n            case \"bytes\":\n                return 1;\n            case \"string\":\n                return 1;\n            case \"pubkey\":\n                return 32;\n            default:\n                if (\"option\" in ty) {\n                    return 1 + IdlCoder.typeSize(ty.option, idl, genericArgs);\n                }\n                if (\"coption\" in ty) {\n                    return 4 + IdlCoder.typeSize(ty.coption, idl, genericArgs);\n                }\n                if (\"vec\" in ty) {\n                    return 1;\n                }\n                if (\"array\" in ty) {\n                    let [type, len] = ty.array;\n                    len = IdlCoder.resolveArrayLen(len, genericArgs);\n                    return IdlCoder.typeSize(type, idl, genericArgs) * len;\n                }\n                if (\"defined\" in ty) {\n                    const typeDef = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.find((t)=>t.name === ty.defined.name);\n                    if (!typeDef) {\n                        throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Type not found: ${JSON.stringify(ty)}`);\n                    }\n                    const typeSize = (type)=>{\n                        const genArgs = genericArgs !== null && genericArgs !== void 0 ? genericArgs : ty.defined.generics;\n                        const args = genArgs ? IdlCoder.resolveGenericArgs({\n                            type,\n                            typeDef,\n                            genericArgs: genArgs\n                        }) : genArgs;\n                        return IdlCoder.typeSize(type, idl, args);\n                    };\n                    switch(typeDef.type.kind){\n                        case \"struct\":\n                            {\n                                return (0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.handleDefinedFields)(typeDef.type.fields, ()=>[\n                                        0\n                                    ], (fields)=>fields.map((f)=>typeSize(f.type)), (fields)=>fields.map((f)=>typeSize(f))).reduce((acc, size)=>acc + size, 0);\n                            }\n                        case \"enum\":\n                            {\n                                const variantSizes = typeDef.type.variants.map((variant)=>{\n                                    return (0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.handleDefinedFields)(variant.fields, ()=>[\n                                            0\n                                        ], (fields)=>fields.map((f)=>typeSize(f.type)), (fields)=>fields.map((f)=>typeSize(f))).reduce((acc, size)=>acc + size, 0);\n                                });\n                                return Math.max(...variantSizes) + 1;\n                            }\n                        case \"type\":\n                            {\n                                return IdlCoder.typeSize(typeDef.type.alias, idl, genericArgs);\n                            }\n                    }\n                }\n                if (\"generic\" in ty) {\n                    const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n                    if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n                        throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(`Invalid generic: ${ty.generic}`);\n                    }\n                    return IdlCoder.typeSize(genericArg.type, idl, genericArgs);\n                }\n                throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n        }\n    }\n    /**\n     * Resolve the generic array length or return the constant-sized array length.\n     */ static resolveArrayLen(len, genericArgs) {\n        if (typeof len === \"number\") return len;\n        if (genericArgs) {\n            const genericLen = genericArgs.find((g)=>g.kind === \"const\");\n            if ((genericLen === null || genericLen === void 0 ? void 0 : genericLen.kind) === \"const\") {\n                len = +genericLen.value;\n            }\n        }\n        if (typeof len !== \"number\") {\n            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(\"Generic array length did not resolve\");\n        }\n        return len;\n    }\n    /**\n     * Recursively resolve generic arguments i.e. replace all generics with the\n     * actual type that they hold based on the initial `genericArgs` given.\n     */ static resolveGenericArgs({ type, typeDef, genericArgs, isDefined }) {\n        if (typeof type !== \"object\") return null;\n        for(const index in typeDef.generics){\n            const defGeneric = typeDef.generics[index];\n            if (\"generic\" in type && defGeneric.name === type.generic) {\n                return [\n                    genericArgs[index]\n                ];\n            }\n            if (\"option\" in type) {\n                const args = IdlCoder.resolveGenericArgs({\n                    type: type.option,\n                    typeDef,\n                    genericArgs,\n                    isDefined\n                });\n                if (!args || !isDefined) return args;\n                if (args[0].kind === \"type\") {\n                    return [\n                        {\n                            kind: \"type\",\n                            type: {\n                                option: args[0].type\n                            }\n                        }\n                    ];\n                }\n            }\n            if (\"vec\" in type) {\n                const args = IdlCoder.resolveGenericArgs({\n                    type: type.vec,\n                    typeDef,\n                    genericArgs,\n                    isDefined\n                });\n                if (!args || !isDefined) return args;\n                if (args[0].kind === \"type\") {\n                    return [\n                        {\n                            kind: \"type\",\n                            type: {\n                                vec: args[0].type\n                            }\n                        }\n                    ];\n                }\n            }\n            if (\"array\" in type) {\n                const [elTy, len] = type.array;\n                const isGenericLen = typeof len === \"object\";\n                const args = IdlCoder.resolveGenericArgs({\n                    type: elTy,\n                    typeDef,\n                    genericArgs,\n                    isDefined\n                });\n                if (args) {\n                    // Has generic type, also check for generic length\n                    for(const i in typeDef.generics.slice(+index)){\n                        const curIndex = +index + +i;\n                        if (isGenericLen && typeDef.generics[curIndex].name === len.generic) {\n                            args.push(genericArgs[curIndex]);\n                        }\n                    }\n                    if (!isDefined) return args;\n                    if (args[0].kind === \"type\" && args[1].kind === \"const\") {\n                        return [\n                            {\n                                kind: \"type\",\n                                type: {\n                                    array: [\n                                        args[0].type,\n                                        +args[1].value\n                                    ]\n                                }\n                            }\n                        ];\n                    }\n                }\n                // Only generic len\n                if (isGenericLen && defGeneric.name === len.generic) {\n                    const arg = genericArgs[index];\n                    if (!isDefined) return [\n                        arg\n                    ];\n                    return [\n                        {\n                            kind: \"type\",\n                            type: {\n                                array: [\n                                    elTy,\n                                    +arg.value\n                                ]\n                            }\n                        }\n                    ];\n                }\n                // Non-generic\n                return null;\n            }\n            if (\"defined\" in type) {\n                if (!type.defined.generics) return null;\n                return type.defined.generics.flatMap((g)=>{\n                    switch(g.kind){\n                        case \"type\":\n                            return IdlCoder.resolveGenericArgs({\n                                type: g.type,\n                                typeDef,\n                                genericArgs,\n                                isDefined: true\n                            });\n                        case \"const\":\n                            return [\n                                g\n                            ];\n                    }\n                }).filter((g)=>g !== null);\n            }\n        }\n        return null;\n    }\n} //# sourceMappingURL=idl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _accounts_js__WEBPACK_IMPORTED_MODULE_1__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* binding */ BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_2__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _instruction_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder),\n/* harmony export */   DISCRIMINATOR_SIZE: () => (/* reexport safe */ _discriminator_js__WEBPACK_IMPORTED_MODULE_4__.DISCRIMINATOR_SIZE)\n/* harmony export */ });\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/instruction.js\");\n/* harmony import */ var _accounts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accounts.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/accounts.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/event.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/types.js\");\n/* harmony import */ var _discriminator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./discriminator.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/discriminator.js\");\n\n\n\n\n\n\n\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */ class BorshCoder {\n    constructor(idl){\n        this.instruction = new _instruction_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder(idl);\n        this.accounts = new _accounts_js__WEBPACK_IMPORTED_MODULE_1__.BorshAccountsCoder(idl);\n        this.events = new _event_js__WEBPACK_IMPORTED_MODULE_2__.BorshEventCoder(idl);\n        this.types = new _types_js__WEBPACK_IMPORTED_MODULE_3__.BorshTypesCoder(idl);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDTjtBQUNOO0FBQ0E7QUFDWTtBQUNOO0FBQ0s7QUFDWDtBQUM3Qzs7O0NBR0MsR0FDTSxNQUFNSztJQUNUQyxZQUFZQyxHQUFHLENBQUU7UUFDYixJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJUixrRUFBcUJBLENBQUNPO1FBQzdDLElBQUksQ0FBQ0UsUUFBUSxHQUFHLElBQUlSLDREQUFrQkEsQ0FBQ007UUFDdkMsSUFBSSxDQUFDRyxNQUFNLEdBQUcsSUFBSVIsc0RBQWVBLENBQUNLO1FBQ2xDLElBQUksQ0FBQ0ksS0FBSyxHQUFHLElBQUlSLHNEQUFlQSxDQUFDSTtJQUNyQztBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC9pbmRleC5qcz9lNmU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvcnNoSW5zdHJ1Y3Rpb25Db2RlciB9IGZyb20gXCIuL2luc3RydWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBCb3JzaEFjY291bnRzQ29kZXIgfSBmcm9tIFwiLi9hY2NvdW50cy5qc1wiO1xuaW1wb3J0IHsgQm9yc2hFdmVudENvZGVyIH0gZnJvbSBcIi4vZXZlbnQuanNcIjtcbmltcG9ydCB7IEJvcnNoVHlwZXNDb2RlciB9IGZyb20gXCIuL3R5cGVzLmpzXCI7XG5leHBvcnQgeyBCb3JzaEluc3RydWN0aW9uQ29kZXIgfSBmcm9tIFwiLi9pbnN0cnVjdGlvbi5qc1wiO1xuZXhwb3J0IHsgQm9yc2hBY2NvdW50c0NvZGVyIH0gZnJvbSBcIi4vYWNjb3VudHMuanNcIjtcbmV4cG9ydCB7IERJU0NSSU1JTkFUT1JfU0laRSB9IGZyb20gXCIuL2Rpc2NyaW1pbmF0b3IuanNcIjtcbmV4cG9ydCB7IEJvcnNoRXZlbnRDb2RlciB9IGZyb20gXCIuL2V2ZW50LmpzXCI7XG4vKipcbiAqIEJvcnNoQ29kZXIgaXMgdGhlIGRlZmF1bHQgQ29kZXIgZm9yIEFuY2hvciBwcm9ncmFtcyBpbXBsZW1lbnRpbmcgdGhlXG4gKiBib3JzaCBiYXNlZCBzZXJpYWxpemF0aW9uIGludGVyZmFjZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEJvcnNoQ29kZXIge1xuICAgIGNvbnN0cnVjdG9yKGlkbCkge1xuICAgICAgICB0aGlzLmluc3RydWN0aW9uID0gbmV3IEJvcnNoSW5zdHJ1Y3Rpb25Db2RlcihpZGwpO1xuICAgICAgICB0aGlzLmFjY291bnRzID0gbmV3IEJvcnNoQWNjb3VudHNDb2RlcihpZGwpO1xuICAgICAgICB0aGlzLmV2ZW50cyA9IG5ldyBCb3JzaEV2ZW50Q29kZXIoaWRsKTtcbiAgICAgICAgdGhpcy50eXBlcyA9IG5ldyBCb3JzaFR5cGVzQ29kZXIoaWRsKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiQm9yc2hJbnN0cnVjdGlvbkNvZGVyIiwiQm9yc2hBY2NvdW50c0NvZGVyIiwiQm9yc2hFdmVudENvZGVyIiwiQm9yc2hUeXBlc0NvZGVyIiwiRElTQ1JJTUlOQVRPUl9TSVpFIiwiQm9yc2hDb2RlciIsImNvbnN0cnVjdG9yIiwiaWRsIiwiaW5zdHJ1Y3Rpb24iLCJhY2NvdW50cyIsImV2ZW50cyIsInR5cGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/instruction.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/instruction.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshInstructionCoder: () => (/* binding */ BorshInstructionCoder)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js\");\n\n\n\n\n\n\n/**\n * Encodes and decodes program instructions.\n */ class BorshInstructionCoder {\n    constructor(idl){\n        this.idl = idl;\n        const ixLayouts = idl.instructions.map((ix)=>{\n            const name = ix.name;\n            const fieldLayouts = ix.args.map((arg)=>_idl_js__WEBPACK_IMPORTED_MODULE_4__.IdlCoder.fieldLayout(arg, idl.types));\n            const layout = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_2__.struct(fieldLayouts, name);\n            return [\n                name,\n                {\n                    discriminator: ix.discriminator,\n                    layout\n                }\n            ];\n        });\n        this.ixLayouts = new Map(ixLayouts);\n        const sighashLayouts = ixLayouts.map(([name, { discriminator, layout }])=>{\n            return [\n                bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(discriminator),\n                {\n                    name,\n                    layout\n                }\n            ];\n        });\n        this.sighashLayouts = new Map(sighashLayouts);\n    }\n    /**\n     * Encodes a program instruction.\n     */ encode(ixName, ix) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const encoder = this.ixLayouts.get(ixName);\n        if (!encoder) {\n            throw new Error(`Unknown method: ${ixName}`);\n        }\n        const len = encoder.layout.encode(ix, buffer);\n        const data = buffer.slice(0, len);\n        return buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.concat([\n            buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(encoder.discriminator),\n            data\n        ]);\n    }\n    /**\n     * Decodes a program instruction.\n     */ decode(ix, encoding = \"hex\") {\n        if (typeof ix === \"string\") {\n            ix = encoding === \"hex\" ? buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(ix, \"hex\") : bs58__WEBPACK_IMPORTED_MODULE_0___default().decode(ix);\n        }\n        const disc = ix.slice(0, _index_js__WEBPACK_IMPORTED_MODULE_5__.DISCRIMINATOR_SIZE);\n        const data = ix.slice(_index_js__WEBPACK_IMPORTED_MODULE_5__.DISCRIMINATOR_SIZE);\n        const decoder = this.sighashLayouts.get(bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(disc));\n        if (!decoder) {\n            return null;\n        }\n        return {\n            name: decoder.name,\n            data: decoder.layout.decode(data)\n        };\n    }\n    /**\n     * Returns a formatted table of all the fields in the given instruction data.\n     */ format(ix, accountMetas) {\n        return InstructionFormatter.format(ix, accountMetas, this.idl);\n    }\n}\nclass InstructionFormatter {\n    static format(ix, accountMetas, idl) {\n        const idlIx = idl.instructions.find((i)=>ix.name === i.name);\n        if (!idlIx) {\n            console.error(\"Invalid instruction given\");\n            return null;\n        }\n        const args = idlIx.args.map((idlField)=>{\n            return {\n                name: idlField.name,\n                type: InstructionFormatter.formatIdlType(idlField.type),\n                data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types)\n            };\n        });\n        const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n        const accounts = accountMetas.map((meta, idx)=>{\n            if (idx < flatIdlAccounts.length) {\n                return {\n                    name: flatIdlAccounts[idx].name,\n                    ...meta\n                };\n            } else {\n                return {\n                    name: undefined,\n                    ...meta\n                };\n            }\n        });\n        return {\n            args,\n            accounts\n        };\n    }\n    static formatIdlType(idlType) {\n        if (typeof idlType === \"string\") {\n            return idlType;\n        }\n        if (\"option\" in idlType) {\n            return `Option<${this.formatIdlType(idlType.option)}>`;\n        }\n        if (\"coption\" in idlType) {\n            return `COption<${this.formatIdlType(idlType.coption)}>`;\n        }\n        if (\"vec\" in idlType) {\n            return `Vec<${this.formatIdlType(idlType.vec)}>`;\n        }\n        if (\"array\" in idlType) {\n            return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n        }\n        if (\"defined\" in idlType) {\n            const name = idlType.defined.name;\n            if (idlType.defined.generics) {\n                const generics = idlType.defined.generics.map((g)=>{\n                    switch(g.kind){\n                        case \"type\":\n                            return InstructionFormatter.formatIdlType(g.type);\n                        case \"const\":\n                            return g.value;\n                    }\n                }).join(\", \");\n                return `${name}<${generics}>`;\n            }\n            return name;\n        }\n        throw new Error(`Unknown IDL type: ${idlType}`);\n    }\n    static formatIdlData(idlField, data, types) {\n        if (typeof idlField.type === \"string\") {\n            return data.toString();\n        }\n        if (\"vec\" in idlField.type) {\n            return \"[\" + data.map((d)=>this.formatIdlData({\n                    name: \"\",\n                    type: idlField.type.vec\n                }, d, types)).join(\", \") + \"]\";\n        }\n        if (\"option\" in idlField.type) {\n            return data === null ? \"null\" : this.formatIdlData({\n                name: \"\",\n                type: idlField.type.option\n            }, data, types);\n        }\n        if (\"defined\" in idlField.type) {\n            if (!types) {\n                throw new Error(\"User defined types not provided\");\n            }\n            const definedName = idlField.type.defined.name;\n            const typeDef = types.find((t)=>t.name === definedName);\n            if (!typeDef) {\n                throw new Error(`Type not found: ${definedName}`);\n            }\n            return InstructionFormatter.formatIdlDataDefined(typeDef, data, types);\n        }\n        return \"unknown\";\n    }\n    static formatIdlDataDefined(typeDef, data, types) {\n        switch(typeDef.type.kind){\n            case \"struct\":\n                {\n                    return \"{ \" + (0,_idl_js__WEBPACK_IMPORTED_MODULE_3__.handleDefinedFields)(typeDef.type.fields, ()=>\"\", (fields)=>{\n                        return Object.entries(data).map(([key, val])=>{\n                            const field = fields.find((f)=>f.name === key);\n                            if (!field) {\n                                throw new Error(`Field not found: ${key}`);\n                            }\n                            return key + \": \" + InstructionFormatter.formatIdlData(field, val, types);\n                        }).join(\", \");\n                    }, (fields)=>{\n                        return Object.entries(data).map(([key, val])=>{\n                            return key + \": \" + InstructionFormatter.formatIdlData({\n                                name: \"\",\n                                type: fields[key]\n                            }, val, types);\n                        }).join(\", \");\n                    }) + \" }\";\n                }\n            case \"enum\":\n                {\n                    const variantName = Object.keys(data)[0];\n                    const variant = typeDef.type.variants.find((v)=>v.name === variantName);\n                    if (!variant) {\n                        throw new Error(`Unable to find variant: ${variantName}`);\n                    }\n                    const enumValue = data[variantName];\n                    return (0,_idl_js__WEBPACK_IMPORTED_MODULE_3__.handleDefinedFields)(variant.fields, ()=>variantName, (fields)=>{\n                        const namedFields = Object.keys(enumValue).map((f)=>{\n                            const fieldData = enumValue[f];\n                            const idlField = fields.find((v)=>v.name === f);\n                            if (!idlField) {\n                                throw new Error(`Field not found: ${f}`);\n                            }\n                            return f + \": \" + InstructionFormatter.formatIdlData(idlField, fieldData, types);\n                        }).join(\", \");\n                        return `${variantName} { ${namedFields} }`;\n                    }, (fields)=>{\n                        const tupleFields = Object.entries(enumValue).map(([key, val])=>{\n                            return key + \": \" + InstructionFormatter.formatIdlData({\n                                name: \"\",\n                                type: fields[key]\n                            }, val, types);\n                        }).join(\", \");\n                        return `${variantName} { ${tupleFields} }`;\n                    });\n                }\n            case \"type\":\n                {\n                    return InstructionFormatter.formatIdlType(typeDef.type.alias);\n                }\n        }\n    }\n    static flattenIdlAccounts(accounts, prefix) {\n        return accounts.map((account)=>{\n            const accName = sentenceCase(account.name);\n            if (account.hasOwnProperty(\"accounts\")) {\n                const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n                return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n            } else {\n                return {\n                    ...account,\n                    name: prefix ? `${prefix} > ${accName}` : accName\n                };\n            }\n        }).flat();\n    }\n}\nfunction sentenceCase(field) {\n    const result = field.replace(/([A-Z])/g, \" $1\");\n    return result.charAt(0).toUpperCase() + result.slice(1);\n} //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/instruction.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/types.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshTypesCoder: () => (/* binding */ BorshTypesCoder)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n/**\n * Encodes and decodes user-defined types.\n */ class BorshTypesCoder {\n    constructor(idl){\n        const types = idl.types;\n        if (!types) {\n            this.typeLayouts = new Map();\n            return;\n        }\n        const layouts = types.filter((ty)=>!ty.generics).map((ty)=>[\n                ty.name,\n                _idl_js__WEBPACK_IMPORTED_MODULE_1__.IdlCoder.typeDefLayout({\n                    typeDef: ty,\n                    types\n                })\n            ]);\n        this.typeLayouts = new Map(layouts);\n    }\n    encode(name, type) {\n        const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.typeLayouts.get(name);\n        if (!layout) {\n            throw new Error(`Unknown type: ${name}`);\n        }\n        const len = layout.encode(type, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(name, data) {\n        const layout = this.typeLayouts.get(name);\n        if (!layout) {\n            throw new Error(`Unknown type: ${name}`);\n        }\n        return layout.decode(data);\n    }\n} //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2JvcnNoL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFDSTtBQUNwQzs7Q0FFQyxHQUNNLE1BQU1FO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLE1BQU1DLFFBQVFELElBQUlDLEtBQUs7UUFDdkIsSUFBSSxDQUFDQSxPQUFPO1lBQ1IsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUM7WUFDdkI7UUFDSjtRQUNBLE1BQU1DLFVBQVVILE1BQ1hJLE1BQU0sQ0FBQyxDQUFDQyxLQUFPLENBQUNBLEdBQUdDLFFBQVEsRUFDM0JDLEdBQUcsQ0FBQyxDQUFDRixLQUFPO2dCQUNiQSxHQUFHRyxJQUFJO2dCQUNQWiw2Q0FBUUEsQ0FBQ2EsYUFBYSxDQUFDO29CQUFFQyxTQUFTTDtvQkFBSUw7Z0JBQU07YUFDL0M7UUFDRCxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJQyxJQUFJQztJQUMvQjtJQUNBUSxPQUFPSCxJQUFJLEVBQUVJLElBQUksRUFBRTtRQUNmLE1BQU1DLFNBQVNsQiwwQ0FBTUEsQ0FBQ21CLEtBQUssQ0FBQyxPQUFPLDhCQUE4QjtRQUNqRSxNQUFNQyxTQUFTLElBQUksQ0FBQ2QsV0FBVyxDQUFDZSxHQUFHLENBQUNSO1FBQ3BDLElBQUksQ0FBQ08sUUFBUTtZQUNULE1BQU0sSUFBSUUsTUFBTSxDQUFDLGNBQWMsRUFBRVQsS0FBSyxDQUFDO1FBQzNDO1FBQ0EsTUFBTVUsTUFBTUgsT0FBT0osTUFBTSxDQUFDQyxNQUFNQztRQUNoQyxPQUFPQSxPQUFPTSxLQUFLLENBQUMsR0FBR0Q7SUFDM0I7SUFDQUUsT0FBT1osSUFBSSxFQUFFYSxJQUFJLEVBQUU7UUFDZixNQUFNTixTQUFTLElBQUksQ0FBQ2QsV0FBVyxDQUFDZSxHQUFHLENBQUNSO1FBQ3BDLElBQUksQ0FBQ08sUUFBUTtZQUNULE1BQU0sSUFBSUUsTUFBTSxDQUFDLGNBQWMsRUFBRVQsS0FBSyxDQUFDO1FBQzNDO1FBQ0EsT0FBT08sT0FBT0ssTUFBTSxDQUFDQztJQUN6QjtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9jb2Rlci9ib3JzaC90eXBlcy5qcz9hODQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IElkbENvZGVyIH0gZnJvbSBcIi4vaWRsLmpzXCI7XG4vKipcbiAqIEVuY29kZXMgYW5kIGRlY29kZXMgdXNlci1kZWZpbmVkIHR5cGVzLlxuICovXG5leHBvcnQgY2xhc3MgQm9yc2hUeXBlc0NvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgY29uc3QgdHlwZXMgPSBpZGwudHlwZXM7XG4gICAgICAgIGlmICghdHlwZXMpIHtcbiAgICAgICAgICAgIHRoaXMudHlwZUxheW91dHMgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGF5b3V0cyA9IHR5cGVzXG4gICAgICAgICAgICAuZmlsdGVyKCh0eSkgPT4gIXR5LmdlbmVyaWNzKVxuICAgICAgICAgICAgLm1hcCgodHkpID0+IFtcbiAgICAgICAgICAgIHR5Lm5hbWUsXG4gICAgICAgICAgICBJZGxDb2Rlci50eXBlRGVmTGF5b3V0KHsgdHlwZURlZjogdHksIHR5cGVzIH0pLFxuICAgICAgICBdKTtcbiAgICAgICAgdGhpcy50eXBlTGF5b3V0cyA9IG5ldyBNYXAobGF5b3V0cyk7XG4gICAgfVxuICAgIGVuY29kZShuYW1lLCB0eXBlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygxMDAwKTsgLy8gVE9ETzogdXNlIGEgdGlnaHRlciBidWZmZXIuXG4gICAgICAgIGNvbnN0IGxheW91dCA9IHRoaXMudHlwZUxheW91dHMuZ2V0KG5hbWUpO1xuICAgICAgICBpZiAoIWxheW91dCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHR5cGU6ICR7bmFtZX1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsZW4gPSBsYXlvdXQuZW5jb2RlKHR5cGUsIGJ1ZmZlcik7XG4gICAgICAgIHJldHVybiBidWZmZXIuc2xpY2UoMCwgbGVuKTtcbiAgICB9XG4gICAgZGVjb2RlKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgY29uc3QgbGF5b3V0ID0gdGhpcy50eXBlTGF5b3V0cy5nZXQobmFtZSk7XG4gICAgICAgIGlmICghbGF5b3V0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdHlwZTogJHtuYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsYXlvdXQuZGVjb2RlKGRhdGEpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJCdWZmZXIiLCJJZGxDb2RlciIsIkJvcnNoVHlwZXNDb2RlciIsImNvbnN0cnVjdG9yIiwiaWRsIiwidHlwZXMiLCJ0eXBlTGF5b3V0cyIsIk1hcCIsImxheW91dHMiLCJmaWx0ZXIiLCJ0eSIsImdlbmVyaWNzIiwibWFwIiwibmFtZSIsInR5cGVEZWZMYXlvdXQiLCJ0eXBlRGVmIiwiZW5jb2RlIiwidHlwZSIsImJ1ZmZlciIsImFsbG9jIiwibGF5b3V0IiwiZ2V0IiwiRXJyb3IiLCJsZW4iLCJzbGljZSIsImRlY29kZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.BorshInstructionCoder),\n/* harmony export */   DISCRIMINATOR_SIZE: () => (/* reexport safe */ _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__.DISCRIMINATOR_SIZE),\n/* harmony export */   SystemCoder: () => (/* reexport safe */ _system_index_js__WEBPACK_IMPORTED_MODULE_1__.SystemCoder)\n/* harmony export */ });\n/* harmony import */ var _borsh_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./borsh/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/index.js\");\n/* harmony import */ var _system_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./system/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/index.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ0MsQ0FDbEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9jb2Rlci9pbmRleC5qcz81MmUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2JvcnNoL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zeXN0ZW0vaW5kZXguanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/accounts.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/system/accounts.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemAccountsCoder: () => (/* binding */ SystemAccountsCoder)\n/* harmony export */ });\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/../node_modules/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _borsh_idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../borsh/idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n\n\n\nclass SystemAccountsCoder {\n    constructor(idl){\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    const buffer = Buffer.alloc(_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH);\n                    const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n                    return buffer.slice(0, len);\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    decode(accountName, ix) {\n        return this.decodeUnchecked(accountName, ix);\n    }\n    decodeUnchecked(accountName, ix) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    return decodeNonceAccount(ix);\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    // TODO: this won't use the appendData.\n    memcmp(accountName, _appendData) {\n        switch(accountName){\n            case \"nonce\":\n                {\n                    return {\n                        dataSize: _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.NONCE_ACCOUNT_LENGTH\n                    };\n                }\n            default:\n                {\n                    throw new Error(`Invalid account name: ${accountName}`);\n                }\n        }\n    }\n    size(accountName) {\n        return _borsh_idl_js__WEBPACK_IMPORTED_MODULE_2__.IdlCoder.typeSize({\n            defined: {\n                name: accountName\n            }\n        }, this.idl);\n    }\n}\nfunction decodeNonceAccount(ix) {\n    return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_0__.Layout {\n    constructor(layout, decoder, encoder, property){\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_0__.blob(32), (b)=>new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(b), (key)=>key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32(\"version\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.u32(\"state\"),\n    publicKey(\"authorizedPubkey\"),\n    publicKey(\"nonce\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_0__.struct([\n        buffer_layout__WEBPACK_IMPORTED_MODULE_0__.nu64(\"lamportsPerSignature\")\n    ], \"feeCalculator\")\n]); //# sourceMappingURL=accounts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9hY2NvdW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQ29CO0FBQ3ZCO0FBQ3BDLE1BQU1JO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUksQ0FBQ0EsR0FBRyxHQUFHQTtJQUNmO0lBQ0EsTUFBTUMsT0FBT0MsV0FBVyxFQUFFQyxPQUFPLEVBQUU7UUFDL0IsT0FBUUQ7WUFDSixLQUFLO2dCQUFTO29CQUNWLE1BQU1FLFNBQVNDLE9BQU9DLEtBQUssQ0FBQ1gsaUVBQW9CQTtvQkFDaEQsTUFBTVksTUFBTUMscUJBQXFCUCxNQUFNLENBQUNFLFNBQVNDO29CQUNqRCxPQUFPQSxPQUFPSyxLQUFLLENBQUMsR0FBR0Y7Z0JBQzNCO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJRyxNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0FTLE9BQU9ULFdBQVcsRUFBRVUsRUFBRSxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxlQUFlLENBQUNYLGFBQWFVO0lBQzdDO0lBQ0FDLGdCQUFnQlgsV0FBVyxFQUFFVSxFQUFFLEVBQUU7UUFDN0IsT0FBUVY7WUFDSixLQUFLO2dCQUFTO29CQUNWLE9BQU9ZLG1CQUFtQkY7Z0JBQzlCO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJRixNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0EsdUNBQXVDO0lBQ3ZDYSxPQUFPYixXQUFXLEVBQUVjLFdBQVcsRUFBRTtRQUM3QixPQUFRZDtZQUNKLEtBQUs7Z0JBQVM7b0JBQ1YsT0FBTzt3QkFDSGUsVUFBVXRCLGlFQUFvQkE7b0JBQ2xDO2dCQUNKO1lBQ0E7Z0JBQVM7b0JBQ0wsTUFBTSxJQUFJZSxNQUFNLENBQUMsc0JBQXNCLEVBQUVSLFlBQVksQ0FBQztnQkFDMUQ7UUFDSjtJQUNKO0lBQ0FnQixLQUFLaEIsV0FBVyxFQUFFO1FBQ2QsT0FBT0wsbURBQVFBLENBQUNzQixRQUFRLENBQUM7WUFBRUMsU0FBUztnQkFBRUMsTUFBTW5CO1lBQVk7UUFBRSxHQUFHLElBQUksQ0FBQ0YsR0FBRztJQUN6RTtBQUNKO0FBQ0EsU0FBU2MsbUJBQW1CRixFQUFFO0lBQzFCLE9BQU9KLHFCQUFxQkcsTUFBTSxDQUFDQztBQUN2QztBQUNBLE1BQU1VLHNCQUFzQjVCLGlEQUFtQjtJQUMzQ0ssWUFBWXlCLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsQ0FBRTtRQUM1QyxLQUFLLENBQUNILE9BQU9JLElBQUksRUFBRUQ7UUFDbkIsSUFBSSxDQUFDSCxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO0lBQ25CO0lBQ0FmLE9BQU9rQixDQUFDLEVBQUVDLE1BQU0sRUFBRTtRQUNkLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUMsSUFBSSxDQUFDRCxNQUFNLENBQUNiLE1BQU0sQ0FBQ2tCLEdBQUdDO0lBQzlDO0lBQ0E3QixPQUFPOEIsR0FBRyxFQUFFRixDQUFDLEVBQUVDLE1BQU0sRUFBRTtRQUNuQixPQUFPLElBQUksQ0FBQ04sTUFBTSxDQUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQ3lCLE9BQU8sQ0FBQ0ssTUFBTUYsR0FBR0M7SUFDcEQ7SUFDQUUsUUFBUUgsQ0FBQyxFQUFFQyxNQUFNLEVBQUU7UUFDZixPQUFPLElBQUksQ0FBQ04sTUFBTSxDQUFDUSxPQUFPLENBQUNILEdBQUdDO0lBQ2xDO0FBQ0o7QUFDQSxTQUFTRyxVQUFVTixRQUFRO0lBQ3ZCLE9BQU8sSUFBSUwsY0FBYzVCLCtDQUFpQixDQUFDLEtBQUssQ0FBQ21DLElBQU0sSUFBSWpDLHNEQUFTQSxDQUFDaUMsSUFBSSxDQUFDTSxNQUFRQSxJQUFJQyxRQUFRLElBQUlUO0FBQ3RHO0FBQ0EsTUFBTW5CLHVCQUF1QmQsaURBQW1CLENBQUM7SUFDN0NBLDhDQUFnQixDQUFDO0lBQ2pCQSw4Q0FBZ0IsQ0FBQztJQUNqQnVDLFVBQVU7SUFDVkEsVUFBVTtJQUNWdkMsaURBQW1CLENBQUM7UUFBQ0EsK0NBQWlCLENBQUM7S0FBd0IsRUFBRTtDQUNwRSxHQUNELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL2FjY291bnRzLmpzPzM4NDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQnVmZmVyTGF5b3V0IGZyb20gXCJidWZmZXItbGF5b3V0XCI7XG5pbXBvcnQgeyBOT05DRV9BQ0NPVU5UX0xFTkdUSCwgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgSWRsQ29kZXIgfSBmcm9tIFwiLi4vYm9yc2gvaWRsLmpzXCI7XG5leHBvcnQgY2xhc3MgU3lzdGVtQWNjb3VudHNDb2RlciB7XG4gICAgY29uc3RydWN0b3IoaWRsKSB7XG4gICAgICAgIHRoaXMuaWRsID0gaWRsO1xuICAgIH1cbiAgICBhc3luYyBlbmNvZGUoYWNjb3VudE5hbWUsIGFjY291bnQpIHtcbiAgICAgICAgc3dpdGNoIChhY2NvdW50TmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcIm5vbmNlXCI6IHtcbiAgICAgICAgICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoTk9OQ0VfQUNDT1VOVF9MRU5HVEgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlbiA9IE5PTkNFX0FDQ09VTlRfTEFZT1VULmVuY29kZShhY2NvdW50LCBidWZmZXIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBidWZmZXIuc2xpY2UoMCwgbGVuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYWNjb3VudCBuYW1lOiAke2FjY291bnROYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRlY29kZShhY2NvdW50TmFtZSwgaXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlVW5jaGVja2VkKGFjY291bnROYW1lLCBpeCk7XG4gICAgfVxuICAgIGRlY29kZVVuY2hlY2tlZChhY2NvdW50TmFtZSwgaXgpIHtcbiAgICAgICAgc3dpdGNoIChhY2NvdW50TmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcIm5vbmNlXCI6IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2RlTm9uY2VBY2NvdW50KGl4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYWNjb3VudCBuYW1lOiAke2FjY291bnROYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFRPRE86IHRoaXMgd29uJ3QgdXNlIHRoZSBhcHBlbmREYXRhLlxuICAgIG1lbWNtcChhY2NvdW50TmFtZSwgX2FwcGVuZERhdGEpIHtcbiAgICAgICAgc3dpdGNoIChhY2NvdW50TmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcIm5vbmNlXCI6IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhU2l6ZTogTk9OQ0VfQUNDT1VOVF9MRU5HVEgsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYWNjb3VudCBuYW1lOiAke2FjY291bnROYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHNpemUoYWNjb3VudE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIElkbENvZGVyLnR5cGVTaXplKHsgZGVmaW5lZDogeyBuYW1lOiBhY2NvdW50TmFtZSB9IH0sIHRoaXMuaWRsKTtcbiAgICB9XG59XG5mdW5jdGlvbiBkZWNvZGVOb25jZUFjY291bnQoaXgpIHtcbiAgICByZXR1cm4gTk9OQ0VfQUNDT1VOVF9MQVlPVVQuZGVjb2RlKGl4KTtcbn1cbmNsYXNzIFdyYXBwZWRMYXlvdXQgZXh0ZW5kcyBCdWZmZXJMYXlvdXQuTGF5b3V0IHtcbiAgICBjb25zdHJ1Y3RvcihsYXlvdXQsIGRlY29kZXIsIGVuY29kZXIsIHByb3BlcnR5KSB7XG4gICAgICAgIHN1cGVyKGxheW91dC5zcGFuLCBwcm9wZXJ0eSk7XG4gICAgICAgIHRoaXMubGF5b3V0ID0gbGF5b3V0O1xuICAgICAgICB0aGlzLmRlY29kZXIgPSBkZWNvZGVyO1xuICAgICAgICB0aGlzLmVuY29kZXIgPSBlbmNvZGVyO1xuICAgIH1cbiAgICBkZWNvZGUoYiwgb2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlY29kZXIodGhpcy5sYXlvdXQuZGVjb2RlKGIsIG9mZnNldCkpO1xuICAgIH1cbiAgICBlbmNvZGUoc3JjLCBiLCBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LmVuY29kZSh0aGlzLmVuY29kZXIoc3JjKSwgYiwgb2Zmc2V0KTtcbiAgICB9XG4gICAgZ2V0U3BhbihiLCBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LmdldFNwYW4oYiwgb2Zmc2V0KTtcbiAgICB9XG59XG5mdW5jdGlvbiBwdWJsaWNLZXkocHJvcGVydHkpIHtcbiAgICByZXR1cm4gbmV3IFdyYXBwZWRMYXlvdXQoQnVmZmVyTGF5b3V0LmJsb2IoMzIpLCAoYikgPT4gbmV3IFB1YmxpY0tleShiKSwgKGtleSkgPT4ga2V5LnRvQnVmZmVyKCksIHByb3BlcnR5KTtcbn1cbmNvbnN0IE5PTkNFX0FDQ09VTlRfTEFZT1VUID0gQnVmZmVyTGF5b3V0LnN0cnVjdChbXG4gICAgQnVmZmVyTGF5b3V0LnUzMihcInZlcnNpb25cIiksXG4gICAgQnVmZmVyTGF5b3V0LnUzMihcInN0YXRlXCIpLFxuICAgIHB1YmxpY0tleShcImF1dGhvcml6ZWRQdWJrZXlcIiksXG4gICAgcHVibGljS2V5KFwibm9uY2VcIiksXG4gICAgQnVmZmVyTGF5b3V0LnN0cnVjdChbQnVmZmVyTGF5b3V0Lm51NjQoXCJsYW1wb3J0c1BlclNpZ25hdHVyZVwiKV0sIFwiZmVlQ2FsY3VsYXRvclwiKSxcbl0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudHMuanMubWFwIl0sIm5hbWVzIjpbIkJ1ZmZlckxheW91dCIsIk5PTkNFX0FDQ09VTlRfTEVOR1RIIiwiUHVibGljS2V5IiwiSWRsQ29kZXIiLCJTeXN0ZW1BY2NvdW50c0NvZGVyIiwiY29uc3RydWN0b3IiLCJpZGwiLCJlbmNvZGUiLCJhY2NvdW50TmFtZSIsImFjY291bnQiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvYyIsImxlbiIsIk5PTkNFX0FDQ09VTlRfTEFZT1VUIiwic2xpY2UiLCJFcnJvciIsImRlY29kZSIsIml4IiwiZGVjb2RlVW5jaGVja2VkIiwiZGVjb2RlTm9uY2VBY2NvdW50IiwibWVtY21wIiwiX2FwcGVuZERhdGEiLCJkYXRhU2l6ZSIsInNpemUiLCJ0eXBlU2l6ZSIsImRlZmluZWQiLCJuYW1lIiwiV3JhcHBlZExheW91dCIsIkxheW91dCIsImxheW91dCIsImRlY29kZXIiLCJlbmNvZGVyIiwicHJvcGVydHkiLCJzcGFuIiwiYiIsIm9mZnNldCIsInNyYyIsImdldFNwYW4iLCJwdWJsaWNLZXkiLCJibG9iIiwia2V5IiwidG9CdWZmZXIiLCJzdHJ1Y3QiLCJ1MzIiLCJudTY0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/accounts.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/events.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/system/events.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemEventsCoder: () => (/* binding */ SystemEventsCoder)\n/* harmony export */ });\nclass SystemEventsCoder {\n    constructor(_idl){}\n    decode(_log) {\n        throw new Error(\"System program does not have events\");\n    }\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9ldmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BO0lBQ1RDLFlBQVlDLElBQUksQ0FBRSxDQUFFO0lBQ3BCQyxPQUFPQyxJQUFJLEVBQUU7UUFDVCxNQUFNLElBQUlDLE1BQU07SUFDcEI7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL2V2ZW50cy5qcz82NWYzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTeXN0ZW1FdmVudHNDb2RlciB7XG4gICAgY29uc3RydWN0b3IoX2lkbCkgeyB9XG4gICAgZGVjb2RlKF9sb2cpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIHByb2dyYW0gZG9lcyBub3QgaGF2ZSBldmVudHNcIik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJTeXN0ZW1FdmVudHNDb2RlciIsImNvbnN0cnVjdG9yIiwiX2lkbCIsImRlY29kZSIsIl9sb2ciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/index.js":
/*!************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/system/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemCoder: () => (/* binding */ SystemCoder)\n/* harmony export */ });\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/instruction.js\");\n/* harmony import */ var _accounts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accounts.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/accounts.js\");\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/events.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/types.js\");\n\n\n\n\n/**\n * Coder for the System program.\n */ class SystemCoder {\n    constructor(idl){\n        this.instruction = new _instruction_js__WEBPACK_IMPORTED_MODULE_0__.SystemInstructionCoder(idl);\n        this.accounts = new _accounts_js__WEBPACK_IMPORTED_MODULE_1__.SystemAccountsCoder(idl);\n        this.events = new _events_js__WEBPACK_IMPORTED_MODULE_2__.SystemEventsCoder(idl);\n        this.types = new _types_js__WEBPACK_IMPORTED_MODULE_3__.SystemTypesCoder(idl);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUNOO0FBQ0o7QUFDRjtBQUM5Qzs7Q0FFQyxHQUNNLE1BQU1JO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlQLG1FQUFzQkEsQ0FBQ007UUFDOUMsSUFBSSxDQUFDRSxRQUFRLEdBQUcsSUFBSVAsNkRBQW1CQSxDQUFDSztRQUN4QyxJQUFJLENBQUNHLE1BQU0sR0FBRyxJQUFJUCx5REFBaUJBLENBQUNJO1FBQ3BDLElBQUksQ0FBQ0ksS0FBSyxHQUFHLElBQUlQLHVEQUFnQkEsQ0FBQ0c7SUFDdEM7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL2luZGV4LmpzPzNjNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3lzdGVtSW5zdHJ1Y3Rpb25Db2RlciB9IGZyb20gXCIuL2luc3RydWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBTeXN0ZW1BY2NvdW50c0NvZGVyIH0gZnJvbSBcIi4vYWNjb3VudHMuanNcIjtcbmltcG9ydCB7IFN5c3RlbUV2ZW50c0NvZGVyIH0gZnJvbSBcIi4vZXZlbnRzLmpzXCI7XG5pbXBvcnQgeyBTeXN0ZW1UeXBlc0NvZGVyIH0gZnJvbSBcIi4vdHlwZXMuanNcIjtcbi8qKlxuICogQ29kZXIgZm9yIHRoZSBTeXN0ZW0gcHJvZ3JhbS5cbiAqL1xuZXhwb3J0IGNsYXNzIFN5c3RlbUNvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpZGwpIHtcbiAgICAgICAgdGhpcy5pbnN0cnVjdGlvbiA9IG5ldyBTeXN0ZW1JbnN0cnVjdGlvbkNvZGVyKGlkbCk7XG4gICAgICAgIHRoaXMuYWNjb3VudHMgPSBuZXcgU3lzdGVtQWNjb3VudHNDb2RlcihpZGwpO1xuICAgICAgICB0aGlzLmV2ZW50cyA9IG5ldyBTeXN0ZW1FdmVudHNDb2RlcihpZGwpO1xuICAgICAgICB0aGlzLnR5cGVzID0gbmV3IFN5c3RlbVR5cGVzQ29kZXIoaWRsKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiU3lzdGVtSW5zdHJ1Y3Rpb25Db2RlciIsIlN5c3RlbUFjY291bnRzQ29kZXIiLCJTeXN0ZW1FdmVudHNDb2RlciIsIlN5c3RlbVR5cGVzQ29kZXIiLCJTeXN0ZW1Db2RlciIsImNvbnN0cnVjdG9yIiwiaWRsIiwiaW5zdHJ1Y3Rpb24iLCJhY2NvdW50cyIsImV2ZW50cyIsInR5cGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/instruction.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/system/instruction.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemInstructionCoder: () => (/* binding */ SystemInstructionCoder)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(ssr)/../node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/../node_modules/buffer-layout/lib/Layout.js\");\n\n\nclass SystemInstructionCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_){}\n    encode(ixName, ix) {\n        switch(ixName){\n            case \"createAccount\":\n                {\n                    return encodeCreateAccount(ix);\n                }\n            case \"assign\":\n                {\n                    return encodeAssign(ix);\n                }\n            case \"transfer\":\n                {\n                    return encodeTransfer(ix);\n                }\n            case \"createAccountWithSeed\":\n                {\n                    return encodeCreateAccountWithSeed(ix);\n                }\n            case \"advanceNonceAccount\":\n                {\n                    return encodeAdvanceNonceAccount(ix);\n                }\n            case \"withdrawNonceAccount\":\n                {\n                    return encodeWithdrawNonceAccount(ix);\n                }\n            case \"initializeNonceAccount\":\n                {\n                    return encodeInitializeNonceAccount(ix);\n                }\n            case \"authorizeNonceAccount\":\n                {\n                    return encodeAuthorizeNonceAccount(ix);\n                }\n            case \"allocate\":\n                {\n                    return encodeAllocate(ix);\n                }\n            case \"allocateWithSeed\":\n                {\n                    return encodeAllocateWithSeed(ix);\n                }\n            case \"assignWithSeed\":\n                {\n                    return encodeAssignWithSeed(ix);\n                }\n            case \"transferWithSeed\":\n                {\n                    return encodeTransferWithSeed(ix);\n                }\n            default:\n                {\n                    throw new Error(`Invalid instruction: ${ixName}`);\n                }\n        }\n    }\n    encodeState(_ixName, _ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\nclass RustStringLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(property){\n        super(-1, property);\n        this.property = property;\n        this.layout = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"length\"),\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"lengthPadding\"),\n            buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.offset(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(), -8), \"chars\")\n        ], this.property);\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span;\n        }\n        const data = {\n            chars: Buffer.from(src, \"utf8\")\n        };\n        return this.layout.encode(data, b, offset);\n    }\n    decode(b, offset = 0) {\n        const data = this.layout.decode(b, offset);\n        return data[\"chars\"].toString();\n    }\n    getSpan(b, offset = 0) {\n        return buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32().span + buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32().span + new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber();\n    }\n}\nfunction rustStringLayout(property) {\n    return new RustStringLayout(property);\n}\nfunction publicKey(property) {\n    return buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(32, property);\n}\nfunction encodeCreateAccount({ lamports, space, owner }) {\n    return encodeData({\n        createAccount: {\n            lamports,\n            space,\n            owner: owner.toBuffer()\n        }\n    });\n}\nfunction encodeAssign({ owner }) {\n    return encodeData({\n        assign: {\n            owner: owner.toBuffer()\n        }\n    });\n}\nfunction encodeTransfer({ lamports }) {\n    return encodeData({\n        transfer: {\n            lamports\n        }\n    });\n}\nfunction encodeCreateAccountWithSeed({ base, seed, lamports, space, owner }) {\n    return encodeData({\n        createAccountWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            lamports,\n            space,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({ authorized }) {\n    return encodeData({\n        initializeNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeAdvanceNonceAccount({ authorized }) {\n    return encodeData({\n        advanceNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeWithdrawNonceAccount({ lamports }) {\n    return encodeData({\n        withdrawNonceAccount: {\n            lamports\n        }\n    });\n}\nfunction encodeAuthorizeNonceAccount({ authorized }) {\n    return encodeData({\n        authorizeNonceAccount: {\n            authorized: authorized.toBuffer()\n        }\n    });\n}\nfunction encodeAllocate({ space }) {\n    return encodeData({\n        allocate: {\n            space\n        }\n    });\n}\nfunction encodeAllocateWithSeed({ base, seed, space, owner }) {\n    return encodeData({\n        allocateWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            space,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({ base, seed, owner }) {\n    return encodeData({\n        assignWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({ lamports, seed, owner }) {\n    return encodeData({\n        transferWithSeed: {\n            lamports,\n            seed,\n            owner: owner.toBuffer()\n        }\n    }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.union(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32(\"instruction\"));\nLAYOUT.addVariant(0, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"createAccount\");\nLAYOUT.addVariant(1, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"owner\")\n]), \"assign\");\nLAYOUT.addVariant(2, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\")\n]), \"transfer\");\nLAYOUT.addVariant(3, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\")\n]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"authorized\")\n]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\")\n]), \"allocate\");\nLAYOUT.addVariant(9, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"space\"),\n    publicKey(\"owner\")\n]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"base\"),\n    rustStringLayout(\"seed\"),\n    publicKey(\"owner\")\n]), \"assignWithSeed\");\nLAYOUT.addVariant(11, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    buffer_layout__WEBPACK_IMPORTED_MODULE_1__.ns64(\"lamports\"),\n    rustStringLayout(\"seed\"),\n    publicKey(\"owner\")\n]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n    const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    if (maxSpan === undefined) {\n        return b.slice(0, span);\n    }\n    return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r)=>r.span)); //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/instruction.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/types.js":
/*!************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/coder/system/types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemTypesCoder: () => (/* binding */ SystemTypesCoder)\n/* harmony export */ });\nclass SystemTypesCoder {\n    constructor(_idl){}\n    encode(_name, _type) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n    decode(_name, _typeData) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n} //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2NvZGVyL3N5c3RlbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7SUFDVEMsWUFBWUMsSUFBSSxDQUFFLENBQUU7SUFDcEJDLE9BQU9DLEtBQUssRUFBRUMsS0FBSyxFQUFFO1FBQ2pCLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBQyxPQUFPSCxLQUFLLEVBQUVJLFNBQVMsRUFBRTtRQUNyQixNQUFNLElBQUlGLE1BQU07SUFDcEI7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vY29kZXIvc3lzdGVtL3R5cGVzLmpzP2Q3N2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFN5c3RlbVR5cGVzQ29kZXIge1xuICAgIGNvbnN0cnVjdG9yKF9pZGwpIHsgfVxuICAgIGVuY29kZShfbmFtZSwgX3R5cGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGRvZXMgbm90IGhhdmUgdXNlci1kZWZpbmVkIHR5cGVzXCIpO1xuICAgIH1cbiAgICBkZWNvZGUoX25hbWUsIF90eXBlRGF0YSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTeXN0ZW0gZG9lcyBub3QgaGF2ZSB1c2VyLWRlZmluZWQgdHlwZXNcIik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIlN5c3RlbVR5cGVzQ29kZXIiLCJjb25zdHJ1Y3RvciIsIl9pZGwiLCJlbmNvZGUiLCJfbmFtZSIsIl90eXBlIiwiRXJyb3IiLCJkZWNvZGUiLCJfdHlwZURhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js":
/*!***********************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/error.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnchorError: () => (/* binding */ AnchorError),\n/* harmony export */   IdlError: () => (/* binding */ IdlError),\n/* harmony export */   LangErrorCode: () => (/* binding */ LangErrorCode),\n/* harmony export */   LangErrorMessage: () => (/* binding */ LangErrorMessage),\n/* harmony export */   ProgramError: () => (/* binding */ ProgramError),\n/* harmony export */   ProgramErrorStack: () => (/* binding */ ProgramErrorStack),\n/* harmony export */   translateError: () => (/* binding */ translateError)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coral-xyz/anchor-errors */ \"(ssr)/../node_modules/@coral-xyz/anchor-errors/dist/index.js\");\n/* harmony import */ var _utils_features_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/features.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js\");\n\n\n\nclass IdlError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"IdlError\";\n    }\n}\nclass ProgramErrorStack {\n    constructor(stack){\n        this.stack = stack;\n    }\n    static parse(logs) {\n        var _a;\n        const programKeyRegex = /^Program (\\w*) invoke/;\n        const successRegex = /^Program \\w* success/;\n        const programStack = [];\n        for(let i = 0; i < logs.length; i++){\n            if (successRegex.exec(logs[i])) {\n                programStack.pop();\n                continue;\n            }\n            const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n            if (!programKey) {\n                continue;\n            }\n            programStack.push(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(programKey));\n        }\n        return new ProgramErrorStack(programStack);\n    }\n}\nclass AnchorError extends Error {\n    constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues){\n        super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n        this.errorLogs = errorLogs;\n        this.logs = logs;\n        this.error = {\n            errorCode,\n            errorMessage,\n            comparedValues,\n            origin\n        };\n        this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    static parse(logs) {\n        if (!logs) {\n            return null;\n        }\n        const anchorErrorLogIndex = logs.findIndex((log)=>log.startsWith(\"Program log: AnchorError\"));\n        if (anchorErrorLogIndex === -1) {\n            return null;\n        }\n        const anchorErrorLog = logs[anchorErrorLogIndex];\n        const errorLogs = [\n            anchorErrorLog\n        ];\n        let comparedValues;\n        if (anchorErrorLogIndex + 1 < logs.length) {\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left:\n            // <Pubkey>\n            // Right:\n            // <Pubkey>\n            if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n                const pubkeyRegex = /^Program log: (.*)$/;\n                const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n                const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n                comparedValues = [\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(leftPubkey),\n                    new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(rightPubkey)\n                ];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n            } else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n                const valueRegex = /^Program log: (Left|Right): (.*)$/;\n                const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n                const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n                comparedValues = [\n                    leftValue,\n                    rightValue\n                ];\n            }\n        }\n        const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n        const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n        const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n        if (noInfoAnchorErrorLog) {\n            const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n        } else if (fileLineAnchorErrorLog) {\n            const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            const fileLine = {\n                file,\n                line: parseInt(line)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n        } else if (accountNameAnchorErrorLog) {\n            const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n            const origin = accountName;\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber)\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n        } else {\n            return null;\n        }\n    }\n    get program() {\n        return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        return this._programErrorStack.stack;\n    }\n    toString() {\n        return this.message;\n    }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n    constructor(code, msg, logs){\n        super();\n        this.code = code;\n        this.msg = msg;\n        this.logs = logs;\n        if (logs) {\n            this._programErrorStack = ProgramErrorStack.parse(logs);\n        }\n    }\n    static parse(err, idlErrors) {\n        const errString = err.toString();\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let unparsedErrorCode;\n        if (errString.includes(\"custom program error:\")) {\n            let components = errString.split(\"custom program error: \");\n            if (components.length !== 2) {\n                return null;\n            } else {\n                unparsedErrorCode = components[1];\n            }\n        } else {\n            const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n            if (!matches || matches.length > 1) {\n                return null;\n            }\n            unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(unparsedErrorCode);\n        } catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    get program() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nfunction translateError(err, idlErrors) {\n    if (_utils_features_js__WEBPACK_IMPORTED_MODULE_2__.isSet(\"debug-logs\")) {\n        console.log(\"Translating error:\", err);\n    }\n    const anchorError = AnchorError.parse(err.logs);\n    if (anchorError) {\n        return anchorError;\n    }\n    const programError = ProgramError.parse(err, idlErrors);\n    if (programError) {\n        return programError;\n    }\n    if (err.logs) {\n        const handler = {\n            get: function(target, prop) {\n                if (prop === \"programErrorStack\") {\n                    return target.programErrorStack.stack;\n                } else if (prop === \"program\") {\n                    return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n                } else {\n                    // this is the normal way to return all other props\n                    // without modifying them.\n                    // @ts-expect-error\n                    return Reflect.get(...arguments);\n                }\n            }\n        };\n        err.programErrorStack = ProgramErrorStack.parse(err.logs);\n        return new Proxy(err, handler);\n    }\n    return err;\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INSTRUCTION_MISSING,\n    InstructionFallbackNotFound: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND,\n    InstructionDidNotDeserialize: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE,\n    InstructionDidNotSerialize: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE,\n    // IDL instructions.\n    IdlInstructionStub: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__IDL_INSTRUCTION_STUB,\n    IdlInstructionInvalidProgram: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM,\n    IdlAccountNotEmpty: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY,\n    // Event instructions.\n    EventInstructionStub: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB,\n    // Constraints.\n    ConstraintMut: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MUT,\n    ConstraintHasOne: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_HAS_ONE,\n    ConstraintSigner: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_SIGNER,\n    ConstraintRaw: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_RAW,\n    ConstraintOwner: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_OWNER,\n    ConstraintRentExempt: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT,\n    ConstraintSeeds: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_SEEDS,\n    ConstraintExecutable: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE,\n    ConstraintState: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_STATE,\n    ConstraintAssociated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED,\n    ConstraintAssociatedInit: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT,\n    ConstraintClose: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_CLOSE,\n    ConstraintAddress: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ADDRESS,\n    ConstraintZero: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ZERO,\n    ConstraintTokenMint: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT,\n    ConstraintTokenOwner: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER,\n    ConstraintMintMintAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY,\n    ConstraintMintFreezeAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY,\n    ConstraintMintDecimals: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS,\n    ConstraintSpace: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_SPACE,\n    ConstraintAccountIsNone: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE,\n    ConstraintTokenTokenProgram: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM,\n    ConstraintMintTokenProgram: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM,\n    ConstraintAssociatedTokenTokenProgram: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM,\n    ConstraintMintGroupPointerExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION,\n    ConstraintMintGroupPointerExtensionAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintGroupPointerExtensionGroupAddress: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS,\n    ConstraintMintGroupMemberPointerExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION,\n    ConstraintMintGroupMemberPointerExtensionAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintGroupMemberPointerExtensionMemberAddress: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS,\n    ConstraintMintMetadataPointerExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION,\n    ConstraintMintMetadataPointerExtensionAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintMetadataPointerExtensionMetadataAddress: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS,\n    ConstraintMintCloseAuthorityExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION,\n    ConstraintMintCloseAuthorityExtensionAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY,\n    ConstraintMintPermanentDelegateExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION,\n    ConstraintMintPermanentDelegateExtensionDelegate: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE,\n    ConstraintMintTransferHookExtension: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION,\n    ConstraintMintTransferHookExtensionAuthority: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY,\n    ConstraintMintTransferHookExtensionProgramId: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID,\n    // Require.\n    RequireViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_VIOLATED,\n    RequireEqViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED,\n    RequireKeysEqViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED,\n    RequireNeqViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED,\n    RequireKeysNeqViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED,\n    RequireGtViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_GT_VIOLATED,\n    RequireGteViolated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET,\n    AccountDiscriminatorNotFound: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND,\n    AccountDiscriminatorMismatch: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH,\n    AccountDidNotDeserialize: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE,\n    AccountDidNotSerialize: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE,\n    AccountNotEnoughKeys: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS,\n    AccountNotMutable: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE,\n    AccountOwnedByWrongProgram: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM,\n    InvalidProgramId: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INVALID_PROGRAM_ID,\n    InvalidProgramExecutable: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE,\n    AccountNotSigner: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER,\n    AccountNotSystemOwned: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED,\n    AccountNotInitialized: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED,\n    AccountNotProgramData: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA,\n    AccountNotAssociatedTokenAccount: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT,\n    AccountSysvarMismatch: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH,\n    AccountReallocExceedsLimit: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT,\n    AccountDuplicateReallocs: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS,\n    // Miscellaneous\n    DeclaredProgramIdMismatch: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH,\n    TryingToInitPayerAsProgramAccount: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT,\n    InvalidNumericConversion: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: _coral_xyz_anchor_errors__WEBPACK_IMPORTED_MODULE_1__.ANCHOR_ERROR__DEPRECATED\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\"\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\"\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\"\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\"\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\"\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\"\n    ],\n    [\n        LangErrorCode.IdlAccountNotEmpty,\n        \"IDL account must be empty in order to resize, try closing first\"\n    ],\n    // Event instructions.\n    [\n        LangErrorCode.EventInstructionStub,\n        \"The program was compiled without `event-cpi` feature\"\n    ],\n    // Constraints.\n    [\n        LangErrorCode.ConstraintMut,\n        \"A mut constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintHasOne,\n        \"A has one constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSigner,\n        \"A signer constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintRaw,\n        \"A raw constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintOwner,\n        \"An owner constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintRentExempt,\n        \"A rent exemption constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSeeds,\n        \"A seeds constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintExecutable,\n        \"An executable constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintState,\n        \"Deprecated Error, feel free to replace with something else\"\n    ],\n    [\n        LangErrorCode.ConstraintAssociated,\n        \"An associated constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintClose,\n        \"A close constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAddress,\n        \"An address constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintZero,\n        \"Expected zero account discriminant\"\n    ],\n    [\n        LangErrorCode.ConstraintTokenMint,\n        \"A token mint constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintTokenOwner,\n        \"A token owner constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintMintAuthority,\n        \"A mint mint authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintFreezeAuthority,\n        \"A mint freeze authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintDecimals,\n        \"A mint decimals constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintSpace,\n        \"A space constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAccountIsNone,\n        \"A required account for the constraint is None\"\n    ],\n    [\n        LangErrorCode.ConstraintTokenTokenProgram,\n        \"A token account token program constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintTokenProgram,\n        \"A mint token program constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintAssociatedTokenTokenProgram,\n        \"An associated token account token program constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtension,\n        \"A group pointer extension constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtensionAuthority,\n        \"A group pointer extension authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtensionGroupAddress,\n        \"A group pointer extension group address constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtension,\n        \"A group member pointer extension constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtensionAuthority,\n        \"A group member pointer extension authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtensionMemberAddress,\n        \"A group member pointer extension group address constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtension,\n        \"A metadata pointer extension constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtensionAuthority,\n        \"A metadata pointer extension authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtensionMetadataAddress,\n        \"A metadata pointer extension metadata address constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintCloseAuthorityExtension,\n        \"A close authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintCloseAuthorityExtensionAuthority,\n        \"A close authority extension authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintPermanentDelegateExtension,\n        \"A permanent delegate extension constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintPermanentDelegateExtensionDelegate,\n        \"A permanent delegate extension delegate constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtension,\n        \"A transfer hook extension constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtensionAuthority,\n        \"A transfer hook extension authority constraint was violated\"\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtensionProgramId,\n        \"A transfer hook extension transfer hook program id constraint was violated\"\n    ],\n    // Require.\n    [\n        LangErrorCode.RequireViolated,\n        \"A require expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireEqViolated,\n        \"A require_eq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireKeysEqViolated,\n        \"A require_keys_eq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireNeqViolated,\n        \"A require_neq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireKeysNeqViolated,\n        \"A require_keys_neq expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireGtViolated,\n        \"A require_gt expression was violated\"\n    ],\n    [\n        LangErrorCode.RequireGteViolated,\n        \"A require_gte expression was violated\"\n    ],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\"\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\"\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\"\n    ],\n    [\n        LangErrorCode.AccountDidNotDeserialize,\n        \"Failed to deserialize the account\"\n    ],\n    [\n        LangErrorCode.AccountDidNotSerialize,\n        \"Failed to serialize the account\"\n    ],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\"\n    ],\n    [\n        LangErrorCode.AccountNotMutable,\n        \"The given account is not mutable\"\n    ],\n    [\n        LangErrorCode.AccountOwnedByWrongProgram,\n        \"The given account is owned by a different program than expected\"\n    ],\n    [\n        LangErrorCode.InvalidProgramId,\n        \"Program ID was not as expected\"\n    ],\n    [\n        LangErrorCode.InvalidProgramExecutable,\n        \"Program account is not executable\"\n    ],\n    [\n        LangErrorCode.AccountNotSigner,\n        \"The given account did not sign\"\n    ],\n    [\n        LangErrorCode.AccountNotSystemOwned,\n        \"The given account is not owned by the system program\"\n    ],\n    [\n        LangErrorCode.AccountNotInitialized,\n        \"The program expected this account to be already initialized\"\n    ],\n    [\n        LangErrorCode.AccountNotProgramData,\n        \"The given account is not a program data account\"\n    ],\n    [\n        LangErrorCode.AccountNotAssociatedTokenAccount,\n        \"The given account is not the associated token account\"\n    ],\n    [\n        LangErrorCode.AccountSysvarMismatch,\n        \"The given public key does not match the required sysvar\"\n    ],\n    [\n        LangErrorCode.AccountReallocExceedsLimit,\n        \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\"\n    ],\n    [\n        LangErrorCode.AccountDuplicateReallocs,\n        \"The account was duplicated for more than one reallocation\"\n    ],\n    // Miscellaneous\n    [\n        LangErrorCode.DeclaredProgramIdMismatch,\n        \"The declared program id does not match the actual program id\"\n    ],\n    [\n        LangErrorCode.TryingToInitPayerAsProgramAccount,\n        \"You cannot/should not initialize the payer account as a program account\"\n    ],\n    [\n        LangErrorCode.InvalidNumericConversion,\n        \"The program could not perform the numeric conversion, out of range integral type conversion attempted\"\n    ],\n    // Deprecated\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\"\n    ]\n]); //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js":
/*!*********************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/idl.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertIdlToCamelCase: () => (/* binding */ convertIdlToCamelCase),\n/* harmony export */   decodeIdlAccount: () => (/* binding */ decodeIdlAccount),\n/* harmony export */   encodeIdlAccount: () => (/* binding */ encodeIdlAccount),\n/* harmony export */   handleDefinedFields: () => (/* binding */ handleDefinedFields),\n/* harmony export */   idlAddress: () => (/* binding */ idlAddress),\n/* harmony export */   isCompositeAccounts: () => (/* binding */ isCompositeAccounts),\n/* harmony export */   seed: () => (/* binding */ seed)\n/* harmony export */ });\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase */ \"(ssr)/../node_modules/camelcase/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(camelcase__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction isCompositeAccounts(accountItem) {\n    return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n    const base = (await _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.findProgramAddress([], programId))[0];\n    return await _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3__.struct([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3__.publicKey(\"authority\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_3__.vecU8(\"data\")\n]);\nfunction decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\nfunction encodeIdlAccount(acc) {\n    const buffer = buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = IDL_ACCOUNT_LAYOUT.encode(acc, buffer);\n    return buffer.slice(0, len);\n}\n/**\n * Convert the given IDL to camelCase.\n *\n * The IDL is generated from Rust which has different conventions compared to\n * JS/TS, e.g. instruction names in Rust are snake_case.\n *\n * The conversion happens automatically for programs, however, if you are using\n * internals such as `BorshInstructionCoder` and you only have the original\n * (not camelCase) IDL, you might need to use this function.\n *\n * @param idl IDL to convert to camelCase\n * @returns camelCase version of the IDL\n */ function convertIdlToCamelCase(idl) {\n    const KEYS_TO_CONVERT = [\n        \"name\",\n        \"path\",\n        \"account\",\n        \"relations\",\n        \"generic\"\n    ];\n    // `my_account.field` is getting converted to `myAccountField` but we\n    // need `myAccount.field`.\n    const toCamelCase = (s)=>s.split(\".\").map((camelcase__WEBPACK_IMPORTED_MODULE_0___default())).join(\".\");\n    const recursivelyConvertNamesToCamelCase = (obj)=>{\n        for(const key in obj){\n            const val = obj[key];\n            if (KEYS_TO_CONVERT.includes(key)) {\n                obj[key] = Array.isArray(val) ? val.map(toCamelCase) : toCamelCase(val);\n            } else if (typeof val === \"object\") {\n                recursivelyConvertNamesToCamelCase(val);\n            }\n        }\n    };\n    const camelCasedIdl = structuredClone(idl);\n    recursivelyConvertNamesToCamelCase(camelCasedIdl);\n    return camelCasedIdl;\n}\n/** Conveniently handle all defined field kinds with proper type support. */ function handleDefinedFields(fields, unitCb, namedCb, tupleCb) {\n    // Unit\n    if (!(fields === null || fields === void 0 ? void 0 : fields.length)) return unitCb();\n    // Named\n    if (fields[0].name) {\n        return namedCb(fields);\n    }\n    // Tuple\n    return tupleCb(fields);\n} //# sourceMappingURL=idl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2lkbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFrQztBQUNGO0FBQ1k7QUFDRjtBQUNuQyxTQUFTSSxvQkFBb0JDLFdBQVc7SUFDM0MsT0FBTyxjQUFjQTtBQUN6QjtBQUNBLDZEQUE2RDtBQUN0RCxlQUFlQyxXQUFXQyxTQUFTO0lBQ3RDLE1BQU1DLE9BQU8sQ0FBQyxNQUFNTixzREFBU0EsQ0FBQ08sa0JBQWtCLENBQUMsRUFBRSxFQUFFRixVQUFTLENBQUUsQ0FBQyxFQUFFO0lBQ25FLE9BQU8sTUFBTUwsc0RBQVNBLENBQUNRLGNBQWMsQ0FBQ0YsTUFBTUcsUUFBUUo7QUFDeEQ7QUFDQSxzQ0FBc0M7QUFDL0IsU0FBU0k7SUFDWixPQUFPO0FBQ1g7QUFDQSxNQUFNQyxxQkFBcUJULG9EQUFZLENBQUM7SUFDcENBLHVEQUFlLENBQUM7SUFDaEJBLG1EQUFXLENBQUM7Q0FDZjtBQUNNLFNBQVNhLGlCQUFpQkMsSUFBSTtJQUNqQyxPQUFPTCxtQkFBbUJNLE1BQU0sQ0FBQ0Q7QUFDckM7QUFDTyxTQUFTRSxpQkFBaUJDLEdBQUc7SUFDaEMsTUFBTUMsU0FBU3BCLDBDQUFNQSxDQUFDcUIsS0FBSyxDQUFDLE9BQU8sOEJBQThCO0lBQ2pFLE1BQU1DLE1BQU1YLG1CQUFtQlksTUFBTSxDQUFDSixLQUFLQztJQUMzQyxPQUFPQSxPQUFPSSxLQUFLLENBQUMsR0FBR0Y7QUFDM0I7QUFDQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxTQUFTRyxzQkFBc0JDLEdBQUc7SUFDckMsTUFBTUMsa0JBQWtCO1FBQUM7UUFBUTtRQUFRO1FBQVc7UUFBYTtLQUFVO0lBQzNFLHFFQUFxRTtJQUNyRSwwQkFBMEI7SUFDMUIsTUFBTUMsY0FBYyxDQUFDQyxJQUFNQSxFQUFFQyxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDaEMsa0RBQVNBLEVBQUVpQyxJQUFJLENBQUM7SUFDNUQsTUFBTUMscUNBQXFDLENBQUNDO1FBQ3hDLElBQUssTUFBTUMsT0FBT0QsSUFBSztZQUNuQixNQUFNRSxNQUFNRixHQUFHLENBQUNDLElBQUk7WUFDcEIsSUFBSVIsZ0JBQWdCVSxRQUFRLENBQUNGLE1BQU07Z0JBQy9CRCxHQUFHLENBQUNDLElBQUksR0FBR0csTUFBTUMsT0FBTyxDQUFDSCxPQUFPQSxJQUFJTCxHQUFHLENBQUNILGVBQWVBLFlBQVlRO1lBQ3ZFLE9BQ0ssSUFBSSxPQUFPQSxRQUFRLFVBQVU7Z0JBQzlCSCxtQ0FBbUNHO1lBQ3ZDO1FBQ0o7SUFDSjtJQUNBLE1BQU1JLGdCQUFnQkMsZ0JBQWdCZjtJQUN0Q08sbUNBQW1DTztJQUNuQyxPQUFPQTtBQUNYO0FBQ0EsMEVBQTBFLEdBQ25FLFNBQVNFLG9CQUFvQkMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTztJQUNoRSxPQUFPO0lBQ1AsSUFBSSxDQUFFSCxDQUFBQSxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT0ksTUFBTSxHQUMvRCxPQUFPSDtJQUNYLFFBQVE7SUFDUixJQUFJRCxNQUFNLENBQUMsRUFBRSxDQUFDSyxJQUFJLEVBQUU7UUFDaEIsT0FBT0gsUUFBUUY7SUFDbkI7SUFDQSxRQUFRO0lBQ1IsT0FBT0csUUFBUUg7QUFDbkIsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2lkbC5qcz82M2I0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYW1lbENhc2UgZnJvbSBcImNhbWVsY2FzZVwiO1xuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0ICogYXMgYm9yc2ggZnJvbSBcIkBjb3JhbC14eXovYm9yc2hcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc0NvbXBvc2l0ZUFjY291bnRzKGFjY291bnRJdGVtKSB7XG4gICAgcmV0dXJuIFwiYWNjb3VudHNcIiBpbiBhY2NvdW50SXRlbTtcbn1cbi8vIERldGVybWluaXN0aWMgSURMIGFkZHJlc3MgYXMgYSBmdW5jdGlvbiBvZiB0aGUgcHJvZ3JhbSBpZC5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpZGxBZGRyZXNzKHByb2dyYW1JZCkge1xuICAgIGNvbnN0IGJhc2UgPSAoYXdhaXQgUHVibGljS2V5LmZpbmRQcm9ncmFtQWRkcmVzcyhbXSwgcHJvZ3JhbUlkKSlbMF07XG4gICAgcmV0dXJuIGF3YWl0IFB1YmxpY0tleS5jcmVhdGVXaXRoU2VlZChiYXNlLCBzZWVkKCksIHByb2dyYW1JZCk7XG59XG4vLyBTZWVkIGZvciBnZW5lcmF0aW5nIHRoZSBpZGxBZGRyZXNzLlxuZXhwb3J0IGZ1bmN0aW9uIHNlZWQoKSB7XG4gICAgcmV0dXJuIFwiYW5jaG9yOmlkbFwiO1xufVxuY29uc3QgSURMX0FDQ09VTlRfTEFZT1VUID0gYm9yc2guc3RydWN0KFtcbiAgICBib3JzaC5wdWJsaWNLZXkoXCJhdXRob3JpdHlcIiksXG4gICAgYm9yc2gudmVjVTgoXCJkYXRhXCIpLFxuXSk7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlSWRsQWNjb3VudChkYXRhKSB7XG4gICAgcmV0dXJuIElETF9BQ0NPVU5UX0xBWU9VVC5kZWNvZGUoZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlSWRsQWNjb3VudChhY2MpIHtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMTAwMCk7IC8vIFRPRE86IHVzZSBhIHRpZ2h0ZXIgYnVmZmVyLlxuICAgIGNvbnN0IGxlbiA9IElETF9BQ0NPVU5UX0xBWU9VVC5lbmNvZGUoYWNjLCBidWZmZXIpO1xuICAgIHJldHVybiBidWZmZXIuc2xpY2UoMCwgbGVuKTtcbn1cbi8qKlxuICogQ29udmVydCB0aGUgZ2l2ZW4gSURMIHRvIGNhbWVsQ2FzZS5cbiAqXG4gKiBUaGUgSURMIGlzIGdlbmVyYXRlZCBmcm9tIFJ1c3Qgd2hpY2ggaGFzIGRpZmZlcmVudCBjb252ZW50aW9ucyBjb21wYXJlZCB0b1xuICogSlMvVFMsIGUuZy4gaW5zdHJ1Y3Rpb24gbmFtZXMgaW4gUnVzdCBhcmUgc25ha2VfY2FzZS5cbiAqXG4gKiBUaGUgY29udmVyc2lvbiBoYXBwZW5zIGF1dG9tYXRpY2FsbHkgZm9yIHByb2dyYW1zLCBob3dldmVyLCBpZiB5b3UgYXJlIHVzaW5nXG4gKiBpbnRlcm5hbHMgc3VjaCBhcyBgQm9yc2hJbnN0cnVjdGlvbkNvZGVyYCBhbmQgeW91IG9ubHkgaGF2ZSB0aGUgb3JpZ2luYWxcbiAqIChub3QgY2FtZWxDYXNlKSBJREwsIHlvdSBtaWdodCBuZWVkIHRvIHVzZSB0aGlzIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSBpZGwgSURMIHRvIGNvbnZlcnQgdG8gY2FtZWxDYXNlXG4gKiBAcmV0dXJucyBjYW1lbENhc2UgdmVyc2lvbiBvZiB0aGUgSURMXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SWRsVG9DYW1lbENhc2UoaWRsKSB7XG4gICAgY29uc3QgS0VZU19UT19DT05WRVJUID0gW1wibmFtZVwiLCBcInBhdGhcIiwgXCJhY2NvdW50XCIsIFwicmVsYXRpb25zXCIsIFwiZ2VuZXJpY1wiXTtcbiAgICAvLyBgbXlfYWNjb3VudC5maWVsZGAgaXMgZ2V0dGluZyBjb252ZXJ0ZWQgdG8gYG15QWNjb3VudEZpZWxkYCBidXQgd2VcbiAgICAvLyBuZWVkIGBteUFjY291bnQuZmllbGRgLlxuICAgIGNvbnN0IHRvQ2FtZWxDYXNlID0gKHMpID0+IHMuc3BsaXQoXCIuXCIpLm1hcChjYW1lbENhc2UpLmpvaW4oXCIuXCIpO1xuICAgIGNvbnN0IHJlY3Vyc2l2ZWx5Q29udmVydE5hbWVzVG9DYW1lbENhc2UgPSAob2JqKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgICAgICAgY29uc3QgdmFsID0gb2JqW2tleV07XG4gICAgICAgICAgICBpZiAoS0VZU19UT19DT05WRVJULmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgICAgICBvYmpba2V5XSA9IEFycmF5LmlzQXJyYXkodmFsKSA/IHZhbC5tYXAodG9DYW1lbENhc2UpIDogdG9DYW1lbENhc2UodmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICByZWN1cnNpdmVseUNvbnZlcnROYW1lc1RvQ2FtZWxDYXNlKHZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGNhbWVsQ2FzZWRJZGwgPSBzdHJ1Y3R1cmVkQ2xvbmUoaWRsKTtcbiAgICByZWN1cnNpdmVseUNvbnZlcnROYW1lc1RvQ2FtZWxDYXNlKGNhbWVsQ2FzZWRJZGwpO1xuICAgIHJldHVybiBjYW1lbENhc2VkSWRsO1xufVxuLyoqIENvbnZlbmllbnRseSBoYW5kbGUgYWxsIGRlZmluZWQgZmllbGQga2luZHMgd2l0aCBwcm9wZXIgdHlwZSBzdXBwb3J0LiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZURlZmluZWRGaWVsZHMoZmllbGRzLCB1bml0Q2IsIG5hbWVkQ2IsIHR1cGxlQ2IpIHtcbiAgICAvLyBVbml0XG4gICAgaWYgKCEoZmllbGRzID09PSBudWxsIHx8IGZpZWxkcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmllbGRzLmxlbmd0aCkpXG4gICAgICAgIHJldHVybiB1bml0Q2IoKTtcbiAgICAvLyBOYW1lZFxuICAgIGlmIChmaWVsZHNbMF0ubmFtZSkge1xuICAgICAgICByZXR1cm4gbmFtZWRDYihmaWVsZHMpO1xuICAgIH1cbiAgICAvLyBUdXBsZVxuICAgIHJldHVybiB0dXBsZUNiKGZpZWxkcyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGwuanMubWFwIl0sIm5hbWVzIjpbImNhbWVsQ2FzZSIsIkJ1ZmZlciIsIlB1YmxpY0tleSIsImJvcnNoIiwiaXNDb21wb3NpdGVBY2NvdW50cyIsImFjY291bnRJdGVtIiwiaWRsQWRkcmVzcyIsInByb2dyYW1JZCIsImJhc2UiLCJmaW5kUHJvZ3JhbUFkZHJlc3MiLCJjcmVhdGVXaXRoU2VlZCIsInNlZWQiLCJJRExfQUNDT1VOVF9MQVlPVVQiLCJzdHJ1Y3QiLCJwdWJsaWNLZXkiLCJ2ZWNVOCIsImRlY29kZUlkbEFjY291bnQiLCJkYXRhIiwiZGVjb2RlIiwiZW5jb2RlSWRsQWNjb3VudCIsImFjYyIsImJ1ZmZlciIsImFsbG9jIiwibGVuIiwiZW5jb2RlIiwic2xpY2UiLCJjb252ZXJ0SWRsVG9DYW1lbENhc2UiLCJpZGwiLCJLRVlTX1RPX0NPTlZFUlQiLCJ0b0NhbWVsQ2FzZSIsInMiLCJzcGxpdCIsIm1hcCIsImpvaW4iLCJyZWN1cnNpdmVseUNvbnZlcnROYW1lc1RvQ2FtZWxDYXNlIiwib2JqIiwia2V5IiwidmFsIiwiaW5jbHVkZXMiLCJBcnJheSIsImlzQXJyYXkiLCJjYW1lbENhc2VkSWRsIiwic3RydWN0dXJlZENsb25lIiwiaGFuZGxlRGVmaW5lZEZpZWxkcyIsImZpZWxkcyIsInVuaXRDYiIsIm5hbWVkQ2IiLCJ0dXBsZUNiIiwibGVuZ3RoIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.AccountClient),\n/* harmony export */   AnchorError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.AnchorError),\n/* harmony export */   AnchorProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.AnchorProvider),\n/* harmony export */   BN: () => (/* reexport default from dynamic */ bn_js__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   BorshAccountsCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshAccountsCoder),\n/* harmony export */   BorshCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshCoder),\n/* harmony export */   BorshEventCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshEventCoder),\n/* harmony export */   BorshInstructionCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.BorshInstructionCoder),\n/* harmony export */   DISCRIMINATOR_SIZE: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.DISCRIMINATOR_SIZE),\n/* harmony export */   EventManager: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.EventManager),\n/* harmony export */   EventParser: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.EventParser),\n/* harmony export */   IdlError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.IdlError),\n/* harmony export */   LangErrorCode: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.LangErrorCode),\n/* harmony export */   LangErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.LangErrorMessage),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.MethodsBuilderFactory),\n/* harmony export */   Native: () => (/* reexport safe */ _native_index_js__WEBPACK_IMPORTED_MODULE_9__.Native),\n/* harmony export */   Program: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.Program),\n/* harmony export */   ProgramError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.ProgramError),\n/* harmony export */   ProgramErrorStack: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.ProgramErrorStack),\n/* harmony export */   SystemCoder: () => (/* reexport safe */ _coder_index_js__WEBPACK_IMPORTED_MODULE_6__.SystemCoder),\n/* harmony export */   getProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.getProvider),\n/* harmony export */   parseIdlErrors: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.parseIdlErrors),\n/* harmony export */   setProvider: () => (/* reexport safe */ _provider_js__WEBPACK_IMPORTED_MODULE_4__.setProvider),\n/* harmony export */   splitArgsAndCtx: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.splitArgsAndCtx),\n/* harmony export */   toInstruction: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.toInstruction),\n/* harmony export */   translateAddress: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.translateAddress),\n/* harmony export */   translateError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.translateError),\n/* harmony export */   utils: () => (/* reexport module object */ _utils_index_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   validateAccounts: () => (/* reexport safe */ _program_index_js__WEBPACK_IMPORTED_MODULE_8__.validateAccounts),\n/* harmony export */   web3: () => (/* reexport module object */ _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _nodewallet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodewallet */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bn.js */ \"(ssr)/../node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./provider.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coder/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/index.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./program/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _native_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./native/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/index.js\");\n\n\n\n\n\n\n\n\n\n\nif (!_utils_common_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser) {\n    exports.workspace = (__webpack_require__(/*! ./workspace.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/workspace.js\")[\"default\"]);\n    exports.Wallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQ1E7QUFDUjtBQUNFO0FBQ2tDO0FBQy9DO0FBQ007QUFDUztBQUNQO0FBQ0Q7QUFDbEMsSUFBSSxDQUFDQyx1REFBU0EsRUFBRTtJQUNaUSxRQUFRQyxTQUFTLEdBQUdDLHVIQUFpQztJQUNyREYsUUFBUUcsTUFBTSxHQUFHRCx5SEFBa0M7QUFDdkQsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL2luZGV4LmpzPzhmYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGVXYWxsZXQgZnJvbSBcIi4vbm9kZXdhbGxldFwiO1xuaW1wb3J0IHsgaXNCcm93c2VyIH0gZnJvbSBcIi4vdXRpbHMvY29tbW9uLmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEJOIH0gZnJvbSBcImJuLmpzXCI7XG5leHBvcnQgKiBhcyB3ZWIzIGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmV4cG9ydCB7IGdldFByb3ZpZGVyLCBzZXRQcm92aWRlciwgQW5jaG9yUHJvdmlkZXIsIH0gZnJvbSBcIi4vcHJvdmlkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vycm9yLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb2Rlci9pbmRleC5qc1wiO1xuZXhwb3J0ICogYXMgdXRpbHMgZnJvbSBcIi4vdXRpbHMvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb2dyYW0vaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL25hdGl2ZS9pbmRleC5qc1wiO1xuaWYgKCFpc0Jyb3dzZXIpIHtcbiAgICBleHBvcnRzLndvcmtzcGFjZSA9IHJlcXVpcmUoXCIuL3dvcmtzcGFjZS5qc1wiKS5kZWZhdWx0O1xuICAgIGV4cG9ydHMuV2FsbGV0ID0gcmVxdWlyZShcIi4vbm9kZXdhbGxldC5qc1wiKS5kZWZhdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk5vZGVXYWxsZXQiLCJpc0Jyb3dzZXIiLCJkZWZhdWx0IiwiQk4iLCJ3ZWIzIiwiZ2V0UHJvdmlkZXIiLCJzZXRQcm92aWRlciIsIkFuY2hvclByb3ZpZGVyIiwidXRpbHMiLCJleHBvcnRzIiwid29ya3NwYWNlIiwicmVxdWlyZSIsIldhbGxldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/native/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Native: () => (/* binding */ Native)\n/* harmony export */ });\n/* harmony import */ var _system_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./system.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/system.js\");\n\nclass Native {\n    static system(provider) {\n        return (0,_system_js__WEBPACK_IMPORTED_MODULE_0__.program)(provider);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL25hdGl2ZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUNoRCxNQUFNRTtJQUNULE9BQU9DLE9BQU9DLFFBQVEsRUFBRTtRQUNwQixPQUFPSCxtREFBYUEsQ0FBQ0c7SUFDekI7QUFDSixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vbmF0aXZlL2luZGV4LmpzPzE0ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvZ3JhbSBhcyBzeXN0ZW1Qcm9ncmFtIH0gZnJvbSBcIi4vc3lzdGVtLmpzXCI7XG5leHBvcnQgY2xhc3MgTmF0aXZlIHtcbiAgICBzdGF0aWMgc3lzdGVtKHByb3ZpZGVyKSB7XG4gICAgICAgIHJldHVybiBzeXN0ZW1Qcm9ncmFtKHByb3ZpZGVyKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicHJvZ3JhbSIsInN5c3RlbVByb2dyYW0iLCJOYXRpdmUiLCJzeXN0ZW0iLCJwcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/system.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/native/system.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IDL: () => (/* binding */ IDL),\n/* harmony export */   SYSTEM_PROGRAM_ID: () => (/* binding */ SYSTEM_PROGRAM_ID),\n/* harmony export */   coder: () => (/* binding */ coder),\n/* harmony export */   program: () => (/* binding */ program)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../program/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _coder_system_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coder/system/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/system/index.js\");\n\n\n\nconst SYSTEM_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n    return new _program_index_js__WEBPACK_IMPORTED_MODULE_1__.Program(IDL, provider, coder());\n}\nfunction coder() {\n    return new _coder_system_index_js__WEBPACK_IMPORTED_MODULE_2__.SystemCoder(IDL);\n}\nconst IDL = {\n    address: \"11111111111111111111111111111111\",\n    metadata: {\n        name: \"systemProgram\",\n        version: \"0.1.0\",\n        spec: \"0.1.0\"\n    },\n    instructions: [\n        {\n            name: \"advanceNonceAccount\",\n            discriminator: [\n                4,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true\n                },\n                {\n                    name: \"recentBlockhashes\"\n                },\n                {\n                    name: \"authorized\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"allocate\",\n            discriminator: [\n                8,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    writable: true,\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                }\n            ]\n        },\n        {\n            name: \"allocateWithSeed\",\n            discriminator: [\n                9,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"account\",\n                    writable: true\n                },\n                {\n                    name: \"base\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"assign\",\n            discriminator: [\n                1,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    writable: true,\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"assignWithSeed\",\n            discriminator: [\n                10,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"account\",\n                    writable: true\n                },\n                {\n                    name: \"base\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"authorizeNonceAccount\",\n            discriminator: [\n                7,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true\n                },\n                {\n                    name: \"authorized\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"createAccount\",\n            discriminator: [\n                0,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"createAccountWithSeed\",\n            discriminator: [\n                3,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true\n                },\n                {\n                    name: \"to\",\n                    writable: true\n                },\n                {\n                    name: \"base\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"initializeNonceAccount\",\n            discriminator: [\n                6,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true,\n                    signer: true\n                },\n                {\n                    name: \"recentBlockhashes\"\n                },\n                {\n                    name: \"rent\",\n                    address: \"SysvarRent111111111111111111111111111111111\"\n                }\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"transfer\",\n            discriminator: [\n                2,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true\n                },\n                {\n                    name: \"to\",\n                    writable: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                }\n            ]\n        },\n        {\n            name: \"transferWithSeed\",\n            discriminator: [\n                11,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true\n                },\n                {\n                    name: \"base\",\n                    signer: true\n                },\n                {\n                    name: \"to\",\n                    writable: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\"\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\"\n                }\n            ]\n        },\n        {\n            name: \"withdrawNonceAccount\",\n            discriminator: [\n                5,\n                0,\n                0,\n                0\n            ],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true\n                },\n                {\n                    name: \"to\",\n                    writable: true\n                },\n                {\n                    name: \"recentBlockhashes\"\n                },\n                {\n                    name: \"rent\",\n                    address: \"SysvarRent111111111111111111111111111111111\"\n                },\n                {\n                    name: \"authorized\",\n                    signer: true\n                }\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\"\n                }\n            ]\n        }\n    ],\n    accounts: [\n        {\n            name: \"nonce\",\n            discriminator: []\n        }\n    ],\n    types: [\n        {\n            name: \"feeCalculator\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"lamportsPerSignature\",\n                        type: \"u64\"\n                    }\n                ]\n            }\n        },\n        {\n            name: \"nonce\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"version\",\n                        type: \"u32\"\n                    },\n                    {\n                        name: \"state\",\n                        type: \"u32\"\n                    },\n                    {\n                        name: \"authorizedPubkey\",\n                        type: \"pubkey\"\n                    },\n                    {\n                        name: \"nonce\",\n                        type: \"pubkey\"\n                    },\n                    {\n                        name: \"feeCalculator\",\n                        type: {\n                            defined: {\n                                name: \"feeCalculator\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}; //# sourceMappingURL=system.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/native/system.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js":
/*!****************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NodeWallet)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n\n\n\n/**\n * Node only wallet.\n */ class NodeWallet {\n    constructor(payer){\n        this.payer = payer;\n    }\n    static local() {\n        const process = __webpack_require__(/*! process */ \"process\");\n        if (!process.env.ANCHOR_WALLET || process.env.ANCHOR_WALLET === \"\") {\n            throw new Error(\"expected environment variable `ANCHOR_WALLET` is not set.\");\n        }\n        const payer = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromSecretKey(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(JSON.parse((__webpack_require__(/*! fs */ \"fs\").readFileSync)(process.env.ANCHOR_WALLET, {\n            encoding: \"utf-8\"\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        if ((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx)) {\n            tx.sign([\n                this.payer\n            ]);\n        } else {\n            tx.partialSign(this.payer);\n        }\n        return tx;\n    }\n    async signAllTransactions(txs) {\n        return txs.map((t)=>{\n            if ((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(t)) {\n                t.sign([\n                    this.payer\n                ]);\n            } else {\n                t.partialSign(this.payer);\n            }\n            return t;\n        });\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n} //# sourceMappingURL=nodewallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL25vZGV3YWxsZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDVztBQUNnQjtBQUMzRDs7Q0FFQyxHQUNjLE1BQU1HO0lBQ2pCQyxZQUFZQyxLQUFLLENBQUU7UUFDZixJQUFJLENBQUNBLEtBQUssR0FBR0E7SUFDakI7SUFDQSxPQUFPQyxRQUFRO1FBQ1gsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0JBQVM7UUFDakMsSUFBSSxDQUFDRCxRQUFRRSxHQUFHLENBQUNDLGFBQWEsSUFBSUgsUUFBUUUsR0FBRyxDQUFDQyxhQUFhLEtBQUssSUFBSTtZQUNoRSxNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxNQUFNTixRQUFRSixvREFBT0EsQ0FBQ1csYUFBYSxDQUFDWiwwQ0FBTUEsQ0FBQ2EsSUFBSSxDQUFDQyxLQUFLQyxLQUFLLENBQUNQLGtEQUEwQixDQUFDRCxRQUFRRSxHQUFHLENBQUNDLGFBQWEsRUFBRTtZQUM3R08sVUFBVTtRQUNkO1FBQ0EsT0FBTyxJQUFJZCxXQUFXRTtJQUMxQjtJQUNBLE1BQU1hLGdCQUFnQkMsRUFBRSxFQUFFO1FBQ3RCLElBQUlqQix3RUFBc0JBLENBQUNpQixLQUFLO1lBQzVCQSxHQUFHQyxJQUFJLENBQUM7Z0JBQUMsSUFBSSxDQUFDZixLQUFLO2FBQUM7UUFDeEIsT0FDSztZQUNEYyxHQUFHRSxXQUFXLENBQUMsSUFBSSxDQUFDaEIsS0FBSztRQUM3QjtRQUNBLE9BQU9jO0lBQ1g7SUFDQSxNQUFNRyxvQkFBb0JDLEdBQUcsRUFBRTtRQUMzQixPQUFPQSxJQUFJQyxHQUFHLENBQUMsQ0FBQ0M7WUFDWixJQUFJdkIsd0VBQXNCQSxDQUFDdUIsSUFBSTtnQkFDM0JBLEVBQUVMLElBQUksQ0FBQztvQkFBQyxJQUFJLENBQUNmLEtBQUs7aUJBQUM7WUFDdkIsT0FDSztnQkFDRG9CLEVBQUVKLFdBQVcsQ0FBQyxJQUFJLENBQUNoQixLQUFLO1lBQzVCO1lBQ0EsT0FBT29CO1FBQ1g7SUFDSjtJQUNBLElBQUlDLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQ3JCLEtBQUssQ0FBQ3FCLFNBQVM7SUFDL0I7QUFDSixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vbm9kZXdhbGxldC5qcz9lOGVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IEtleXBhaXIsIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgaXNWZXJzaW9uZWRUcmFuc2FjdGlvbiB9IGZyb20gXCIuL3V0aWxzL2NvbW1vbi5qc1wiO1xuLyoqXG4gKiBOb2RlIG9ubHkgd2FsbGV0LlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb2RlV2FsbGV0IHtcbiAgICBjb25zdHJ1Y3RvcihwYXllcikge1xuICAgICAgICB0aGlzLnBheWVyID0gcGF5ZXI7XG4gICAgfVxuICAgIHN0YXRpYyBsb2NhbCgpIHtcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9IHJlcXVpcmUoXCJwcm9jZXNzXCIpO1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LkFOQ0hPUl9XQUxMRVQgfHwgcHJvY2Vzcy5lbnYuQU5DSE9SX1dBTExFVCA9PT0gXCJcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgZW52aXJvbm1lbnQgdmFyaWFibGUgYEFOQ0hPUl9XQUxMRVRgIGlzIG5vdCBzZXQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBheWVyID0gS2V5cGFpci5mcm9tU2VjcmV0S2V5KEJ1ZmZlci5mcm9tKEpTT04ucGFyc2UocmVxdWlyZShcImZzXCIpLnJlYWRGaWxlU3luYyhwcm9jZXNzLmVudi5BTkNIT1JfV0FMTEVULCB7XG4gICAgICAgICAgICBlbmNvZGluZzogXCJ1dGYtOFwiLFxuICAgICAgICB9KSkpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlV2FsbGV0KHBheWVyKTtcbiAgICB9XG4gICAgYXN5bmMgc2lnblRyYW5zYWN0aW9uKHR4KSB7XG4gICAgICAgIGlmIChpc1ZlcnNpb25lZFRyYW5zYWN0aW9uKHR4KSkge1xuICAgICAgICAgICAgdHguc2lnbihbdGhpcy5wYXllcl0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdHgucGFydGlhbFNpZ24odGhpcy5wYXllcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHR4O1xuICAgIH1cbiAgICBhc3luYyBzaWduQWxsVHJhbnNhY3Rpb25zKHR4cykge1xuICAgICAgICByZXR1cm4gdHhzLm1hcCgodCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlzVmVyc2lvbmVkVHJhbnNhY3Rpb24odCkpIHtcbiAgICAgICAgICAgICAgICB0LnNpZ24oW3RoaXMucGF5ZXJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHQucGFydGlhbFNpZ24odGhpcy5wYXllcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldCBwdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBheWVyLnB1YmxpY0tleTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2Rld2FsbGV0LmpzLm1hcCJdLCJuYW1lcyI6WyJCdWZmZXIiLCJLZXlwYWlyIiwiaXNWZXJzaW9uZWRUcmFuc2FjdGlvbiIsIk5vZGVXYWxsZXQiLCJjb25zdHJ1Y3RvciIsInBheWVyIiwibG9jYWwiLCJwcm9jZXNzIiwicmVxdWlyZSIsImVudiIsIkFOQ0hPUl9XQUxMRVQiLCJFcnJvciIsImZyb21TZWNyZXRLZXkiLCJmcm9tIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZW5jb2RpbmciLCJzaWduVHJhbnNhY3Rpb24iLCJ0eCIsInNpZ24iLCJwYXJ0aWFsU2lnbiIsInNpZ25BbGxUcmFuc2FjdGlvbnMiLCJ0eHMiLCJtYXAiLCJ0IiwicHVibGljS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/accounts-resolver.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/accounts-resolver.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountsResolver: () => (/* binding */ AccountsResolver),\n/* harmony export */   isAccountsGeneric: () => (/* binding */ isAccountsGeneric)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(ssr)/../node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n/* harmony import */ var _token_account_layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./token-account-layout */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/token-account-layout.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _namespace_methods__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./namespace/methods */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/methods.js\");\n\n\n\n\n\n\nfunction isAccountsGeneric(accounts) {\n    return !(accounts instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey);\n}\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n    constructor(_args, _accounts, _provider, _programId, _idlIx, accountNamespace, _idlTypes, _customResolver){\n        this._args = _args;\n        this._accounts = _accounts;\n        this._provider = _provider;\n        this._programId = _programId;\n        this._idlIx = _idlIx;\n        this._idlTypes = _idlTypes;\n        this._customResolver = _customResolver;\n        this._accountStore = new AccountStore(_provider, accountNamespace, _programId);\n    }\n    args(args) {\n        this._args = args;\n    }\n    // Note: We serially resolve PDAs one by one rather than doing them\n    //       in parallel because there can be dependencies between\n    //       addresses. That is, one PDA can be used as a seed in another.\n    async resolve() {\n        this.resolveEventCpi(this._idlIx.accounts);\n        this.resolveConst(this._idlIx.accounts);\n        // Auto populate pdas and relations until we stop finding new accounts\n        let depth = 0;\n        while(await this.resolvePdasAndRelations(this._idlIx.accounts) + await this.resolveCustom() > 0){\n            depth++;\n            if (depth === 16) {\n                throw new Error(\"Reached maximum depth for account resolution\");\n            }\n        }\n    }\n    resolveOptionals(accounts) {\n        Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n    }\n    get(path) {\n        // Only return if pubkey\n        const ret = path.reduce((acc, subPath)=>acc && acc[subPath], this._accounts);\n        if (ret && ret.toBase58) {\n            return ret;\n        }\n    }\n    set(path, value) {\n        let cur = this._accounts;\n        path.forEach((p, i)=>{\n            var _a;\n            const isLast = i === path.length - 1;\n            if (isLast) {\n                cur[p] = value;\n            }\n            cur[p] = (_a = cur[p]) !== null && _a !== void 0 ? _a : {};\n            cur = cur[p];\n        });\n    }\n    resolveOptionalsHelper(partialAccounts, accounts) {\n        const nestedAccountsGeneric = {};\n        // Looping through accountItem array instead of on partialAccounts, so\n        // we only traverse array once\n        for (const accountItem of accounts){\n            const accountName = accountItem.name;\n            const partialAccount = partialAccounts[accountName];\n            // Skip if the account isn't included (thus would be undefined)\n            if (partialAccount === undefined) continue;\n            if ((0,_namespace_methods__WEBPACK_IMPORTED_MODULE_5__.isPartialAccounts)(partialAccount)) {\n                // is compound accounts, recurse one level deeper\n                if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.isCompositeAccounts)(accountItem)) {\n                    nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n                } else {\n                    // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n                    nestedAccountsGeneric[accountName] = (0,_namespace_methods__WEBPACK_IMPORTED_MODULE_5__.flattenPartialAccounts)(partialAccount, true);\n                }\n            } else {\n                // if not compound accounts, do null/optional check and proceed\n                if (partialAccount !== null) {\n                    nestedAccountsGeneric[accountName] = (0,_index_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(partialAccount);\n                } else if (accountItem[\"optional\"]) {\n                    nestedAccountsGeneric[accountName] = this._programId;\n                }\n            }\n        }\n        return nestedAccountsGeneric;\n    }\n    async resolveCustom() {\n        if (this._customResolver) {\n            const { accounts, resolved } = await this._customResolver({\n                args: this._args,\n                accounts: this._accounts,\n                provider: this._provider,\n                programId: this._programId,\n                idlIx: this._idlIx\n            });\n            this._accounts = accounts;\n            return resolved;\n        }\n        return 0;\n    }\n    /**\n     * Resolve event CPI accounts `eventAuthority` and `program`.\n     *\n     * Accounts will only be resolved if they are declared next to each other to\n     * reduce the chance of name collision.\n     */ resolveEventCpi(accounts, path = []) {\n        for(const i in accounts){\n            const accountOrAccounts = accounts[i];\n            if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.isCompositeAccounts)(accountOrAccounts)) {\n                this.resolveEventCpi(accountOrAccounts.accounts, [\n                    ...path,\n                    accountOrAccounts.name\n                ]);\n            }\n            // Validate next index exists\n            const nextIndex = +i + 1;\n            if (nextIndex === accounts.length) return;\n            const currentName = accounts[i].name;\n            const nextName = accounts[nextIndex].name;\n            // Populate event CPI accounts if they exist\n            if (currentName === \"eventAuthority\" && nextName === \"program\") {\n                const currentPath = [\n                    ...path,\n                    currentName\n                ];\n                const nextPath = [\n                    ...path,\n                    nextName\n                ];\n                if (!this.get(currentPath)) {\n                    this.set(currentPath, _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddressSync([\n                        Buffer.from(\"__event_authority\")\n                    ], this._programId)[0]);\n                }\n                if (!this.get(nextPath)) {\n                    this.set(nextPath, this._programId);\n                }\n                return;\n            }\n        }\n    }\n    resolveConst(accounts, path = []) {\n        for (const accountOrAccounts of accounts){\n            const name = accountOrAccounts.name;\n            if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.isCompositeAccounts)(accountOrAccounts)) {\n                this.resolveConst(accountOrAccounts.accounts, [\n                    ...path,\n                    name\n                ]);\n            } else {\n                const account = accountOrAccounts;\n                if ((account.signer || account.address) && !this.get([\n                    ...path,\n                    name\n                ])) {\n                    // Default signers to the provider\n                    if (account.signer) {\n                        // @ts-expect-error\n                        if (!this._provider.wallet) {\n                            throw new Error(\"This function requires the `Provider` interface implementor to have a `wallet` field.\");\n                        }\n                        // @ts-expect-error\n                        this.set([\n                            ...path,\n                            name\n                        ], this._provider.wallet.publicKey);\n                    }\n                    // Set based on `address` field\n                    if (account.address) {\n                        this.set([\n                            ...path,\n                            name\n                        ], (0,_index_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(account.address));\n                    }\n                }\n            }\n        }\n    }\n    async resolvePdasAndRelations(accounts, path = []) {\n        let found = 0;\n        for (const accountOrAccounts of accounts){\n            const name = accountOrAccounts.name;\n            if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.isCompositeAccounts)(accountOrAccounts)) {\n                found += await this.resolvePdasAndRelations(accountOrAccounts.accounts, [\n                    ...path,\n                    name\n                ]);\n            } else {\n                const account = accountOrAccounts;\n                if ((account.pda || account.relations) && !this.get([\n                    ...path,\n                    name\n                ])) {\n                    found++;\n                    // Accounts might not get resolved successfully if a seed depends on\n                    // another seed to be resolved *and* the accounts for resolution are\n                    // out of order. In this case, skip the accounts that throw in order\n                    // to resolve those accounts later.\n                    try {\n                        if (account.pda) {\n                            const seeds = await Promise.all(account.pda.seeds.map((seed)=>this.toBuffer(seed, path)));\n                            if (seeds.some((seed)=>!seed)) {\n                                continue;\n                            }\n                            const programId = await this.parseProgramId(account, path);\n                            const [pubkey] = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey.findProgramAddressSync(seeds, programId);\n                            this.set([\n                                ...path,\n                                name\n                            ], pubkey);\n                        }\n                    } catch  {}\n                    try {\n                        if (account.relations) {\n                            const accountKey = this.get([\n                                ...path,\n                                account.relations[0]\n                            ]);\n                            if (accountKey) {\n                                const account = await this._accountStore.fetchAccount({\n                                    publicKey: accountKey\n                                });\n                                this.set([\n                                    ...path,\n                                    name\n                                ], account[name]);\n                            }\n                        }\n                    } catch  {}\n                }\n            }\n        }\n        return found;\n    }\n    async parseProgramId(account, path = []) {\n        var _a;\n        if (!((_a = account.pda) === null || _a === void 0 ? void 0 : _a.program)) {\n            return this._programId;\n        }\n        const buf = await this.toBuffer(account.pda.program, path);\n        if (!buf) {\n            throw new Error(`Program seed not resolved: ${account.name}`);\n        }\n        return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(buf);\n    }\n    async toBuffer(seed, path = []) {\n        switch(seed.kind){\n            case \"const\":\n                return this.toBufferConst(seed);\n            case \"arg\":\n                return await this.toBufferArg(seed);\n            case \"account\":\n                return await this.toBufferAccount(seed, path);\n            default:\n                throw new Error(`Unexpected seed: ${seed}`);\n        }\n    }\n    toBufferConst(seed) {\n        return this.toBufferValue(\"bytes\", seed.value);\n    }\n    async toBufferArg(seed) {\n        const [name, ...path] = seed.path.split(\".\");\n        const index = this._idlIx.args.findIndex((arg)=>arg.name === name);\n        if (index === -1) {\n            throw new Error(`Unable to find argument for seed: ${name}`);\n        }\n        const value = path.reduce((acc, path)=>(acc !== null && acc !== void 0 ? acc : {})[path], this._args[index]);\n        if (value === undefined) {\n            return;\n        }\n        const type = this.getType(this._idlIx.args[index].type, path);\n        return this.toBufferValue(type, value);\n    }\n    async toBufferAccount(seed, path = []) {\n        const [name, ...paths] = seed.path.split(\".\");\n        const fieldPubkey = this.get([\n            ...path,\n            name\n        ]);\n        if (!fieldPubkey) return;\n        // The seed is a pubkey of the account.\n        if (!paths.length) {\n            return this.toBufferValue(\"pubkey\", fieldPubkey);\n        }\n        if (!seed.account) {\n            throw new Error(`Seed account is required in order to resolve type: ${seed.path}`);\n        }\n        // The key is account data.\n        //\n        // Fetch and deserialize it.\n        const account = await this._accountStore.fetchAccount({\n            publicKey: fieldPubkey,\n            name: seed.account\n        });\n        // Dereference all fields in the path to get the field value\n        // used in the seed.\n        let accountValue = account;\n        let currentPaths = paths;\n        while(currentPaths.length > 0){\n            accountValue = accountValue[currentPaths[0]];\n            currentPaths = currentPaths.slice(1);\n        }\n        if (accountValue === undefined) return;\n        const type = this.getType({\n            defined: {\n                name: seed.account\n            }\n        }, paths);\n        return this.toBufferValue(type, accountValue);\n    }\n    /**\n     * Converts the given idl valaue into a Buffer. The values here must be\n     * primitives, e.g. no structs.\n     */ toBufferValue(type, value) {\n        switch(type){\n            case \"u8\":\n            case \"i8\":\n                return Buffer.from([\n                    value\n                ]);\n            case \"u16\":\n            case \"i16\":\n                return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(value).toArrayLike(Buffer, \"le\", 2);\n            case \"u32\":\n            case \"i32\":\n                return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(value).toArrayLike(Buffer, \"le\", 4);\n            case \"u64\":\n            case \"i64\":\n                return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(value).toArrayLike(Buffer, \"le\", 8);\n            case \"u128\":\n            case \"i128\":\n                return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(value).toArrayLike(Buffer, \"le\", 16);\n            case \"u256\":\n            case \"i256\":\n                return new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(value).toArrayLike(Buffer, \"le\", 32);\n            case \"string\":\n                return Buffer.from(value);\n            case \"pubkey\":\n                return value.toBuffer();\n            case \"bytes\":\n                return Buffer.from(value);\n            default:\n                if (type === null || type === void 0 ? void 0 : type.array) {\n                    return Buffer.from(value);\n                }\n                throw new Error(`Unexpected seed type: ${type}`);\n        }\n    }\n    /**\n     * Recursively get the type at some path of either a primitive or a user\n     * defined struct.\n     */ getType(type, path = []) {\n        var _a;\n        const typeName = (_a = type === null || type === void 0 ? void 0 : type.defined) === null || _a === void 0 ? void 0 : _a.name;\n        if (typeName) {\n            // Handle token account separately\n            if (typeName === \"tokenAccount\") {\n                switch(path.at(0)){\n                    case \"mint\":\n                    case \"owner\":\n                        return \"pubkey\";\n                    case \"amount\":\n                    case \"delagatedAmount\":\n                        return \"u64\";\n                    default:\n                        throw new Error(`Unknown token account path: ${path}`);\n                }\n            }\n            const definedType = this._idlTypes.find((t)=>t.name === typeName);\n            if (!definedType) {\n                throw new Error(`Type not found: ${typeName}`);\n            }\n            // Only named structs are supported\n            const [fieldName, ...subPath] = path;\n            const fields = definedType.type.fields;\n            const field = fields.find((field)=>field.name === fieldName);\n            if (!field) {\n                throw new Error(`Field not found: ${fieldName}`);\n            }\n            return this.getType(field.type, subPath);\n        }\n        return type;\n    }\n}\n// TODO: this should be configurable to avoid unnecessary requests.\nclass AccountStore {\n    constructor(_provider, accounts, programId){\n        this._provider = _provider;\n        this._cache = new Map();\n        this._idls = {};\n        this._idls[programId.toBase58()] = accounts;\n    }\n    async fetchAccount({ publicKey, name }) {\n        const address = publicKey.toBase58();\n        if (!this._cache.has(address)) {\n            const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n            if (accountInfo === null) {\n                throw new Error(`Account not found: ${address}`);\n            }\n            if (name === \"tokenAccount\") {\n                const account = (0,_token_account_layout__WEBPACK_IMPORTED_MODULE_3__.decodeTokenAccount)(accountInfo.data);\n                this._cache.set(address, account);\n            } else {\n                const accounts = await this.getAccountsNs(accountInfo.owner);\n                if (accounts) {\n                    const accountNs = Object.values(accounts)[0];\n                    if (accountNs) {\n                        const account = accountNs.coder.accounts.decodeAny(accountInfo.data);\n                        this._cache.set(address, account);\n                    }\n                }\n            }\n        }\n        return this._cache.get(address);\n    }\n    async getAccountsNs(programId) {\n        const programIdStr = programId.toBase58();\n        if (!this._idls[programIdStr]) {\n            const idl = await _index_js__WEBPACK_IMPORTED_MODULE_4__.Program.fetchIdl(programId, this._provider);\n            if (idl) {\n                const program = new _index_js__WEBPACK_IMPORTED_MODULE_4__.Program(idl, this._provider);\n                this._idls[programIdStr] = program.account;\n            }\n        }\n        return this._idls[programIdStr];\n    }\n} //# sourceMappingURL=accounts-resolver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/accounts-resolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js":
/*!********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/common.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseIdlErrors: () => (/* binding */ parseIdlErrors),\n/* harmony export */   toInstruction: () => (/* binding */ toInstruction),\n/* harmony export */   translateAddress: () => (/* binding */ translateAddress),\n/* harmony export */   validateAccounts: () => (/* binding */ validateAccounts)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n\n\nfunction parseIdlErrors(idl) {\n    const errors = new Map();\n    if (idl.errors) {\n        idl.errors.forEach((e)=>{\n            var _a;\n            let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n            errors.set(e.code, msg);\n        });\n    }\n    return errors;\n}\nfunction toInstruction(idlIx, ...args) {\n    if (idlIx.args.length != args.length) {\n        throw new Error(\"Invalid argument length\");\n    }\n    const ix = {};\n    let idx = 0;\n    idlIx.args.forEach((ixArg)=>{\n        ix[ixArg.name] = args[idx];\n        idx += 1;\n    });\n    return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n    ixAccounts.forEach((acc)=>{\n        if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.isCompositeAccounts)(acc)) {\n            validateAccounts(acc.accounts, accounts[acc.name]);\n        } else {\n            if (!accounts[acc.name]) {\n                throw new Error(`Account \\`${acc.name}\\` not provided.`);\n            }\n        }\n    });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n    return address instanceof _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey ? address : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(address);\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29tbW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0QztBQUNLO0FBQzFDLFNBQVNFLGVBQWVDLEdBQUc7SUFDOUIsTUFBTUMsU0FBUyxJQUFJQztJQUNuQixJQUFJRixJQUFJQyxNQUFNLEVBQUU7UUFDWkQsSUFBSUMsTUFBTSxDQUFDRSxPQUFPLENBQUMsQ0FBQ0M7WUFDaEIsSUFBSUM7WUFDSixJQUFJQyxNQUFNLENBQUNELEtBQUtELEVBQUVFLEdBQUcsTUFBTSxRQUFRRCxPQUFPLEtBQUssSUFBSUEsS0FBS0QsRUFBRUcsSUFBSTtZQUM5RE4sT0FBT08sR0FBRyxDQUFDSixFQUFFSyxJQUFJLEVBQUVIO1FBQ3ZCO0lBQ0o7SUFDQSxPQUFPTDtBQUNYO0FBQ08sU0FBU1MsY0FBY0MsS0FBSyxFQUFFLEdBQUdDLElBQUk7SUFDeEMsSUFBSUQsTUFBTUMsSUFBSSxDQUFDQyxNQUFNLElBQUlELEtBQUtDLE1BQU0sRUFBRTtRQUNsQyxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxLQUFLLENBQUM7SUFDWixJQUFJQyxNQUFNO0lBQ1ZMLE1BQU1DLElBQUksQ0FBQ1QsT0FBTyxDQUFDLENBQUNjO1FBQ2hCRixFQUFFLENBQUNFLE1BQU1WLElBQUksQ0FBQyxHQUFHSyxJQUFJLENBQUNJLElBQUk7UUFDMUJBLE9BQU87SUFDWDtJQUNBLE9BQU9EO0FBQ1g7QUFDQSxrRUFBa0U7QUFDM0QsU0FBU0csaUJBQWlCQyxVQUFVLEVBQUVDLFdBQVcsQ0FBQyxDQUFDO0lBQ3RERCxXQUFXaEIsT0FBTyxDQUFDLENBQUNrQjtRQUNoQixJQUFJdkIsNERBQW1CQSxDQUFDdUIsTUFBTTtZQUMxQkgsaUJBQWlCRyxJQUFJRCxRQUFRLEVBQUVBLFFBQVEsQ0FBQ0MsSUFBSWQsSUFBSSxDQUFDO1FBQ3JELE9BQ0s7WUFDRCxJQUFJLENBQUNhLFFBQVEsQ0FBQ0MsSUFBSWQsSUFBSSxDQUFDLEVBQUU7Z0JBQ3JCLE1BQU0sSUFBSU8sTUFBTSxDQUFDLFVBQVUsRUFBRU8sSUFBSWQsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1lBQzNEO1FBQ0o7SUFDSjtBQUNKO0FBQ0EscUNBQXFDO0FBQzlCLFNBQVNlLGlCQUFpQkMsT0FBTztJQUNwQyxPQUFPQSxtQkFBbUIxQixzREFBU0EsR0FBRzBCLFVBQVUsSUFBSTFCLHNEQUFTQSxDQUFDMEI7QUFDbEUsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29tbW9uLmpzPzQ4MTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgaXNDb21wb3NpdGVBY2NvdW50cywgfSBmcm9tIFwiLi4vaWRsLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJZGxFcnJvcnMoaWRsKSB7XG4gICAgY29uc3QgZXJyb3JzID0gbmV3IE1hcCgpO1xuICAgIGlmIChpZGwuZXJyb3JzKSB7XG4gICAgICAgIGlkbC5lcnJvcnMuZm9yRWFjaCgoZSkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgbGV0IG1zZyA9IChfYSA9IGUubXNnKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBlLm5hbWU7XG4gICAgICAgICAgICBlcnJvcnMuc2V0KGUuY29kZSwgbXNnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcnM7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9JbnN0cnVjdGlvbihpZGxJeCwgLi4uYXJncykge1xuICAgIGlmIChpZGxJeC5hcmdzLmxlbmd0aCAhPSBhcmdzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50IGxlbmd0aFwiKTtcbiAgICB9XG4gICAgY29uc3QgaXggPSB7fTtcbiAgICBsZXQgaWR4ID0gMDtcbiAgICBpZGxJeC5hcmdzLmZvckVhY2goKGl4QXJnKSA9PiB7XG4gICAgICAgIGl4W2l4QXJnLm5hbWVdID0gYXJnc1tpZHhdO1xuICAgICAgICBpZHggKz0gMTtcbiAgICB9KTtcbiAgICByZXR1cm4gaXg7XG59XG4vLyBUaHJvd3MgZXJyb3IgaWYgYW55IGFjY291bnQgcmVxdWlyZWQgZm9yIHRoZSBgaXhgIGlzIG5vdCBnaXZlbi5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFjY291bnRzKGl4QWNjb3VudHMsIGFjY291bnRzID0ge30pIHtcbiAgICBpeEFjY291bnRzLmZvckVhY2goKGFjYykgPT4ge1xuICAgICAgICBpZiAoaXNDb21wb3NpdGVBY2NvdW50cyhhY2MpKSB7XG4gICAgICAgICAgICB2YWxpZGF0ZUFjY291bnRzKGFjYy5hY2NvdW50cywgYWNjb3VudHNbYWNjLm5hbWVdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICghYWNjb3VudHNbYWNjLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBY2NvdW50IFxcYCR7YWNjLm5hbWV9XFxgIG5vdCBwcm92aWRlZC5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8gVHJhbnNsYXRlcyBhbiBhZGRyZXNzIHRvIGEgUHVia2V5LlxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zbGF0ZUFkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiBhZGRyZXNzIGluc3RhbmNlb2YgUHVibGljS2V5ID8gYWRkcmVzcyA6IG5ldyBQdWJsaWNLZXkoYWRkcmVzcyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24uanMubWFwIl0sIm5hbWVzIjpbIlB1YmxpY0tleSIsImlzQ29tcG9zaXRlQWNjb3VudHMiLCJwYXJzZUlkbEVycm9ycyIsImlkbCIsImVycm9ycyIsIk1hcCIsImZvckVhY2giLCJlIiwiX2EiLCJtc2ciLCJuYW1lIiwic2V0IiwiY29kZSIsInRvSW5zdHJ1Y3Rpb24iLCJpZGxJeCIsImFyZ3MiLCJsZW5ndGgiLCJFcnJvciIsIml4IiwiaWR4IiwiaXhBcmciLCJ2YWxpZGF0ZUFjY291bnRzIiwiaXhBY2NvdW50cyIsImFjY291bnRzIiwiYWNjIiwidHJhbnNsYXRlQWRkcmVzcyIsImFkZHJlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/context.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitArgsAndCtx: () => (/* binding */ splitArgsAndCtx)\n/* harmony export */ });\nfunction splitArgsAndCtx(idlIx, args) {\n    var _a, _b;\n    let options = {};\n    const inputLen = idlIx.args ? idlIx.args.length : 0;\n    if (args.length > inputLen) {\n        if (args.length !== inputLen + 1) {\n            throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map((a)=>a.name)) !== null && _b !== void 0 ? _b : []}`);\n        }\n        options = args.pop();\n    }\n    return [\n        args,\n        options\n    ];\n} //# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsZ0JBQWdCQyxLQUFLLEVBQUVDLElBQUk7SUFDdkMsSUFBSUMsSUFBSUM7SUFDUixJQUFJQyxVQUFVLENBQUM7SUFDZixNQUFNQyxXQUFXTCxNQUFNQyxJQUFJLEdBQUdELE1BQU1DLElBQUksQ0FBQ0ssTUFBTSxHQUFHO0lBQ2xELElBQUlMLEtBQUtLLE1BQU0sR0FBR0QsVUFBVTtRQUN4QixJQUFJSixLQUFLSyxNQUFNLEtBQUtELFdBQVcsR0FBRztZQUM5QixNQUFNLElBQUlFLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRU4sS0FBSyxnQkFBZ0IsRUFBRUQsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1RLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQ0wsS0FBSyxDQUFDRCxLQUFLRixNQUFNQyxJQUFJLE1BQU0sUUFBUUMsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHTyxHQUFHLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUYsSUFBSSxPQUFPLFFBQVFMLE9BQU8sS0FBSyxJQUFJQSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzFRO1FBQ0FDLFVBQVVILEtBQUtVLEdBQUc7SUFDdEI7SUFDQSxPQUFPO1FBQUNWO1FBQU1HO0tBQVE7QUFDMUIsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vY29udGV4dC5qcz9hZDZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzcGxpdEFyZ3NBbmRDdHgoaWRsSXgsIGFyZ3MpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGxldCBvcHRpb25zID0ge307XG4gICAgY29uc3QgaW5wdXRMZW4gPSBpZGxJeC5hcmdzID8gaWRsSXguYXJncy5sZW5ndGggOiAwO1xuICAgIGlmIChhcmdzLmxlbmd0aCA+IGlucHV0TGVuKSB7XG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCAhPT0gaW5wdXRMZW4gKyAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHByb3ZpZGVkIHRvbyBtYW55IGFyZ3VtZW50cyAke2FyZ3N9IHRvIGluc3RydWN0aW9uICR7aWRsSXggPT09IG51bGwgfHwgaWRsSXggPT09IHZvaWQgMCA/IHZvaWQgMCA6IGlkbEl4Lm5hbWV9IGV4cGVjdGluZzogJHsoX2IgPSAoX2EgPSBpZGxJeC5hcmdzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubWFwKChhKSA9PiBhLm5hbWUpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXX1gKTtcbiAgICAgICAgfVxuICAgICAgICBvcHRpb25zID0gYXJncy5wb3AoKTtcbiAgICB9XG4gICAgcmV0dXJuIFthcmdzLCBvcHRpb25zXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbInNwbGl0QXJnc0FuZEN0eCIsImlkbEl4IiwiYXJncyIsIl9hIiwiX2IiLCJvcHRpb25zIiwiaW5wdXRMZW4iLCJsZW5ndGgiLCJFcnJvciIsIm5hbWUiLCJtYXAiLCJhIiwicG9wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/event.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/event.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager),\n/* harmony export */   EventParser: () => (/* binding */ EventParser)\n/* harmony export */ });\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n    constructor(programId, provider, coder){\n        this._programId = programId;\n        this._provider = provider;\n        this._eventParser = new EventParser(programId, coder);\n        this._eventCallbacks = new Map();\n        this._eventListeners = new Map();\n        this._listenerIdCount = 0;\n    }\n    addEventListener(eventName, callback) {\n        var _a;\n        let listener = this._listenerIdCount;\n        this._listenerIdCount += 1;\n        // Store the listener into the event map.\n        if (!this._eventListeners.has(eventName)) {\n            this._eventListeners.set(eventName, []);\n        }\n        this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n        // Store the callback into the listener map.\n        this._eventCallbacks.set(listener, [\n            eventName,\n            callback\n        ]);\n        // Create the subscription singleton, if needed.\n        if (this._onLogsSubscriptionId !== undefined) {\n            return listener;\n        }\n        this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx)=>{\n            if (logs.err) {\n                return;\n            }\n            for (const event of this._eventParser.parseLogs(logs.logs)){\n                const allListeners = this._eventListeners.get(event.name);\n                if (allListeners) {\n                    allListeners.forEach((listener)=>{\n                        const listenerCb = this._eventCallbacks.get(listener);\n                        if (listenerCb) {\n                            const [, callback] = listenerCb;\n                            callback(event.data, ctx.slot, logs.signature);\n                        }\n                    });\n                }\n            }\n        });\n        return listener;\n    }\n    async removeEventListener(listener) {\n        // Get the callback.\n        const callback = this._eventCallbacks.get(listener);\n        if (!callback) {\n            throw new Error(`Event listener ${listener} doesn't exist!`);\n        }\n        const [eventName] = callback;\n        // Get the listeners.\n        let listeners = this._eventListeners.get(eventName);\n        if (!listeners) {\n            throw new Error(`Event listeners don't exist for ${eventName}!`);\n        }\n        // Update both maps.\n        this._eventCallbacks.delete(listener);\n        listeners = listeners.filter((l)=>l !== listener);\n        this._eventListeners.set(eventName, listeners);\n        if (listeners.length === 0) {\n            this._eventListeners.delete(eventName);\n        }\n        // Kill the websocket connection if all listeners have been removed.\n        if (this._eventCallbacks.size === 0) {\n            if (this._eventListeners.size !== 0) {\n                throw new Error(`Expected event listeners size to be 0 but got ${this._eventListeners.size}`);\n            }\n            if (this._onLogsSubscriptionId !== undefined) {\n                await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n                this._onLogsSubscriptionId = undefined;\n            }\n        }\n    }\n}\nclass EventParser {\n    constructor(programId, coder){\n        this.coder = coder;\n        this.programId = programId;\n    }\n    // Each log given, represents an array of messages emitted by\n    // a single transaction, which can execute many different programs across\n    // CPI boundaries. However, the subscription is only interested in the\n    // events emitted by *this* program. In achieving this, we keep track of the\n    // program execution context by parsing each log and looking for a CPI\n    // `invoke` call. If one exists, we know a new program is executing. So we\n    // push the programId onto a stack and switch the program context. This\n    // allows us to track, for a given log, which program was executing during\n    // its emission, thereby allowing us to know if a given log event was\n    // emitted by *this* program. If it was, then we parse the raw string and\n    // emit the event if the string matches the event being subscribed to.\n    *parseLogs(logs, errorOnDecodeFailure = false) {\n        const logScanner = new LogScanner(logs);\n        const execution = new ExecutionContext();\n        let log = logScanner.next();\n        while(log !== null){\n            let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n            if (event) {\n                yield event;\n            }\n            if (newProgram) {\n                execution.push(newProgram);\n            }\n            if (didPop) {\n                execution.pop();\n            }\n            log = logScanner.next();\n        }\n    }\n    // Main log handler. Returns a three element array of the event, the\n    // next program that was invoked for CPI, and a boolean indicating if\n    // a program has completed execution (and thus should be popped off the\n    // execution stack).\n    handleLog(execution, log, errorOnDecodeFailure) {\n        // Executing program is this program.\n        if (execution.stack.length > 0 && execution.program() === this.programId.toString()) {\n            return this.handleProgramLog(log, errorOnDecodeFailure);\n        } else {\n            return [\n                null,\n                ...this.handleSystemLog(log)\n            ];\n        }\n    }\n    // Handles logs from *this* program.\n    handleProgramLog(log, errorOnDecodeFailure) {\n        // This is a `msg!` log or a `sol_log_data` log.\n        if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n            const logStr = log.startsWith(PROGRAM_LOG) ? log.slice(PROGRAM_LOG_START_INDEX) : log.slice(PROGRAM_DATA_START_INDEX);\n            const event = this.coder.events.decode(logStr);\n            if (errorOnDecodeFailure && event === null) {\n                throw new Error(`Unable to decode event ${logStr}`);\n            }\n            return [\n                event,\n                null,\n                false\n            ];\n        } else {\n            return [\n                null,\n                ...this.handleSystemLog(log)\n            ];\n        }\n    }\n    // Handles logs when the current program being executing is *not* this.\n    handleSystemLog(log) {\n        // System component.\n        const logStart = log.split(\":\")[0];\n        // Did the program finish executing?\n        if (logStart.match(/^Program (.*) success/g) !== null) {\n            return [\n                null,\n                true\n            ];\n        // Recursive call.\n        } else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n            return [\n                this.programId.toString(),\n                false\n            ];\n        } else if (logStart.includes(\"invoke\")) {\n            return [\n                \"cpi\",\n                false\n            ]; // Any string will do.\n        } else {\n            return [\n                null,\n                false\n            ];\n        }\n    }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n    constructor(){\n        this.stack = [];\n    }\n    program() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        return this.stack[this.stack.length - 1];\n    }\n    push(newProgram) {\n        this.stack.push(newProgram);\n    }\n    pop() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        this.stack.pop();\n    }\n}\nclass LogScanner {\n    constructor(logs){\n        this.logs = logs;\n    }\n    next() {\n        if (this.logs.length === 0) {\n            return null;\n        }\n        let l = this.logs[0];\n        this.logs = this.logs.slice(1);\n        return l;\n    }\n} //# sourceMappingURL=event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/event.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* reexport safe */ _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__.AccountClient),\n/* harmony export */   EventManager: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_6__.EventManager),\n/* harmony export */   EventParser: () => (/* reexport safe */ _event_js__WEBPACK_IMPORTED_MODULE_6__.EventParser),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__.MethodsBuilderFactory),\n/* harmony export */   Program: () => (/* binding */ Program),\n/* harmony export */   parseIdlErrors: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.parseIdlErrors),\n/* harmony export */   splitArgsAndCtx: () => (/* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_8__.splitArgsAndCtx),\n/* harmony export */   toInstruction: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.toInstruction),\n/* harmony export */   translateAddress: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress),\n/* harmony export */   validateAccounts: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_7__.validateAccounts)\n/* harmony export */ });\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pako */ \"(ssr)/../node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../provider.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coder/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./namespace/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/index.js\");\n/* harmony import */ var _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/bytes/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/event.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */ class Program {\n    /**\n     * Address of the program.\n     */ get programId() {\n        return this._programId;\n    }\n    /**\n     * IDL in camelCase format to work in TypeScript.\n     *\n     * See {@link rawIdl} field if you need the original IDL.\n     */ get idl() {\n        return this._idl;\n    }\n    /**\n     * Raw IDL i.e. the original IDL without camelCase conversion.\n     *\n     * See {@link idl} field if you need the camelCased version of the IDL.\n     */ get rawIdl() {\n        return this._rawIdl;\n    }\n    /**\n     * Coder for serializing requests.\n     */ get coder() {\n        return this._coder;\n    }\n    /**\n     * Wallet and network provider.\n     */ get provider() {\n        return this._provider;\n    }\n    /**\n     * @param idl       The interface definition.\n     * @param provider  The network and wallet context to use. If not provided\n     *                  then uses [[getProvider]].\n     * @param getCustomResolver A function that returns a custom account resolver\n     *                          for the given instruction. This is useful for resolving\n     *                          public keys of missing accounts when building instructions\n     */ constructor(idl, provider = (0,_provider_js__WEBPACK_IMPORTED_MODULE_1__.getProvider)(), coder, getCustomResolver){\n        const camelCasedIdl = (0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.convertIdlToCamelCase)(idl);\n        // Fields.\n        this._idl = camelCasedIdl;\n        this._rawIdl = idl;\n        this._provider = provider;\n        this._programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(idl.address);\n        this._coder = coder !== null && coder !== void 0 ? coder : new _coder_index_js__WEBPACK_IMPORTED_MODULE_3__.BorshCoder(camelCasedIdl);\n        this._events = new _event_js__WEBPACK_IMPORTED_MODULE_6__.EventManager(this._programId, provider, this._coder);\n        // Dynamic namespaces.\n        const [rpc, instruction, transaction, account, simulate, methods, views] = _namespace_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].build(camelCasedIdl, this._coder, this._programId, provider, getCustomResolver);\n        this.rpc = rpc;\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.account = account;\n        this.simulate = simulate;\n        this.methods = methods;\n        this.views = views;\n    }\n    /**\n     * Generates a Program client by fetching the IDL from the network.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */ static async at(address, provider) {\n        const programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(address);\n        const idl = await Program.fetchIdl(programId, provider);\n        if (!idl) {\n            throw new Error(`IDL not found for program: ${address.toString()}`);\n        }\n        return new Program(idl, provider);\n    }\n    /**\n     * Fetches an idl from the blockchain.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */ static async fetchIdl(address, provider) {\n        provider = provider !== null && provider !== void 0 ? provider : (0,_provider_js__WEBPACK_IMPORTED_MODULE_1__.getProvider)();\n        const programId = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.translateAddress)(address);\n        const idlAddr = await (0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.idlAddress)(programId);\n        const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n        if (!accountInfo) {\n            return null;\n        }\n        // Chop off account discriminator.\n        let idlAccount = (0,_idl_js__WEBPACK_IMPORTED_MODULE_2__.decodeIdlAccount)(accountInfo.data.slice(8));\n        const inflatedIdl = (0,pako__WEBPACK_IMPORTED_MODULE_0__.inflate)(idlAccount.data);\n        return JSON.parse(_utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_5__.utf8.decode(inflatedIdl));\n    }\n    /**\n     * Invokes the given callback every time the given event is emitted.\n     *\n     * @param eventName The PascalCase name of the event, provided by the IDL.\n     * @param callback  The function to invoke whenever the event is emitted from\n     *                  program logs.\n     */ addEventListener(eventName, callback) {\n        return this._events.addEventListener(eventName, callback);\n    }\n    /**\n     * Unsubscribes from the given eventName.\n     */ async removeEventListener(listener) {\n        return await this._events.removeEventListener(listener);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/account.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/account.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* binding */ AccountClient),\n/* harmony export */   \"default\": () => (/* binding */ AccountFactory)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/../node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../provider.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js\");\n/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../coder/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _utils_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/rpc.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js\");\n\n\n\n\n\n\nclass AccountFactory {\n    static build(idl, coder, programId, provider) {\n        var _a;\n        return ((_a = idl.accounts) !== null && _a !== void 0 ? _a : []).reduce((accountFns, acc)=>{\n            accountFns[acc.name] = new AccountClient(idl, acc, programId, provider, coder);\n            return accountFns;\n        }, {});\n    }\n}\nclass AccountClient {\n    /**\n     * Returns the number of bytes in this account.\n     */ get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */ get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */ get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */ get coder() {\n        return this._coder;\n    }\n    constructor(idl, idlAccount, programId, provider, coder){\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : (0,_provider_js__WEBPACK_IMPORTED_MODULE_2__.getProvider)();\n        this._coder = coder !== null && coder !== void 0 ? coder : new _coder_index_js__WEBPACK_IMPORTED_MODULE_3__.BorshCoder(idl);\n        this._size = this._coder.accounts.size(idlAccount.name);\n    }\n    /**\n     * Returns a deserialized account, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchNullable(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchNullableAndContext(address, commitment) {\n        const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n        const { value, context } = accountInfo;\n        return {\n            data: value && value.data.length !== 0 ? this._coder.accounts.decode(this._idlAccount.name, value.data) : null,\n            context\n        };\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetch(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist or has no data ${address.toString()}`);\n        }\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context.\n     *\n     * @param address The address of the account to fetch.\n     */ async fetchAndContext(address, commitment) {\n        const { data, context } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        return {\n            data,\n            context\n        };\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */ async fetchMultiple(addresses, commitment) {\n        const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n        return accounts.map((account)=>account ? account.data : null);\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */ async fetchMultipleAndContext(addresses, commitment) {\n        const accounts = await _utils_rpc_js__WEBPACK_IMPORTED_MODULE_5__.getMultipleAccountsAndContext(this._provider.connection, addresses.map((address)=>(0,_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(address)), commitment);\n        // Decode accounts where discriminator is correct, null otherwise\n        return accounts.map((result)=>{\n            if (result == null) {\n                return null;\n            }\n            const { account, context } = result;\n            return {\n                data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n                context\n            };\n        });\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     *\n     * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n     *\n     *                When filters are not defined this method returns all\n     *                the account instances.\n     *\n     *                When filters are of type `Buffer`, the filters are appended\n     *                after the discriminator.\n     *\n     *                When filters are of type `GetProgramAccountsFilter[]`,\n     *                filters are appended after the discriminator filter.\n     */ async all(filters) {\n        const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n        const coderFilters = [];\n        if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n            coderFilters.push({\n                memcmp: {\n                    offset: filter.offset,\n                    bytes: filter.bytes\n                }\n            });\n        }\n        if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n            coderFilters.push({\n                dataSize: filter.dataSize\n            });\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [\n                ...coderFilters,\n                ...Array.isArray(filters) ? filters : []\n            ]\n        });\n        return resp.map(({ pubkey, account })=>{\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data)\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */ subscribe(address, commitment) {\n        const sub = subscriptions.get(address.toString());\n        if (sub) {\n            return sub.ee;\n        }\n        const ee = new (eventemitter3__WEBPACK_IMPORTED_MODULE_0___default())();\n        address = (0,_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc)=>{\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */ async unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            await this._provider.connection.removeAccountChangeListener(sub.listener).then(()=>{\n                subscriptions.delete(address.toString());\n            }).catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */ async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        if (this._provider.publicKey === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n        }\n        return _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.SystemProgram.createAccount({\n            fromPubkey: this._provider.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId\n        });\n    }\n    async getAccountInfo(address, commitment) {\n        return await this._provider.connection.getAccountInfo((0,_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(address), commitment);\n    }\n    async getAccountInfoAndContext(address, commitment) {\n        return await this._provider.connection.getAccountInfoAndContext((0,_common_js__WEBPACK_IMPORTED_MODULE_4__.translateAddress)(address), commitment);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map(); //# sourceMappingURL=account.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/account.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/index.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountClient: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_3__.AccountClient),\n/* harmony export */   MethodsBuilderFactory: () => (/* reexport safe */ _methods__WEBPACK_IMPORTED_MODULE_6__.MethodsBuilderFactory),\n/* harmony export */   \"default\": () => (/* binding */ NamespaceFactory)\n/* harmony export */ });\n/* harmony import */ var _instruction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/instruction.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/transaction.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/rpc.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./account.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/account.js\");\n/* harmony import */ var _simulate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./simulate.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/simulate.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _methods__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./methods */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/methods.js\");\n/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./views */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/views.js\");\n\n\n\n\n\n\n\n\n\n\nclass NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */ static build(idl, coder, programId, provider, getCustomResolver) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const methods = {};\n        const view = {};\n        const idlErrors = (0,_common_js__WEBPACK_IMPORTED_MODULE_5__.parseIdlErrors)(idl);\n        const account = idl.accounts ? _account_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].build(idl, coder, programId, provider) : {};\n        idl.instructions.forEach((idlIx)=>{\n            const ixItem = _instruction_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].build(idlIx, (ixName, ix)=>coder.instruction.encode(ixName, ix), programId);\n            const txItem = _transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].build(idlIx, ixItem);\n            const rpcItem = _rpc_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = _simulate_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const viewItem = _views__WEBPACK_IMPORTED_MODULE_7__[\"default\"].build(programId, idlIx, simulateItem, idl);\n            const methodItem = _methods__WEBPACK_IMPORTED_MODULE_6__.MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver === null || getCustomResolver === void 0 ? void 0 : getCustomResolver(idlIx));\n            const name = idlIx.name;\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n            methods[name] = methodItem;\n            if (viewItem) {\n                view[name] = viewItem;\n            }\n        });\n        return [\n            rpc,\n            instruction,\n            transaction,\n            account,\n            simulate,\n            methods,\n            view\n        ];\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ0E7QUFDaEI7QUFDUTtBQUNFO0FBQ0U7QUFDSTtBQUNoQjtBQUNXO0FBQ0s7QUFDbkMsTUFBTVM7SUFDakI7O0tBRUMsR0FDRCxPQUFPQyxNQUFNQyxHQUFHLEVBQUVDLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLGlCQUFpQixFQUFFO1FBQzdELE1BQU1DLE1BQU0sQ0FBQztRQUNiLE1BQU1DLGNBQWMsQ0FBQztRQUNyQixNQUFNQyxjQUFjLENBQUM7UUFDckIsTUFBTUMsV0FBVyxDQUFDO1FBQ2xCLE1BQU1DLFVBQVUsQ0FBQztRQUNqQixNQUFNQyxPQUFPLENBQUM7UUFDZCxNQUFNQyxZQUFZakIsMERBQWNBLENBQUNNO1FBQ2pDLE1BQU1ZLFVBQVVaLElBQUlhLFFBQVEsR0FDdEJyQixtREFBY0EsQ0FBQ08sS0FBSyxDQUFDQyxLQUFLQyxPQUFPQyxXQUFXQyxZQUM1QyxDQUFDO1FBQ1BILElBQUljLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLENBQUNDO1lBQ3RCLE1BQU1DLFNBQVM1Qix1REFBa0JBLENBQUNVLEtBQUssQ0FBQ2lCLE9BQU8sQ0FBQ0UsUUFBUUMsS0FBT2xCLE1BQU1LLFdBQVcsQ0FBQ2MsTUFBTSxDQUFDRixRQUFRQyxLQUFLakI7WUFDckcsTUFBTW1CLFNBQVMvQix1REFBa0JBLENBQUNTLEtBQUssQ0FBQ2lCLE9BQU9DO1lBQy9DLE1BQU1LLFVBQVUvQiwrQ0FBVUEsQ0FBQ1EsS0FBSyxDQUFDaUIsT0FBT0ssUUFBUVYsV0FBV1I7WUFDM0QsTUFBTW9CLGVBQWU5QixvREFBZUEsQ0FBQ00sS0FBSyxDQUFDaUIsT0FBT0ssUUFBUVYsV0FBV1IsVUFBVUYsT0FBT0MsV0FBV0Y7WUFDakcsTUFBTXdCLFdBQVc1Qiw4Q0FBV0EsQ0FBQ0csS0FBSyxDQUFDRyxXQUFXYyxPQUFPTyxjQUFjdkI7WUFDbkUsTUFBTXlCLGFBQWE5QiwyREFBcUJBLENBQUNJLEtBQUssQ0FBQ0ksVUFBVUQsV0FBV2MsT0FBT0MsUUFBUUksUUFBUUMsU0FBU0MsY0FBY0MsVUFBVVosU0FBU1osSUFBSTBCLEtBQUssSUFBSSxFQUFFLEVBQUV0QixzQkFBc0IsUUFBUUEsc0JBQXNCLEtBQUssSUFBSSxLQUFLLElBQUlBLGtCQUFrQlk7WUFDOU8sTUFBTVcsT0FBT1gsTUFBTVcsSUFBSTtZQUN2QnJCLFdBQVcsQ0FBQ3FCLEtBQUssR0FBR1Y7WUFDcEJWLFdBQVcsQ0FBQ29CLEtBQUssR0FBR047WUFDcEJoQixHQUFHLENBQUNzQixLQUFLLEdBQUdMO1lBQ1pkLFFBQVEsQ0FBQ21CLEtBQUssR0FBR0o7WUFDakJkLE9BQU8sQ0FBQ2tCLEtBQUssR0FBR0Y7WUFDaEIsSUFBSUQsVUFBVTtnQkFDVmQsSUFBSSxDQUFDaUIsS0FBSyxHQUFHSDtZQUNqQjtRQUNKO1FBQ0EsT0FBTztZQUNIbkI7WUFDQUM7WUFDQUM7WUFDQUs7WUFDQUo7WUFDQUM7WUFDQUM7U0FDSDtJQUNMO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL2luZGV4LmpzPzRhODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEluc3RydWN0aW9uRmFjdG9yeSBmcm9tIFwiLi9pbnN0cnVjdGlvbi5qc1wiO1xuaW1wb3J0IFRyYW5zYWN0aW9uRmFjdG9yeSBmcm9tIFwiLi90cmFuc2FjdGlvbi5qc1wiO1xuaW1wb3J0IFJwY0ZhY3RvcnkgZnJvbSBcIi4vcnBjLmpzXCI7XG5pbXBvcnQgQWNjb3VudEZhY3RvcnkgZnJvbSBcIi4vYWNjb3VudC5qc1wiO1xuaW1wb3J0IFNpbXVsYXRlRmFjdG9yeSBmcm9tIFwiLi9zaW11bGF0ZS5qc1wiO1xuaW1wb3J0IHsgcGFyc2VJZGxFcnJvcnMgfSBmcm9tIFwiLi4vY29tbW9uLmpzXCI7XG5pbXBvcnQgeyBNZXRob2RzQnVpbGRlckZhY3RvcnkgfSBmcm9tIFwiLi9tZXRob2RzXCI7XG5pbXBvcnQgVmlld0ZhY3RvcnkgZnJvbSBcIi4vdmlld3NcIjtcbmV4cG9ydCB7IEFjY291bnRDbGllbnQgfSBmcm9tIFwiLi9hY2NvdW50LmpzXCI7XG5leHBvcnQgeyBNZXRob2RzQnVpbGRlckZhY3RvcnkgfSBmcm9tIFwiLi9tZXRob2RzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYW1lc3BhY2VGYWN0b3J5IHtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYWxsIG5hbWVzcGFjZXMgZm9yIGEgZ2l2ZW4gcHJvZ3JhbS5cbiAgICAgKi9cbiAgICBzdGF0aWMgYnVpbGQoaWRsLCBjb2RlciwgcHJvZ3JhbUlkLCBwcm92aWRlciwgZ2V0Q3VzdG9tUmVzb2x2ZXIpIHtcbiAgICAgICAgY29uc3QgcnBjID0ge307XG4gICAgICAgIGNvbnN0IGluc3RydWN0aW9uID0ge307XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0ge307XG4gICAgICAgIGNvbnN0IHNpbXVsYXRlID0ge307XG4gICAgICAgIGNvbnN0IG1ldGhvZHMgPSB7fTtcbiAgICAgICAgY29uc3QgdmlldyA9IHt9O1xuICAgICAgICBjb25zdCBpZGxFcnJvcnMgPSBwYXJzZUlkbEVycm9ycyhpZGwpO1xuICAgICAgICBjb25zdCBhY2NvdW50ID0gaWRsLmFjY291bnRzXG4gICAgICAgICAgICA/IEFjY291bnRGYWN0b3J5LmJ1aWxkKGlkbCwgY29kZXIsIHByb2dyYW1JZCwgcHJvdmlkZXIpXG4gICAgICAgICAgICA6IHt9O1xuICAgICAgICBpZGwuaW5zdHJ1Y3Rpb25zLmZvckVhY2goKGlkbEl4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpeEl0ZW0gPSBJbnN0cnVjdGlvbkZhY3RvcnkuYnVpbGQoaWRsSXgsIChpeE5hbWUsIGl4KSA9PiBjb2Rlci5pbnN0cnVjdGlvbi5lbmNvZGUoaXhOYW1lLCBpeCksIHByb2dyYW1JZCk7XG4gICAgICAgICAgICBjb25zdCB0eEl0ZW0gPSBUcmFuc2FjdGlvbkZhY3RvcnkuYnVpbGQoaWRsSXgsIGl4SXRlbSk7XG4gICAgICAgICAgICBjb25zdCBycGNJdGVtID0gUnBjRmFjdG9yeS5idWlsZChpZGxJeCwgdHhJdGVtLCBpZGxFcnJvcnMsIHByb3ZpZGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHNpbXVsYXRlSXRlbSA9IFNpbXVsYXRlRmFjdG9yeS5idWlsZChpZGxJeCwgdHhJdGVtLCBpZGxFcnJvcnMsIHByb3ZpZGVyLCBjb2RlciwgcHJvZ3JhbUlkLCBpZGwpO1xuICAgICAgICAgICAgY29uc3Qgdmlld0l0ZW0gPSBWaWV3RmFjdG9yeS5idWlsZChwcm9ncmFtSWQsIGlkbEl4LCBzaW11bGF0ZUl0ZW0sIGlkbCk7XG4gICAgICAgICAgICBjb25zdCBtZXRob2RJdGVtID0gTWV0aG9kc0J1aWxkZXJGYWN0b3J5LmJ1aWxkKHByb3ZpZGVyLCBwcm9ncmFtSWQsIGlkbEl4LCBpeEl0ZW0sIHR4SXRlbSwgcnBjSXRlbSwgc2ltdWxhdGVJdGVtLCB2aWV3SXRlbSwgYWNjb3VudCwgaWRsLnR5cGVzIHx8IFtdLCBnZXRDdXN0b21SZXNvbHZlciA9PT0gbnVsbCB8fCBnZXRDdXN0b21SZXNvbHZlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2V0Q3VzdG9tUmVzb2x2ZXIoaWRsSXgpKTtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBpZGxJeC5uYW1lO1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bbmFtZV0gPSBpeEl0ZW07XG4gICAgICAgICAgICB0cmFuc2FjdGlvbltuYW1lXSA9IHR4SXRlbTtcbiAgICAgICAgICAgIHJwY1tuYW1lXSA9IHJwY0l0ZW07XG4gICAgICAgICAgICBzaW11bGF0ZVtuYW1lXSA9IHNpbXVsYXRlSXRlbTtcbiAgICAgICAgICAgIG1ldGhvZHNbbmFtZV0gPSBtZXRob2RJdGVtO1xuICAgICAgICAgICAgaWYgKHZpZXdJdGVtKSB7XG4gICAgICAgICAgICAgICAgdmlld1tuYW1lXSA9IHZpZXdJdGVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHJwYyxcbiAgICAgICAgICAgIGluc3RydWN0aW9uLFxuICAgICAgICAgICAgdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgc2ltdWxhdGUsXG4gICAgICAgICAgICBtZXRob2RzLFxuICAgICAgICAgICAgdmlldyxcbiAgICAgICAgXTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiSW5zdHJ1Y3Rpb25GYWN0b3J5IiwiVHJhbnNhY3Rpb25GYWN0b3J5IiwiUnBjRmFjdG9yeSIsIkFjY291bnRGYWN0b3J5IiwiU2ltdWxhdGVGYWN0b3J5IiwicGFyc2VJZGxFcnJvcnMiLCJNZXRob2RzQnVpbGRlckZhY3RvcnkiLCJWaWV3RmFjdG9yeSIsIkFjY291bnRDbGllbnQiLCJOYW1lc3BhY2VGYWN0b3J5IiwiYnVpbGQiLCJpZGwiLCJjb2RlciIsInByb2dyYW1JZCIsInByb3ZpZGVyIiwiZ2V0Q3VzdG9tUmVzb2x2ZXIiLCJycGMiLCJpbnN0cnVjdGlvbiIsInRyYW5zYWN0aW9uIiwic2ltdWxhdGUiLCJtZXRob2RzIiwidmlldyIsImlkbEVycm9ycyIsImFjY291bnQiLCJhY2NvdW50cyIsImluc3RydWN0aW9ucyIsImZvckVhY2giLCJpZGxJeCIsIml4SXRlbSIsIml4TmFtZSIsIml4IiwiZW5jb2RlIiwidHhJdGVtIiwicnBjSXRlbSIsInNpbXVsYXRlSXRlbSIsInZpZXdJdGVtIiwibWV0aG9kSXRlbSIsInR5cGVzIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/instruction.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/instruction.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InstructionNamespaceFactory)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _idl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../idl.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/idl.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _utils_features_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/features.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js\");\n\n\n\n\n\n\nclass InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new _error_js__WEBPACK_IMPORTED_MODULE_2__.IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args)=>{\n            const [ixArgs, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_4__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            (0,_common_js__WEBPACK_IMPORTED_MODULE_3__.validateAccounts)(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (_utils_features_js__WEBPACK_IMPORTED_MODULE_5__.isSet(\"debug-logs\")) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, (0,_common_js__WEBPACK_IMPORTED_MODULE_3__.toInstruction)(idlIx, ...ixArgs))\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs)=>{\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts, programId, ixName) {\n        if (!ctx) {\n            return [];\n        }\n        return accounts.map((acc)=>{\n            if ((0,_idl_js__WEBPACK_IMPORTED_MODULE_1__.isCompositeAccounts)(acc)) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n            }\n            let pubkey;\n            try {\n                pubkey = (0,_common_js__WEBPACK_IMPORTED_MODULE_3__.translateAddress)(ctx[acc.name]);\n            } catch (err) {\n                throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n            }\n            const isOptional = acc.optional && pubkey.equals(programId);\n            const isWritable = Boolean(acc.writable && !isOptional);\n            const isSigner = Boolean(acc.signer && !isOptional);\n            return {\n                pubkey,\n                isWritable,\n                isSigner\n            };\n        }).flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n// todo\n} //# sourceMappingURL=instruction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL2luc3RydWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEQ7QUFDTjtBQUNWO0FBQ3dDO0FBQ2xDO0FBQ0k7QUFDckMsTUFBTVE7SUFDakIsT0FBT0MsTUFBTUMsS0FBSyxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRTtRQUNyQyxJQUFJRixNQUFNRyxJQUFJLEtBQUssVUFBVTtZQUN6QixNQUFNLElBQUlYLCtDQUFRQSxDQUFDO1FBQ3ZCO1FBQ0EsTUFBTVksS0FBSyxDQUFDLEdBQUdDO1lBQ1gsTUFBTSxDQUFDQyxRQUFRQyxJQUFJLEdBQUdYLDREQUFlQSxDQUFDSSxPQUFPO21CQUFJSzthQUFLO1lBQ3REViw0REFBZ0JBLENBQUNLLE1BQU1RLFFBQVEsRUFBRUQsSUFBSUMsUUFBUTtZQUM3Q0Msb0JBQW9CVCxVQUFVSztZQUM5QixNQUFNSyxPQUFPTixHQUFHSSxRQUFRLENBQUNELElBQUlDLFFBQVE7WUFDckMsSUFBSUQsSUFBSUksaUJBQWlCLEtBQUtDLFdBQVc7Z0JBQ3JDRixLQUFLRyxJQUFJLElBQUlOLElBQUlJLGlCQUFpQjtZQUN0QztZQUNBLElBQUlkLHFEQUFjLENBQUMsZUFBZTtnQkFDOUJrQixRQUFRQyxHQUFHLENBQUMsMkJBQTJCTjtZQUMzQztZQUNBLE9BQU8sSUFBSXBCLG1FQUFzQkEsQ0FBQztnQkFDOUJvQjtnQkFDQVI7Z0JBQ0FlLE1BQU1oQixTQUFTRCxNQUFNRyxJQUFJLEVBQUVWLHlEQUFhQSxDQUFDTyxVQUFVTTtZQUN2RDtRQUNKO1FBQ0EsNkRBQTZEO1FBQzdERixFQUFFLENBQUMsV0FBVyxHQUFHLENBQUNjO1lBQ2QsT0FBT3BCLDRCQUE0QnFCLGFBQWEsQ0FBQ0QsTUFBTWxCLE1BQU1RLFFBQVEsRUFBRU4sV0FBV0YsTUFBTUcsSUFBSTtRQUNoRztRQUNBLE9BQU9DO0lBQ1g7SUFDQSxPQUFPZSxjQUFjWixHQUFHLEVBQUVDLFFBQVEsRUFBRU4sU0FBUyxFQUFFa0IsTUFBTSxFQUFFO1FBQ25ELElBQUksQ0FBQ2IsS0FBSztZQUNOLE9BQU8sRUFBRTtRQUNiO1FBQ0EsT0FBT0MsU0FDRmEsR0FBRyxDQUFDLENBQUNDO1lBQ04sSUFBSS9CLDREQUFtQkEsQ0FBQytCLE1BQU07Z0JBQzFCLE1BQU1DLFVBQVVoQixHQUFHLENBQUNlLElBQUluQixJQUFJLENBQUM7Z0JBQzdCLE9BQU9MLDRCQUE0QnFCLGFBQWEsQ0FBQ0ksU0FBU0QsSUFBSWQsUUFBUSxFQUFFTixXQUFXa0IsUUFBUUksSUFBSTtZQUNuRztZQUNBLElBQUlDO1lBQ0osSUFBSTtnQkFDQUEsU0FBUy9CLDREQUFnQkEsQ0FBQ2EsR0FBRyxDQUFDZSxJQUFJbkIsSUFBSSxDQUFDO1lBQzNDLEVBQ0EsT0FBT3VCLEtBQUs7Z0JBQ1IsTUFBTSxJQUFJQyxNQUFNLENBQUMsOEJBQThCLEVBQUVMLElBQUluQixJQUFJLENBQUMsb0NBQW9DLEVBQUVpQixXQUFXUixZQUFZLHVCQUF1QlEsU0FBUyxNQUFNLEdBQUcsK0JBQStCLENBQUM7WUFDcE07WUFDQSxNQUFNUSxhQUFhTixJQUFJTyxRQUFRLElBQUlKLE9BQU9LLE1BQU0sQ0FBQzVCO1lBQ2pELE1BQU02QixhQUFhQyxRQUFRVixJQUFJVyxRQUFRLElBQUksQ0FBQ0w7WUFDNUMsTUFBTU0sV0FBV0YsUUFBUVYsSUFBSWEsTUFBTSxJQUFJLENBQUNQO1lBQ3hDLE9BQU87Z0JBQ0hIO2dCQUNBTTtnQkFDQUc7WUFDSjtRQUNKLEdBQ0tWLElBQUk7SUFDYjtBQUNKO0FBQ0EsbUVBQW1FO0FBQ25FLFNBQVNmLG9CQUFvQkwsRUFBRSxFQUFFLEdBQUdDLElBQUk7QUFDcEMsT0FBTztBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9wcm9ncmFtL25hbWVzcGFjZS9pbnN0cnVjdGlvbi5qcz84N2E2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24sIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgaXNDb21wb3NpdGVBY2NvdW50cywgfSBmcm9tIFwiLi4vLi4vaWRsLmpzXCI7XG5pbXBvcnQgeyBJZGxFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvci5qc1wiO1xuaW1wb3J0IHsgdG9JbnN0cnVjdGlvbiwgdHJhbnNsYXRlQWRkcmVzcywgdmFsaWRhdGVBY2NvdW50cywgfSBmcm9tIFwiLi4vY29tbW9uLmpzXCI7XG5pbXBvcnQgeyBzcGxpdEFyZ3NBbmRDdHggfSBmcm9tIFwiLi4vY29udGV4dC5qc1wiO1xuaW1wb3J0ICogYXMgZmVhdHVyZXMgZnJvbSBcIi4uLy4uL3V0aWxzL2ZlYXR1cmVzLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnN0cnVjdGlvbk5hbWVzcGFjZUZhY3Rvcnkge1xuICAgIHN0YXRpYyBidWlsZChpZGxJeCwgZW5jb2RlRm4sIHByb2dyYW1JZCkge1xuICAgICAgICBpZiAoaWRsSXgubmFtZSA9PT0gXCJfaW5uZXJcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IElkbEVycm9yKFwidGhlIF9pbm5lciBuYW1lIGlzIHJlc2VydmVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl4ID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IFtpeEFyZ3MsIGN0eF0gPSBzcGxpdEFyZ3NBbmRDdHgoaWRsSXgsIFsuLi5hcmdzXSk7XG4gICAgICAgICAgICB2YWxpZGF0ZUFjY291bnRzKGlkbEl4LmFjY291bnRzLCBjdHguYWNjb3VudHMpO1xuICAgICAgICAgICAgdmFsaWRhdGVJbnN0cnVjdGlvbihpZGxJeCwgLi4uYXJncyk7XG4gICAgICAgICAgICBjb25zdCBrZXlzID0gaXguYWNjb3VudHMoY3R4LmFjY291bnRzKTtcbiAgICAgICAgICAgIGlmIChjdHgucmVtYWluaW5nQWNjb3VudHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGtleXMucHVzaCguLi5jdHgucmVtYWluaW5nQWNjb3VudHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZlYXR1cmVzLmlzU2V0KFwiZGVidWctbG9nc1wiKSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT3V0Z29pbmcgYWNjb3VudCBtZXRhczpcIiwga2V5cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24oe1xuICAgICAgICAgICAgICAgIGtleXMsXG4gICAgICAgICAgICAgICAgcHJvZ3JhbUlkLFxuICAgICAgICAgICAgICAgIGRhdGE6IGVuY29kZUZuKGlkbEl4Lm5hbWUsIHRvSW5zdHJ1Y3Rpb24oaWRsSXgsIC4uLml4QXJncykpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIC8vIFV0aWxpdHkgZm4gZm9yIG9yZGVyaW5nIHRoZSBhY2NvdW50cyBmb3IgdGhpcyBpbnN0cnVjdGlvbi5cbiAgICAgICAgaXhbXCJhY2NvdW50c1wiXSA9IChhY2NzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gSW5zdHJ1Y3Rpb25OYW1lc3BhY2VGYWN0b3J5LmFjY291bnRzQXJyYXkoYWNjcywgaWRsSXguYWNjb3VudHMsIHByb2dyYW1JZCwgaWRsSXgubmFtZSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBpeDtcbiAgICB9XG4gICAgc3RhdGljIGFjY291bnRzQXJyYXkoY3R4LCBhY2NvdW50cywgcHJvZ3JhbUlkLCBpeE5hbWUpIHtcbiAgICAgICAgaWYgKCFjdHgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjb3VudHNcbiAgICAgICAgICAgIC5tYXAoKGFjYykgPT4ge1xuICAgICAgICAgICAgaWYgKGlzQ29tcG9zaXRlQWNjb3VudHMoYWNjKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJwY0FjY3MgPSBjdHhbYWNjLm5hbWVdO1xuICAgICAgICAgICAgICAgIHJldHVybiBJbnN0cnVjdGlvbk5hbWVzcGFjZUZhY3RvcnkuYWNjb3VudHNBcnJheShycGNBY2NzLCBhY2MuYWNjb3VudHMsIHByb2dyYW1JZCwgaXhOYW1lKS5mbGF0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgcHVia2V5O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwdWJrZXkgPSB0cmFuc2xhdGVBZGRyZXNzKGN0eFthY2MubmFtZV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV3JvbmcgaW5wdXQgdHlwZSBmb3IgYWNjb3VudCBcIiR7YWNjLm5hbWV9XCIgaW4gdGhlIGluc3RydWN0aW9uIGFjY291bnRzIG9iamVjdCR7aXhOYW1lICE9PSB1bmRlZmluZWQgPyAnIGZvciBpbnN0cnVjdGlvbiBcIicgKyBpeE5hbWUgKyAnXCInIDogXCJcIn0uIEV4cGVjdGVkIFB1YmxpY0tleSBvciBzdHJpbmcuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpc09wdGlvbmFsID0gYWNjLm9wdGlvbmFsICYmIHB1YmtleS5lcXVhbHMocHJvZ3JhbUlkKTtcbiAgICAgICAgICAgIGNvbnN0IGlzV3JpdGFibGUgPSBCb29sZWFuKGFjYy53cml0YWJsZSAmJiAhaXNPcHRpb25hbCk7XG4gICAgICAgICAgICBjb25zdCBpc1NpZ25lciA9IEJvb2xlYW4oYWNjLnNpZ25lciAmJiAhaXNPcHRpb25hbCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHB1YmtleSxcbiAgICAgICAgICAgICAgICBpc1dyaXRhYmxlLFxuICAgICAgICAgICAgICAgIGlzU2lnbmVyLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5mbGF0KCk7XG4gICAgfVxufVxuLy8gVGhyb3dzIGVycm9yIGlmIGFueSBhcmd1bWVudCByZXF1aXJlZCBmb3IgdGhlIGBpeGAgaXMgbm90IGdpdmVuLlxuZnVuY3Rpb24gdmFsaWRhdGVJbnN0cnVjdGlvbihpeCwgLi4uYXJncykge1xuICAgIC8vIHRvZG9cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJUcmFuc2FjdGlvbkluc3RydWN0aW9uIiwiaXNDb21wb3NpdGVBY2NvdW50cyIsIklkbEVycm9yIiwidG9JbnN0cnVjdGlvbiIsInRyYW5zbGF0ZUFkZHJlc3MiLCJ2YWxpZGF0ZUFjY291bnRzIiwic3BsaXRBcmdzQW5kQ3R4IiwiZmVhdHVyZXMiLCJJbnN0cnVjdGlvbk5hbWVzcGFjZUZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwiZW5jb2RlRm4iLCJwcm9ncmFtSWQiLCJuYW1lIiwiaXgiLCJhcmdzIiwiaXhBcmdzIiwiY3R4IiwiYWNjb3VudHMiLCJ2YWxpZGF0ZUluc3RydWN0aW9uIiwia2V5cyIsInJlbWFpbmluZ0FjY291bnRzIiwidW5kZWZpbmVkIiwicHVzaCIsImlzU2V0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJhY2NzIiwiYWNjb3VudHNBcnJheSIsIml4TmFtZSIsIm1hcCIsImFjYyIsInJwY0FjY3MiLCJmbGF0IiwicHVia2V5IiwiZXJyIiwiRXJyb3IiLCJpc09wdGlvbmFsIiwib3B0aW9uYWwiLCJlcXVhbHMiLCJpc1dyaXRhYmxlIiwiQm9vbGVhbiIsIndyaXRhYmxlIiwiaXNTaWduZXIiLCJzaWduZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/instruction.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/methods.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/methods.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MethodsBuilder: () => (/* binding */ MethodsBuilder),\n/* harmony export */   MethodsBuilderFactory: () => (/* binding */ MethodsBuilderFactory),\n/* harmony export */   flattenPartialAccounts: () => (/* binding */ flattenPartialAccounts),\n/* harmony export */   isPartialAccounts: () => (/* binding */ isPartialAccounts)\n/* harmony export */ });\n/* harmony import */ var _accounts_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../accounts-resolver.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/accounts-resolver.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n\n\nclass MethodsBuilderFactory {\n    static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n        return (...args)=>new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n}\nfunction isPartialAccounts(partialAccount) {\n    return typeof partialAccount === \"object\" && partialAccount !== null && !(\"_bn\" in partialAccount // Ensures not a pubkey\n    );\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n    const toReturn = {};\n    for(const accountName in partialAccounts){\n        const account = partialAccounts[accountName];\n        if (account === null) {\n            if (throwOnNull) throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n            continue;\n        }\n        toReturn[accountName] = isPartialAccounts(account) ? flattenPartialAccounts(account, true) : (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.translateAddress)(account);\n    }\n    return toReturn;\n}\nclass MethodsBuilder {\n    constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver){\n        this._args = _args;\n        this._ixFn = _ixFn;\n        this._txFn = _txFn;\n        this._rpcFn = _rpcFn;\n        this._simulateFn = _simulateFn;\n        this._viewFn = _viewFn;\n        this._accounts = {};\n        this._remainingAccounts = [];\n        this._signers = [];\n        this._preInstructions = [];\n        this._postInstructions = [];\n        this._resolveAccounts = true;\n        this._accountsResolver = new _accounts_resolver_js__WEBPACK_IMPORTED_MODULE_0__.AccountsResolver(_args, this._accounts, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n    args(args) {\n        this._args = args;\n        this._accountsResolver.args(args);\n    }\n    /**\n     * Set instruction accounts with account resolution.\n     *\n     * This method only accepts accounts that cannot be resolved.\n     *\n     * See {@link accountsPartial} for overriding the account resolution or\n     * {@link accountsStrict} for strictly specifying all accounts.\n     */ accounts(accounts) {\n        // @ts-ignore\n        return this.accountsPartial(accounts);\n    }\n    /**\n     * Set instruction accounts with account resolution.\n     *\n     * There is no functional difference between this method and {@link accounts}\n     * method, the only difference is this method allows specifying all accounts\n     * even if they can be resolved. On the other hand, {@link accounts} method\n     * doesn't accept accounts that can be resolved.\n     */ accountsPartial(accounts) {\n        this._resolveAccounts = true;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    /**\n     * Set instruction accounts without account resolution.\n     *\n     * All accounts strictly need to be specified when this method is used.\n     *\n     * See {@link accounts} and {@link accountsPartial} methods for automatically\n     * resolving accounts.\n     */ accountsStrict(accounts) {\n        this._resolveAccounts = false;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    signers(signers) {\n        this._signers = this._signers.concat(signers);\n        return this;\n    }\n    remainingAccounts(accounts) {\n        this._remainingAccounts = this._remainingAccounts.concat(accounts);\n        return this;\n    }\n    preInstructions(ixs, prepend = false) {\n        if (prepend) {\n            this._preInstructions = ixs.concat(this._preInstructions);\n        } else {\n            this._preInstructions = this._preInstructions.concat(ixs);\n        }\n        return this;\n    }\n    postInstructions(ixs) {\n        this._postInstructions = this._postInstructions.concat(ixs);\n        return this;\n    }\n    /**\n     * Get the public keys of the instruction accounts.\n     *\n     * The return type is an object with account names as keys and their public\n     * keys as their values.\n     *\n     * Note that an account key is `undefined` if the account hasn't yet been\n     * specified or resolved.\n     */ async pubkeys() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._accounts;\n    }\n    async rpc(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._rpcFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options\n        });\n    }\n    async rpcAndKeys(options) {\n        const pubkeys = await this.pubkeys();\n        return {\n            pubkeys: pubkeys,\n            signature: await this.rpc(options)\n        };\n    }\n    async view(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        if (!this._viewFn) {\n            throw new Error(\"Method does not support views\");\n        }\n        // @ts-ignore\n        return this._viewFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options\n        });\n    }\n    async simulate(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._simulateFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options\n        });\n    }\n    async instruction() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._ixFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions\n        });\n    }\n    /**\n     * Convenient shortcut to get instructions and pubkeys via:\n     *\n     * ```ts\n     * const { pubkeys, instructions } = await method.prepare();\n     * ```\n     */ async prepare() {\n        return {\n            instruction: await this.instruction(),\n            pubkeys: await this.pubkeys(),\n            signers: this._signers\n        };\n    }\n    async transaction() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._txFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions\n        });\n    }\n} //# sourceMappingURL=methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/methods.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/rpc.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/rpc.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RpcFactory)\n/* harmony export */ });\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\");\n\n\nclass RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args)=>{\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_0__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            if (provider.sendAndConfirm === undefined) {\n                throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n            }\n            try {\n                return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n            } catch (err) {\n                throw (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.translateError)(err, idlErrors);\n            }\n        };\n        return rpc;\n    }\n} //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3JwYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDQTtBQUNqQyxNQUFNRTtJQUNqQixPQUFPQyxNQUFNQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUU7UUFDM0MsTUFBTUMsTUFBTSxPQUFPLEdBQUdDO1lBQ2xCLElBQUlDO1lBQ0osTUFBTUMsS0FBS04sUUFBUUk7WUFDbkIsTUFBTSxHQUFHRyxJQUFJLEdBQUdaLDREQUFlQSxDQUFDSSxPQUFPO21CQUFJSzthQUFLO1lBQ2hELElBQUlGLFNBQVNNLGNBQWMsS0FBS0MsV0FBVztnQkFDdkMsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCO1lBQ0EsSUFBSTtnQkFDQSxPQUFPLE1BQU1SLFNBQVNNLGNBQWMsQ0FBQ0YsSUFBSSxDQUFDRCxLQUFLRSxJQUFJSSxPQUFPLE1BQU0sUUFBUU4sT0FBTyxLQUFLLElBQUlBLEtBQUssRUFBRSxFQUFFRSxJQUFJSyxPQUFPO1lBQ2hILEVBQ0EsT0FBT0MsS0FBSztnQkFDUixNQUFNakIseURBQWNBLENBQUNpQixLQUFLWjtZQUM5QjtRQUNKO1FBQ0EsT0FBT0U7SUFDWDtBQUNKLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS9wcm9ncmFtL25hbWVzcGFjZS9ycGMuanM/MjQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzcGxpdEFyZ3NBbmRDdHggfSBmcm9tIFwiLi4vY29udGV4dC5qc1wiO1xuaW1wb3J0IHsgdHJhbnNsYXRlRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3IuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJwY0ZhY3Rvcnkge1xuICAgIHN0YXRpYyBidWlsZChpZGxJeCwgdHhGbiwgaWRsRXJyb3JzLCBwcm92aWRlcikge1xuICAgICAgICBjb25zdCBycGMgPSBhc3luYyAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3QgdHggPSB0eEZuKC4uLmFyZ3MpO1xuICAgICAgICAgICAgY29uc3QgWywgY3R4XSA9IHNwbGl0QXJnc0FuZEN0eChpZGxJeCwgWy4uLmFyZ3NdKTtcbiAgICAgICAgICAgIGlmIChwcm92aWRlci5zZW5kQW5kQ29uZmlybSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBmdW5jdGlvbiByZXF1aXJlcyAnUHJvdmlkZXIuc2VuZEFuZENvbmZpcm0nIHRvIGJlIGltcGxlbWVudGVkLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHByb3ZpZGVyLnNlbmRBbmRDb25maXJtKHR4LCAoX2EgPSBjdHguc2lnbmVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10sIGN0eC5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyB0cmFuc2xhdGVFcnJvcihlcnIsIGlkbEVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBycGM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnBjLmpzLm1hcCJdLCJuYW1lcyI6WyJzcGxpdEFyZ3NBbmRDdHgiLCJ0cmFuc2xhdGVFcnJvciIsIlJwY0ZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwidHhGbiIsImlkbEVycm9ycyIsInByb3ZpZGVyIiwicnBjIiwiYXJncyIsIl9hIiwidHgiLCJjdHgiLCJzZW5kQW5kQ29uZmlybSIsInVuZGVmaW5lZCIsIkVycm9yIiwic2lnbmVycyIsIm9wdGlvbnMiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/rpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/simulate.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/simulate.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SimulateFactory)\n/* harmony export */ });\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../event.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/event.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/error.js\");\n\n\n\nclass SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args)=>{\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_0__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            let resp = undefined;\n            if (provider.simulate === undefined) {\n                throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n            }\n            try {\n                resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n            } catch (err) {\n                throw (0,_error_js__WEBPACK_IMPORTED_MODULE_2__.translateError)(err, idlErrors);\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            const logs = resp.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new _event_js__WEBPACK_IMPORTED_MODULE_1__.EventParser(programId, coder);\n                for (const event of parser.parseLogs(logs)){\n                    events.push(event);\n                }\n            }\n            return {\n                events,\n                raw: logs\n            };\n        };\n        return simulate;\n    }\n} //# sourceMappingURL=simulate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3NpbXVsYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFDTjtBQUNNO0FBQ2pDLE1BQU1HO0lBQ2pCLE9BQU9DLE1BQU1DLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRTtRQUNsRSxNQUFNQyxXQUFXLE9BQU8sR0FBR0M7WUFDdkIsSUFBSUM7WUFDSixNQUFNQyxLQUFLVCxRQUFRTztZQUNuQixNQUFNLEdBQUdHLElBQUksR0FBR2hCLDREQUFlQSxDQUFDSyxPQUFPO21CQUFJUTthQUFLO1lBQ2hELElBQUlJLE9BQU9DO1lBQ1gsSUFBSVYsU0FBU0ksUUFBUSxLQUFLTSxXQUFXO2dCQUNqQyxNQUFNLElBQUlDLE1BQU07WUFDcEI7WUFDQSxJQUFJO2dCQUNBRixPQUFPLE1BQU1ULFNBQVNJLFFBQVEsQ0FBQ0csSUFBSUMsSUFBSUksT0FBTyxFQUFFLENBQUNOLEtBQUtFLElBQUlLLE9BQU8sTUFBTSxRQUFRUCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdRLFVBQVU7WUFDekgsRUFDQSxPQUFPQyxLQUFLO2dCQUNSLE1BQU1yQix5REFBY0EsQ0FBQ3FCLEtBQUtoQjtZQUM5QjtZQUNBLElBQUlVLFNBQVNDLFdBQVc7Z0JBQ3BCLE1BQU0sSUFBSUMsTUFBTTtZQUNwQjtZQUNBLE1BQU1LLE9BQU9QLEtBQUtPLElBQUk7WUFDdEIsSUFBSSxDQUFDQSxNQUFNO2dCQUNQLE1BQU0sSUFBSUwsTUFBTTtZQUNwQjtZQUNBLE1BQU1NLFNBQVMsRUFBRTtZQUNqQixJQUFJZCxJQUFJYyxNQUFNLEVBQUU7Z0JBQ1osSUFBSUMsU0FBUyxJQUFJekIsa0RBQVdBLENBQUNTLFdBQVdEO2dCQUN4QyxLQUFLLE1BQU1rQixTQUFTRCxPQUFPRSxTQUFTLENBQUNKLE1BQU87b0JBQ3hDQyxPQUFPSSxJQUFJLENBQUNGO2dCQUNoQjtZQUNKO1lBQ0EsT0FBTztnQkFBRUY7Z0JBQVFLLEtBQUtOO1lBQUs7UUFDL0I7UUFDQSxPQUFPWjtJQUNYO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3NpbXVsYXRlLmpzPzBiMGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3BsaXRBcmdzQW5kQ3R4IH0gZnJvbSBcIi4uL2NvbnRleHQuanNcIjtcbmltcG9ydCB7IEV2ZW50UGFyc2VyIH0gZnJvbSBcIi4uL2V2ZW50LmpzXCI7XG5pbXBvcnQgeyB0cmFuc2xhdGVFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvci5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2ltdWxhdGVGYWN0b3J5IHtcbiAgICBzdGF0aWMgYnVpbGQoaWRsSXgsIHR4Rm4sIGlkbEVycm9ycywgcHJvdmlkZXIsIGNvZGVyLCBwcm9ncmFtSWQsIGlkbCkge1xuICAgICAgICBjb25zdCBzaW11bGF0ZSA9IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBjb25zdCB0eCA9IHR4Rm4oLi4uYXJncyk7XG4gICAgICAgICAgICBjb25zdCBbLCBjdHhdID0gc3BsaXRBcmdzQW5kQ3R4KGlkbEl4LCBbLi4uYXJnc10pO1xuICAgICAgICAgICAgbGV0IHJlc3AgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpZiAocHJvdmlkZXIuc2ltdWxhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgZnVuY3Rpb24gcmVxdWlyZXMgJ1Byb3ZpZGVyLnNpbXVsYXRlJyB0byBiZSBpbXBsZW1lbnRlZC5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3AgPSBhd2FpdCBwcm92aWRlci5zaW11bGF0ZSh0eCwgY3R4LnNpZ25lcnMsIChfYSA9IGN0eC5vcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY29tbWl0bWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgdHJhbnNsYXRlRXJyb3IoZXJyLCBpZGxFcnJvcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlc3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBzaW11bGF0ZSB0cmFuc2FjdGlvblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGxvZ3MgPSByZXNwLmxvZ3M7XG4gICAgICAgICAgICBpZiAoIWxvZ3MpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaW11bGF0ZWQgbG9ncyBub3QgZm91bmRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBldmVudHMgPSBbXTtcbiAgICAgICAgICAgIGlmIChpZGwuZXZlbnRzKSB7XG4gICAgICAgICAgICAgICAgbGV0IHBhcnNlciA9IG5ldyBFdmVudFBhcnNlcihwcm9ncmFtSWQsIGNvZGVyKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHBhcnNlci5wYXJzZUxvZ3MobG9ncykpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRzLnB1c2goZXZlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGV2ZW50cywgcmF3OiBsb2dzIH07XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzaW11bGF0ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaW11bGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsic3BsaXRBcmdzQW5kQ3R4IiwiRXZlbnRQYXJzZXIiLCJ0cmFuc2xhdGVFcnJvciIsIlNpbXVsYXRlRmFjdG9yeSIsImJ1aWxkIiwiaWRsSXgiLCJ0eEZuIiwiaWRsRXJyb3JzIiwicHJvdmlkZXIiLCJjb2RlciIsInByb2dyYW1JZCIsImlkbCIsInNpbXVsYXRlIiwiYXJncyIsIl9hIiwidHgiLCJjdHgiLCJyZXNwIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJzaWduZXJzIiwib3B0aW9ucyIsImNvbW1pdG1lbnQiLCJlcnIiLCJsb2dzIiwiZXZlbnRzIiwicGFyc2VyIiwiZXZlbnQiLCJwYXJzZUxvZ3MiLCJwdXNoIiwicmF3Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/simulate.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/transaction.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/transaction.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransactionFactory)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/context.js\");\n\n\nclass TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args)=>{\n            var _a, _b, _c;\n            const [, ctx] = (0,_context_js__WEBPACK_IMPORTED_MODULE_1__.splitArgsAndCtx)(idlIx, [\n                ...args\n            ]);\n            const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n            if (ctx.preInstructions && ctx.instructions) {\n                throw new Error(\"instructions is deprecated, use preInstructions\");\n            }\n            (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach((ix)=>tx.add(ix));\n            (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach((ix)=>tx.add(ix));\n            tx.add(ixFn(...args));\n            (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach((ix)=>tx.add(ix));\n            return tx;\n        };\n        return txFn;\n    }\n} //# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUNFO0FBQ2pDLE1BQU1FO0lBQ2pCLE9BQU9DLE1BQU1DLEtBQUssRUFBRUMsSUFBSSxFQUFFO1FBQ3RCLE1BQU1DLE9BQU8sQ0FBQyxHQUFHQztZQUNiLElBQUlDLElBQUlDLElBQUlDO1lBQ1osTUFBTSxHQUFHQyxJQUFJLEdBQUdWLDREQUFlQSxDQUFDRyxPQUFPO21CQUFJRzthQUFLO1lBQ2hELE1BQU1LLEtBQUssSUFBSVosd0RBQVdBO1lBQzFCLElBQUlXLElBQUlFLGVBQWUsSUFBSUYsSUFBSUcsWUFBWSxFQUFFO2dCQUN6QyxNQUFNLElBQUlDLE1BQU07WUFDcEI7WUFDQ1AsQ0FBQUEsS0FBS0csSUFBSUUsZUFBZSxNQUFNLFFBQVFMLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR1EsT0FBTyxDQUFDLENBQUNDLEtBQU9MLEdBQUdNLEdBQUcsQ0FBQ0Q7WUFDekZSLENBQUFBLEtBQUtFLElBQUlHLFlBQVksTUFBTSxRQUFRTCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdPLE9BQU8sQ0FBQyxDQUFDQyxLQUFPTCxHQUFHTSxHQUFHLENBQUNEO1lBQ3ZGTCxHQUFHTSxHQUFHLENBQUNiLFFBQVFFO1lBQ2RHLENBQUFBLEtBQUtDLElBQUlRLGdCQUFnQixNQUFNLFFBQVFULE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR00sT0FBTyxDQUFDLENBQUNDLEtBQU9MLEdBQUdNLEdBQUcsQ0FBQ0Q7WUFDM0YsT0FBT0w7UUFDWDtRQUNBLE9BQU9OO0lBQ1g7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vcHJvZ3JhbS9uYW1lc3BhY2UvdHJhbnNhY3Rpb24uanM/MzBmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmltcG9ydCB7IHNwbGl0QXJnc0FuZEN0eCB9IGZyb20gXCIuLi9jb250ZXh0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFuc2FjdGlvbkZhY3Rvcnkge1xuICAgIHN0YXRpYyBidWlsZChpZGxJeCwgaXhGbikge1xuICAgICAgICBjb25zdCB0eEZuID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICAgICAgY29uc3QgWywgY3R4XSA9IHNwbGl0QXJnc0FuZEN0eChpZGxJeCwgWy4uLmFyZ3NdKTtcbiAgICAgICAgICAgIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAoY3R4LnByZUluc3RydWN0aW9ucyAmJiBjdHguaW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW5zdHJ1Y3Rpb25zIGlzIGRlcHJlY2F0ZWQsIHVzZSBwcmVJbnN0cnVjdGlvbnNcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAoX2EgPSBjdHgucHJlSW5zdHJ1Y3Rpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZm9yRWFjaCgoaXgpID0+IHR4LmFkZChpeCkpO1xuICAgICAgICAgICAgKF9iID0gY3R4Lmluc3RydWN0aW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZvckVhY2goKGl4KSA9PiB0eC5hZGQoaXgpKTtcbiAgICAgICAgICAgIHR4LmFkZChpeEZuKC4uLmFyZ3MpKTtcbiAgICAgICAgICAgIChfYyA9IGN0eC5wb3N0SW5zdHJ1Y3Rpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuZm9yRWFjaCgoaXgpID0+IHR4LmFkZChpeCkpO1xuICAgICAgICAgICAgcmV0dXJuIHR4O1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdHhGbjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb24iLCJzcGxpdEFyZ3NBbmRDdHgiLCJUcmFuc2FjdGlvbkZhY3RvcnkiLCJidWlsZCIsImlkbEl4IiwiaXhGbiIsInR4Rm4iLCJhcmdzIiwiX2EiLCJfYiIsIl9jIiwiY3R4IiwidHgiLCJwcmVJbnN0cnVjdGlvbnMiLCJpbnN0cnVjdGlvbnMiLCJFcnJvciIsImZvckVhY2giLCJpeCIsImFkZCIsInBvc3RJbnN0cnVjdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/transaction.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/views.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/views.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewFactory)\n/* harmony export */ });\n/* harmony import */ var _coder_borsh_idl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../coder/borsh/idl */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/coder/borsh/idl.js\");\n/* harmony import */ var _utils_bytes_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/bytes/base64 */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js\");\n\n\nclass ViewFactory {\n    static build(programId, idlIx, simulateFn, idl) {\n        const isWritable = idlIx.accounts.find((a)=>a.writable);\n        const hasReturn = !!idlIx.returns;\n        if (isWritable || !hasReturn) return;\n        const view = async (...args)=>{\n            let simulationResult = await simulateFn(...args);\n            const returnPrefix = `Program return: ${programId} `;\n            let returnLog = simulationResult.raw.find((l)=>l.startsWith(returnPrefix));\n            if (!returnLog) {\n                throw new Error(\"View expected return log\");\n            }\n            let returnData = (0,_utils_bytes_base64__WEBPACK_IMPORTED_MODULE_1__.decode)(returnLog.slice(returnPrefix.length));\n            let returnType = idlIx.returns;\n            if (!returnType) {\n                throw new Error(\"View expected return type\");\n            }\n            const coder = _coder_borsh_idl__WEBPACK_IMPORTED_MODULE_0__.IdlCoder.fieldLayout({\n                type: returnType\n            }, idl.types);\n            return coder.decode(returnData);\n        };\n        return view;\n    }\n} //# sourceMappingURL=views.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3ZpZXdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNDO0FBQ25DLE1BQU1FO0lBQ2pCLE9BQU9DLE1BQU1DLFNBQVMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUVDLEdBQUcsRUFBRTtRQUM1QyxNQUFNQyxhQUFhSCxNQUFNSSxRQUFRLENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxRQUFRO1FBQ3hELE1BQU1DLFlBQVksQ0FBQyxDQUFDUixNQUFNUyxPQUFPO1FBQ2pDLElBQUlOLGNBQWMsQ0FBQ0ssV0FDZjtRQUNKLE1BQU1FLE9BQU8sT0FBTyxHQUFHQztZQUNuQixJQUFJQyxtQkFBbUIsTUFBTVgsY0FBY1U7WUFDM0MsTUFBTUUsZUFBZSxDQUFDLGdCQUFnQixFQUFFZCxVQUFVLENBQUMsQ0FBQztZQUNwRCxJQUFJZSxZQUFZRixpQkFBaUJHLEdBQUcsQ0FBQ1YsSUFBSSxDQUFDLENBQUNXLElBQU1BLEVBQUVDLFVBQVUsQ0FBQ0o7WUFDOUQsSUFBSSxDQUFDQyxXQUFXO2dCQUNaLE1BQU0sSUFBSUksTUFBTTtZQUNwQjtZQUNBLElBQUlDLGFBQWF2QiwyREFBTUEsQ0FBQ2tCLFVBQVVNLEtBQUssQ0FBQ1AsYUFBYVEsTUFBTTtZQUMzRCxJQUFJQyxhQUFhdEIsTUFBTVMsT0FBTztZQUM5QixJQUFJLENBQUNhLFlBQVk7Z0JBQ2IsTUFBTSxJQUFJSixNQUFNO1lBQ3BCO1lBQ0EsTUFBTUssUUFBUTVCLHNEQUFRQSxDQUFDNkIsV0FBVyxDQUFDO2dCQUFFQyxNQUFNSDtZQUFXLEdBQUdwQixJQUFJd0IsS0FBSztZQUNsRSxPQUFPSCxNQUFNM0IsTUFBTSxDQUFDdUI7UUFDeEI7UUFDQSxPQUFPVDtJQUNYO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3Byb2dyYW0vbmFtZXNwYWNlL3ZpZXdzLmpzPzE2YWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWRsQ29kZXIgfSBmcm9tIFwiLi4vLi4vY29kZXIvYm9yc2gvaWRsXCI7XG5pbXBvcnQgeyBkZWNvZGUgfSBmcm9tIFwiLi4vLi4vdXRpbHMvYnl0ZXMvYmFzZTY0XCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWV3RmFjdG9yeSB7XG4gICAgc3RhdGljIGJ1aWxkKHByb2dyYW1JZCwgaWRsSXgsIHNpbXVsYXRlRm4sIGlkbCkge1xuICAgICAgICBjb25zdCBpc1dyaXRhYmxlID0gaWRsSXguYWNjb3VudHMuZmluZCgoYSkgPT4gYS53cml0YWJsZSk7XG4gICAgICAgIGNvbnN0IGhhc1JldHVybiA9ICEhaWRsSXgucmV0dXJucztcbiAgICAgICAgaWYgKGlzV3JpdGFibGUgfHwgIWhhc1JldHVybilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgdmlldyA9IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICBsZXQgc2ltdWxhdGlvblJlc3VsdCA9IGF3YWl0IHNpbXVsYXRlRm4oLi4uYXJncyk7XG4gICAgICAgICAgICBjb25zdCByZXR1cm5QcmVmaXggPSBgUHJvZ3JhbSByZXR1cm46ICR7cHJvZ3JhbUlkfSBgO1xuICAgICAgICAgICAgbGV0IHJldHVybkxvZyA9IHNpbXVsYXRpb25SZXN1bHQucmF3LmZpbmQoKGwpID0+IGwuc3RhcnRzV2l0aChyZXR1cm5QcmVmaXgpKTtcbiAgICAgICAgICAgIGlmICghcmV0dXJuTG9nKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVmlldyBleHBlY3RlZCByZXR1cm4gbG9nXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJldHVybkRhdGEgPSBkZWNvZGUocmV0dXJuTG9nLnNsaWNlKHJldHVyblByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIGxldCByZXR1cm5UeXBlID0gaWRsSXgucmV0dXJucztcbiAgICAgICAgICAgIGlmICghcmV0dXJuVHlwZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlZpZXcgZXhwZWN0ZWQgcmV0dXJuIHR5cGVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb2RlciA9IElkbENvZGVyLmZpZWxkTGF5b3V0KHsgdHlwZTogcmV0dXJuVHlwZSB9LCBpZGwudHlwZXMpO1xuICAgICAgICAgICAgcmV0dXJuIGNvZGVyLmRlY29kZShyZXR1cm5EYXRhKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmlld3MuanMubWFwIl0sIm5hbWVzIjpbIklkbENvZGVyIiwiZGVjb2RlIiwiVmlld0ZhY3RvcnkiLCJidWlsZCIsInByb2dyYW1JZCIsImlkbEl4Iiwic2ltdWxhdGVGbiIsImlkbCIsImlzV3JpdGFibGUiLCJhY2NvdW50cyIsImZpbmQiLCJhIiwid3JpdGFibGUiLCJoYXNSZXR1cm4iLCJyZXR1cm5zIiwidmlldyIsImFyZ3MiLCJzaW11bGF0aW9uUmVzdWx0IiwicmV0dXJuUHJlZml4IiwicmV0dXJuTG9nIiwicmF3IiwibCIsInN0YXJ0c1dpdGgiLCJFcnJvciIsInJldHVybkRhdGEiLCJzbGljZSIsImxlbmd0aCIsInJldHVyblR5cGUiLCJjb2RlciIsImZpZWxkTGF5b3V0IiwidHlwZSIsInR5cGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/namespace/views.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/token-account-layout.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/program/token-account-layout.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTokenAccount: () => (/* binding */ decodeTokenAccount)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"(ssr)/../node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer-layout */ \"(ssr)/../node_modules/buffer-layout/lib/Layout.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n\n\nfunction uint64(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(8), (b)=>u64.fromBuffer(b), (n)=>n.toBuffer(), property);\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.blob(32), (b)=>new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(b), (key)=>key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n    return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(layout, decoder, encoder, property){\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nclass COptionLayout extends buffer_layout__WEBPACK_IMPORTED_MODULE_1__.Layout {\n    constructor(layout, property){\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u32();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span + this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 4) + 4;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        } else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 4);\n        }\n        throw new Error(\"Invalid coption \" + this.layout.property);\n    }\n    getSpan(b, offset = 0) {\n        return this.layout.getSpan(b, offset + 4) + 4;\n    }\n}\nclass u64 extends (bn_js__WEBPACK_IMPORTED_MODULE_0___default()) {\n    /**\n     * Convert to Buffer representation\n     */ toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        if (b.length >= 8) {\n            throw new Error(\"u64 too large\");\n        }\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */ static fromBuffer(buffer) {\n        if (buffer.length !== 8) {\n            throw new Error(`Invalid buffer length: ${buffer.length}`);\n        }\n        return new u64([\n            ...buffer\n        ].reverse().map((i)=>`00${i.toString(16)}`.slice(-2)).join(\"\"), 16);\n    }\n}\nconst TOKEN_ACCOUNT_LAYOUT = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([\n    publicKey(\"mint\"),\n    publicKey(\"owner\"),\n    uint64(\"amount\"),\n    coption(publicKey(), \"delegate\"),\n    ((p)=>{\n        const U = buffer_layout__WEBPACK_IMPORTED_MODULE_1__.union(buffer_layout__WEBPACK_IMPORTED_MODULE_1__.u8(\"discriminator\"), null, p);\n        U.addVariant(0, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"uninitialized\");\n        U.addVariant(1, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"initialized\");\n        U.addVariant(2, buffer_layout__WEBPACK_IMPORTED_MODULE_1__.struct([]), \"frozen\");\n        return U;\n    })(\"state\"),\n    coption(uint64(), \"isNative\"),\n    uint64(\"delegatedAmount\"),\n    coption(publicKey(), \"closeAuthority\")\n]);\nfunction decodeTokenAccount(b) {\n    return TOKEN_ACCOUNT_LAYOUT.decode(b);\n} //# sourceMappingURL=token-account-layout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/token-account-layout.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js":
/*!**************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/provider.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnchorProvider: () => (/* binding */ AnchorProvider),\n/* harmony export */   getProvider: () => (/* binding */ getProvider),\n/* harmony export */   setProvider: () => (/* binding */ setProvider)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/bytes/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var _utils_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/rpc.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js\");\n\n\n\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */ class AnchorProvider {\n    /**\n     * @param connection The cluster connection where the program is deployed.\n     * @param wallet     The wallet used to pay for and sign all transactions.\n     * @param opts       Transaction confirmation options to use by default.\n     */ constructor(connection, wallet, opts = AnchorProvider.defaultOptions()){\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n        this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: \"processed\",\n            commitment: \"processed\"\n        };\n    }\n    /**\n     * Returns a `Provider` with a wallet read from the local filesystem.\n     *\n     * @param url  The network cluster url.\n     * @param opts The default transaction confirmation options.\n     *\n     * (This api is for Node only.)\n     */ static local(url, opts = AnchorProvider.defaultOptions()) {\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isBrowser) {\n            throw new Error(`Provider local is not available on browser.`);\n        }\n        const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(url !== null && url !== void 0 ? url : \"http://127.0.0.1:8899\", opts.preflightCommitment);\n        const NodeWallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n        const wallet = NodeWallet.local();\n        return new AnchorProvider(connection, wallet, opts);\n    }\n    /**\n     * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n     * variable\n     *\n     * (This api is for Node only.)\n     */ static env() {\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isBrowser) {\n            throw new Error(`Provider env is not available on browser.`);\n        }\n        const process = __webpack_require__(/*! process */ \"process\");\n        const url = process.env.ANCHOR_PROVIDER_URL;\n        if (url === undefined) {\n            throw new Error(\"ANCHOR_PROVIDER_URL is not defined\");\n        }\n        const options = AnchorProvider.defaultOptions();\n        const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(url, options.commitment);\n        const NodeWallet = (__webpack_require__(/*! ./nodewallet.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/nodewallet.js\")[\"default\"]);\n        const wallet = NodeWallet.local();\n        return new AnchorProvider(connection, wallet, options);\n    }\n    /**\n     * Sends the given transaction, paid for and signed by the provider's wallet.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */ async sendAndConfirm(tx, signers, opts) {\n        var _a, _b, _c, _d;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        if ((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx)) {\n            if (signers) {\n                tx.sign(signers);\n            }\n        } else {\n            tx.feePayer = (_a = tx.feePayer) !== null && _a !== void 0 ? _a : this.wallet.publicKey;\n            tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n            if (signers) {\n                for (const signer of signers){\n                    tx.partialSign(signer);\n                }\n            }\n        }\n        tx = await this.wallet.signTransaction(tx);\n        const rawTx = tx.serialize();\n        try {\n            return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n        } catch (err) {\n            // thrown if the underlying 'confirmTransaction' encounters a failed tx\n            // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n            if (err instanceof ConfirmError) {\n                // choose the shortest available commitment for 'getTransaction'\n                // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                // commitment `sendAndConfirmRawTransaction` used\n                const txSig = _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.bs58.encode((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx) ? ((_b = tx.signatures) === null || _b === void 0 ? void 0 : _b[0]) || new Uint8Array() : (_c = tx.signature) !== null && _c !== void 0 ? _c : new Uint8Array());\n                const maxVer = (0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx) ? 0 : undefined;\n                const failedTx = await this.connection.getTransaction(txSig, {\n                    commitment: \"confirmed\",\n                    maxSupportedTransactionVersion: maxVer\n                });\n                if (!failedTx) {\n                    throw err;\n                } else {\n                    const logs = (_d = failedTx.meta) === null || _d === void 0 ? void 0 : _d.logMessages;\n                    throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(err.message, logs);\n                }\n            } else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Similar to `send`, but for an array of transactions and signers.\n     * All transactions need to be of the same type, it doesn't support a mix of `VersionedTransaction`s and `Transaction`s.\n     *\n     * @param txWithSigners Array of transactions and signers.\n     * @param opts          Transaction confirmation options.\n     */ async sendAll(txWithSigners, opts) {\n        var _a, _b, _c;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n        let txs = txWithSigners.map((r)=>{\n            var _a, _b;\n            if ((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(r.tx)) {\n                let tx = r.tx;\n                if (r.signers) {\n                    tx.sign(r.signers);\n                }\n                return tx;\n            } else {\n                let tx = r.tx;\n                let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n                tx.feePayer = (_b = tx.feePayer) !== null && _b !== void 0 ? _b : this.wallet.publicKey;\n                tx.recentBlockhash = recentBlockhash;\n                signers.forEach((kp)=>{\n                    tx.partialSign(kp);\n                });\n                return tx;\n            }\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for(let k = 0; k < txs.length; k += 1){\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            } catch (err) {\n                // thrown if the underlying 'confirmTransaction' encounters a failed tx\n                // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n                if (err instanceof ConfirmError) {\n                    // choose the shortest available commitment for 'getTransaction'\n                    // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                    // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                    // commitment `sendAndConfirmRawTransaction` used\n                    const txSig = _utils_bytes_index_js__WEBPACK_IMPORTED_MODULE_1__.bs58.encode((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx) ? ((_a = tx.signatures) === null || _a === void 0 ? void 0 : _a[0]) || new Uint8Array() : (_b = tx.signature) !== null && _b !== void 0 ? _b : new Uint8Array());\n                    const maxVer = (0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx) ? 0 : undefined;\n                    const failedTx = await this.connection.getTransaction(txSig, {\n                        commitment: \"confirmed\",\n                        maxSupportedTransactionVersion: maxVer\n                    });\n                    if (!failedTx) {\n                        throw err;\n                    } else {\n                        const logs = (_c = failedTx.meta) === null || _c === void 0 ? void 0 : _c.logMessages;\n                        throw !logs ? err : new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(err.message, logs);\n                    }\n                } else {\n                    throw err;\n                }\n            }\n        }\n        return sigs;\n    }\n    /**\n     * Simulates the given transaction, returning emitted logs from execution.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction. If unset, the transaction\n     *                will be simulated with the \"sigVerify: false\" option. This\n     *                allows for simulation of transactions without asking the\n     *                wallet for a signature.\n     * @param opts    Transaction confirmation options.\n     */ async simulate(tx, signers, commitment, includeAccounts) {\n        let recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n        let result;\n        if ((0,_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isVersionedTransaction)(tx)) {\n            if (signers && signers.length > 0) {\n                tx.sign(signers);\n                tx = await this.wallet.signTransaction(tx);\n            }\n            // Doesn't support includeAccounts which has been changed to something\n            // else in later versions of this function.\n            result = await this.connection.simulateTransaction(tx, {\n                commitment\n            });\n        } else {\n            tx.feePayer = tx.feePayer || this.wallet.publicKey;\n            tx.recentBlockhash = recentBlockhash;\n            if (signers && signers.length > 0) {\n                tx = await this.wallet.signTransaction(tx);\n            }\n            result = await (0,_utils_rpc_js__WEBPACK_IMPORTED_MODULE_3__.simulateTransaction)(this.connection, tx, signers, commitment, includeAccounts);\n        }\n        if (result.value.err) {\n            throw new SimulateError(result.value);\n        }\n        return result.value;\n    }\n}\nclass SimulateError extends Error {\n    constructor(simulationResponse, message){\n        super(message);\n        this.simulationResponse = simulationResponse;\n    }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n    const sendOptions = options && {\n        skipPreflight: options.skipPreflight,\n        preflightCommitment: options.preflightCommitment || options.commitment\n    };\n    const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n    const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n    if (status.err) {\n        throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n    }\n    return signature;\n}\nclass ConfirmError extends Error {\n    constructor(message){\n        super(message);\n    }\n}\n/**\n * Sets the default provider on the client.\n */ function setProvider(provider) {\n    _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */ function getProvider() {\n    if (_provider === null) {\n        return AnchorProvider.local();\n    }\n    return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null; //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js":
/*!************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction encode(data) {\n    return data.toString(\"base64\");\n}\nfunction decode(data) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(data, \"base64\");\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ3pCLFNBQVNDLE9BQU9DLElBQUk7SUFDdkIsT0FBT0EsS0FBS0MsUUFBUSxDQUFDO0FBQ3pCO0FBQ08sU0FBU0MsT0FBT0YsSUFBSTtJQUN2QixPQUFPRiwwQ0FBTUEsQ0FBQ0ssSUFBSSxDQUFDSCxNQUFNO0FBQzdCLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS91dGlscy9ieXRlcy9iYXNlNjQuanM/ZWJlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YS50b1N0cmluZyhcImJhc2U2NFwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoZGF0YSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShkYXRhLCBcImJhc2U2NFwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiZW5jb2RlIiwiZGF0YSIsInRvU3RyaW5nIiwiZGVjb2RlIiwiZnJvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/bs58.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/bs58.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction encode(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_0___default().encode(data);\n}\nfunction decode(data) {\n    return bs58__WEBPACK_IMPORTED_MODULE_0___default().decode(data);\n} //# sourceMappingURL=bs58.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2JzNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QjtBQUNqQixTQUFTQyxPQUFPQyxJQUFJO0lBQ3ZCLE9BQU9GLGtEQUFXLENBQUNFO0FBQ3ZCO0FBQ08sU0FBU0MsT0FBT0QsSUFBSTtJQUN2QixPQUFPRixrREFBVyxDQUFDRTtBQUN2QixFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvYnl0ZXMvYnM1OC5qcz8zNjBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiczU4IGZyb20gXCJiczU4XCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gYnM1OC5lbmNvZGUoZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gYnM1OC5kZWNvZGUoZGF0YSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iczU4LmpzLm1hcCJdLCJuYW1lcyI6WyJiczU4IiwiZW5jb2RlIiwiZGF0YSIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/bs58.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/hex.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/hex.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction encode(data) {\n    return data.reduce((str, byte)=>str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from([]);\n    }\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(key.map((byte)=>parseInt(byte, 16)));\n} //# sourceMappingURL=hex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2hleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ3pCLFNBQVNDLE9BQU9DLElBQUk7SUFDdkIsT0FBT0EsS0FBS0MsTUFBTSxDQUFDLENBQUNDLEtBQUtDLE9BQVNELE1BQU1DLEtBQUtDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUFNO0FBQ2hGO0FBQ08sU0FBU0MsT0FBT04sSUFBSTtJQUN2QixJQUFJQSxLQUFLTyxPQUFPLENBQUMsVUFBVSxHQUFHO1FBQzFCUCxPQUFPQSxLQUFLUSxNQUFNLENBQUM7SUFDdkI7SUFDQSxJQUFJUixLQUFLUyxNQUFNLEdBQUcsTUFBTSxHQUFHO1FBQ3ZCVCxPQUFPLE1BQU1BO0lBQ2pCO0lBQ0EsSUFBSVUsTUFBTVYsS0FBS1csS0FBSyxDQUFDO0lBQ3JCLElBQUlELFFBQVEsTUFBTTtRQUNkLE9BQU9aLDBDQUFNQSxDQUFDYyxJQUFJLENBQUMsRUFBRTtJQUN6QjtJQUNBLE9BQU9kLDBDQUFNQSxDQUFDYyxJQUFJLENBQUNGLElBQUlHLEdBQUcsQ0FBQyxDQUFDVixPQUFTVyxTQUFTWCxNQUFNO0FBQ3hELEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS91dGlscy9ieXRlcy9oZXguanM/MjU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWZmZXIgfSBmcm9tIFwiYnVmZmVyXCI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YS5yZWR1Y2UoKHN0ciwgYnl0ZSkgPT4gc3RyICsgYnl0ZS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpLCBcIjB4XCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShkYXRhKSB7XG4gICAgaWYgKGRhdGEuaW5kZXhPZihcIjB4XCIpID09PSAwKSB7XG4gICAgICAgIGRhdGEgPSBkYXRhLnN1YnN0cigyKTtcbiAgICB9XG4gICAgaWYgKGRhdGEubGVuZ3RoICUgMiA9PT0gMSkge1xuICAgICAgICBkYXRhID0gXCIwXCIgKyBkYXRhO1xuICAgIH1cbiAgICBsZXQga2V5ID0gZGF0YS5tYXRjaCgvLnsyfS9nKTtcbiAgICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShbXSk7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuZnJvbShrZXkubWFwKChieXRlKSA9PiBwYXJzZUludChieXRlLCAxNikpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhleC5qcy5tYXAiXSwibmFtZXMiOlsiQnVmZmVyIiwiZW5jb2RlIiwiZGF0YSIsInJlZHVjZSIsInN0ciIsImJ5dGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZGVjb2RlIiwiaW5kZXhPZiIsInN1YnN0ciIsImxlbmd0aCIsImtleSIsIm1hdGNoIiwiZnJvbSIsIm1hcCIsInBhcnNlSW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/hex.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   bs58: () => (/* reexport module object */ _bs58_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hex: () => (/* reexport module object */ _hex_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   utf8: () => (/* reexport module object */ _utf8_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/hex.js\");\n/* harmony import */ var _utf8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utf8.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/utf8.js\");\n/* harmony import */ var _bs58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bs58.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/bs58.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/base64.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0U7QUFDQTtBQUNJLENBQ3RDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvYnl0ZXMvaW5kZXguanM/NDEyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBoZXggZnJvbSBcIi4vaGV4LmpzXCI7XG5leHBvcnQgKiBhcyB1dGY4IGZyb20gXCIuL3V0ZjguanNcIjtcbmV4cG9ydCAqIGFzIGJzNTggZnJvbSBcIi4vYnM1OC5qc1wiO1xuZXhwb3J0ICogYXMgYmFzZTY0IGZyb20gXCIuL2Jhc2U2NC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImhleCIsInV0ZjgiLCJiczU4IiwiYmFzZTY0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/utf8.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/utf8.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n\nfunction decode(array) {\n    const decoder = _common__WEBPACK_IMPORTED_MODULE_0__.isBrowser ? new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n     : new (__webpack_require__(/*! util */ \"util\").TextDecoder)(\"utf-8\"); // Node.\n    return decoder.decode(array);\n}\nfunction encode(input) {\n    const encoder = _common__WEBPACK_IMPORTED_MODULE_0__.isBrowser ? new TextEncoder() // Browser.\n     : new (__webpack_require__(/*! util */ \"util\").TextEncoder)(\"utf-8\"); // Node.\n    return encoder.encode(input);\n} //# sourceMappingURL=utf8.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQy9CLFNBQVNDLE9BQU9DLEtBQUs7SUFDeEIsTUFBTUMsVUFBVUgsOENBQVNBLEdBQ25CLElBQUlJLFlBQVksU0FBUywyQ0FBMkM7T0FDcEUsSUFBS0MscURBQTJCLENBQUUsVUFBVSxRQUFRO0lBQzFELE9BQU9GLFFBQVFGLE1BQU0sQ0FBQ0M7QUFDMUI7QUFDTyxTQUFTSSxPQUFPQyxLQUFLO0lBQ3hCLE1BQU1DLFVBQVVSLDhDQUFTQSxHQUNuQixJQUFJUyxjQUFjLFdBQVc7T0FDN0IsSUFBS0oscURBQTJCLENBQUUsVUFBVSxRQUFRO0lBQzFELE9BQU9HLFFBQVFGLE1BQU0sQ0FBQ0M7QUFDMUIsRUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2J5dGVzL3V0ZjguanM/M2VkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Jyb3dzZXIgfSBmcm9tIFwiLi4vY29tbW9uXCI7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGFycmF5KSB7XG4gICAgY29uc3QgZGVjb2RlciA9IGlzQnJvd3NlclxuICAgICAgICA/IG5ldyBUZXh0RGVjb2RlcihcInV0Zi04XCIpIC8vIEJyb3dzZXIgaHR0cHM6Ly9jYW5pdXNlLmNvbS90ZXh0ZW5jb2Rlci5cbiAgICAgICAgOiBuZXcgKHJlcXVpcmUoXCJ1dGlsXCIpLlRleHREZWNvZGVyKShcInV0Zi04XCIpOyAvLyBOb2RlLlxuICAgIHJldHVybiBkZWNvZGVyLmRlY29kZShhcnJheSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7XG4gICAgY29uc3QgZW5jb2RlciA9IGlzQnJvd3NlclxuICAgICAgICA/IG5ldyBUZXh0RW5jb2RlcigpIC8vIEJyb3dzZXIuXG4gICAgICAgIDogbmV3IChyZXF1aXJlKFwidXRpbFwiKS5UZXh0RW5jb2RlcikoXCJ1dGYtOFwiKTsgLy8gTm9kZS5cbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoaW5wdXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRmOC5qcy5tYXAiXSwibmFtZXMiOlsiaXNCcm93c2VyIiwiZGVjb2RlIiwiYXJyYXkiLCJkZWNvZGVyIiwiVGV4dERlY29kZXIiLCJyZXF1aXJlIiwiZW5jb2RlIiwiaW5wdXQiLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/utf8.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js":
/*!******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chunks: () => (/* binding */ chunks),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isVersionedTransaction: () => (/* binding */ isVersionedTransaction)\n/* harmony export */ });\nvar _a;\n/**\n * Returns true if being run inside a web browser,\n * false if in a Node process or electron app.\n */ const isBrowser = process.env.ANCHOR_BROWSER ||  false && 0;\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */ function chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index)=>array.slice(index * size, (index + 1) * size));\n}\n/**\n * Check if a transaction object is a VersionedTransaction or not\n *\n * @param tx\n * @returns bool\n */ const isVersionedTransaction = (tx)=>{\n    return \"version\" in tx;\n}; //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQTtBQUNKOzs7Q0FHQyxHQUNNLE1BQU1DLFlBQVlDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxJQUM5QyxNQUE2QixJQUFJLENBQXNGLENBQUc7QUFDL0g7Ozs7OztDQU1DLEdBQ00sU0FBU0csT0FBT0MsS0FBSyxFQUFFQyxJQUFJO0lBQzlCLE9BQU9DLE1BQU1DLEtBQUssQ0FBQyxHQUFHLElBQUlELE1BQU1FLEtBQUtDLElBQUksQ0FBQ0wsTUFBTU0sTUFBTSxHQUFHTCxRQUFRTSxHQUFHLENBQUMsQ0FBQ0MsR0FBR0MsUUFBVVQsTUFBTVUsS0FBSyxDQUFDRCxRQUFRUixNQUFNLENBQUNRLFFBQVEsS0FBS1I7QUFDL0g7QUFDQTs7Ozs7Q0FLQyxHQUNNLE1BQU1VLHlCQUF5QixDQUFDQztJQUNuQyxPQUFPLGFBQWFBO0FBQ3hCLEVBQUUsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2NvbW1vbi5qcz82Njg3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfYTtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJlaW5nIHJ1biBpbnNpZGUgYSB3ZWIgYnJvd3NlcixcbiAqIGZhbHNlIGlmIGluIGEgTm9kZSBwcm9jZXNzIG9yIGVsZWN0cm9uIGFwcC5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9IHByb2Nlc3MuZW52LkFOQ0hPUl9CUk9XU0VSIHx8XG4gICAgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgISgoX2EgPSB3aW5kb3cucHJvY2VzcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmhhc093blByb3BlcnR5KFwidHlwZVwiKSkpO1xuLyoqXG4gKiBTcGxpdHMgYW4gYXJyYXkgaW50byBjaHVua3NcbiAqXG4gKiBAcGFyYW0gYXJyYXkgQXJyYXkgb2Ygb2JqZWN0cyB0byBjaHVuay5cbiAqIEBwYXJhbSBzaXplIFRoZSBtYXggc2l6ZSBvZiBhIGNodW5rLlxuICogQHJldHVybnMgQSB0d28gZGltZW5zaW9uYWwgYXJyYXkgd2hlcmUgZWFjaCBUW10gbGVuZ3RoIGlzIDwgdGhlIHByb3ZpZGVkIHNpemUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaHVua3MoYXJyYXksIHNpemUpIHtcbiAgICByZXR1cm4gQXJyYXkuYXBwbHkoMCwgbmV3IEFycmF5KE1hdGguY2VpbChhcnJheS5sZW5ndGggLyBzaXplKSkpLm1hcCgoXywgaW5kZXgpID0+IGFycmF5LnNsaWNlKGluZGV4ICogc2l6ZSwgKGluZGV4ICsgMSkgKiBzaXplKSk7XG59XG4vKipcbiAqIENoZWNrIGlmIGEgdHJhbnNhY3Rpb24gb2JqZWN0IGlzIGEgVmVyc2lvbmVkVHJhbnNhY3Rpb24gb3Igbm90XG4gKlxuICogQHBhcmFtIHR4XG4gKiBAcmV0dXJucyBib29sXG4gKi9cbmV4cG9ydCBjb25zdCBpc1ZlcnNpb25lZFRyYW5zYWN0aW9uID0gKHR4KSA9PiB7XG4gICAgcmV0dXJuIFwidmVyc2lvblwiIGluIHR4O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibmFtZXMiOlsiX2EiLCJpc0Jyb3dzZXIiLCJwcm9jZXNzIiwiZW52IiwiQU5DSE9SX0JST1dTRVIiLCJ3aW5kb3ciLCJoYXNPd25Qcm9wZXJ0eSIsImNodW5rcyIsImFycmF5Iiwic2l6ZSIsIkFycmF5IiwiYXBwbHkiLCJNYXRoIiwiY2VpbCIsImxlbmd0aCIsIm1hcCIsIl8iLCJpbmRleCIsInNsaWNlIiwiaXNWZXJzaW9uZWRUcmFuc2FjdGlvbiIsInR4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js":
/*!********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSet: () => (/* binding */ isSet),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\nconst _AVAILABLE_FEATURES = new Set([\n    \"debug-logs\"\n]);\nconst _FEATURES = new Map();\nfunction set(key) {\n    if (!_AVAILABLE_FEATURES.has(key)) {\n        throw new Error(\"Invalid feature\");\n    }\n    _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n    return _FEATURES.get(key) !== undefined;\n} //# sourceMappingURL=features.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2ZlYXR1cmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsc0JBQXNCLElBQUlDLElBQUk7SUFBQztDQUFhO0FBQ2xELE1BQU1DLFlBQVksSUFBSUM7QUFDZixTQUFTQyxJQUFJQyxHQUFHO0lBQ25CLElBQUksQ0FBQ0wsb0JBQW9CTSxHQUFHLENBQUNELE1BQU07UUFDL0IsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0FMLFVBQVVFLEdBQUcsQ0FBQ0MsS0FBSztBQUN2QjtBQUNPLFNBQVNHLE1BQU1ILEdBQUc7SUFDckIsT0FBT0gsVUFBVU8sR0FBRyxDQUFDSixTQUFTSztBQUNsQyxFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvZmVhdHVyZXMuanM/ZDAxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfQVZBSUxBQkxFX0ZFQVRVUkVTID0gbmV3IFNldChbXCJkZWJ1Zy1sb2dzXCJdKTtcbmNvbnN0IF9GRUFUVVJFUyA9IG5ldyBNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiBzZXQoa2V5KSB7XG4gICAgaWYgKCFfQVZBSUxBQkxFX0ZFQVRVUkVTLmhhcyhrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZmVhdHVyZVwiKTtcbiAgICB9XG4gICAgX0ZFQVRVUkVTLnNldChrZXksIHRydWUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU2V0KGtleSkge1xuICAgIHJldHVybiBfRkVBVFVSRVMuZ2V0KGtleSkgIT09IHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlYXR1cmVzLmpzLm1hcCJdLCJuYW1lcyI6WyJfQVZBSUxBQkxFX0ZFQVRVUkVTIiwiU2V0IiwiX0ZFQVRVUkVTIiwiTWFwIiwic2V0Iiwia2V5IiwiaGFzIiwiRXJyb3IiLCJpc1NldCIsImdldCIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   features: () => (/* reexport module object */ _features_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   publicKey: () => (/* reexport module object */ _pubkey_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   registry: () => (/* reexport module object */ _registry_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   rpc: () => (/* reexport module object */ _rpc_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   sha256: () => (/* reexport module object */ _sha256_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   token: () => (/* reexport module object */ _token_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha256.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/sha256.js\");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js\");\n/* harmony import */ var _pubkey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pubkey.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/pubkey.js\");\n/* harmony import */ var _bytes_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/bytes/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/token.js\");\n/* harmony import */ var _features_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./features.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/features.js\");\n/* harmony import */ var _registry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./registry.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/registry.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQ047QUFDUztBQUNDO0FBQ047QUFDTTtBQUNBLENBQzFDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvaW5kZXguanM/NzliNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBzaGEyNTYgZnJvbSBcIi4vc2hhMjU2LmpzXCI7XG5leHBvcnQgKiBhcyBycGMgZnJvbSBcIi4vcnBjLmpzXCI7XG5leHBvcnQgKiBhcyBwdWJsaWNLZXkgZnJvbSBcIi4vcHVia2V5LmpzXCI7XG5leHBvcnQgKiBhcyBieXRlcyBmcm9tIFwiLi9ieXRlcy9pbmRleC5qc1wiO1xuZXhwb3J0ICogYXMgdG9rZW4gZnJvbSBcIi4vdG9rZW4uanNcIjtcbmV4cG9ydCAqIGFzIGZlYXR1cmVzIGZyb20gXCIuL2ZlYXR1cmVzLmpzXCI7XG5leHBvcnQgKiBhcyByZWdpc3RyeSBmcm9tIFwiLi9yZWdpc3RyeS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInNoYTI1NiIsInJwYyIsInB1YmxpY0tleSIsImJ5dGVzIiwidG9rZW4iLCJmZWF0dXJlcyIsInJlZ2lzdHJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/pubkey.js":
/*!******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/pubkey.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWithSeedSync: () => (/* binding */ createWithSeedSync)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/../node_modules/@noble/hashes/esm/sha256.js\");\n\n\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n    const buffer = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([\n        fromPublicKey.toBuffer(),\n        buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(seed),\n        programId.toBuffer()\n    ]);\n    return new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(buffer));\n} //# sourceMappingURL=pubkey.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3B1YmtleS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUNZO0FBQ0U7QUFDOUMsaURBQWlEO0FBQzFDLFNBQVNHLG1CQUFtQkMsYUFBYSxFQUFFQyxJQUFJLEVBQUVDLFNBQVM7SUFDN0QsTUFBTUMsU0FBU1AsMENBQU1BLENBQUNRLE1BQU0sQ0FBQztRQUN6QkosY0FBY0ssUUFBUTtRQUN0QlQsMENBQU1BLENBQUNVLElBQUksQ0FBQ0w7UUFDWkMsVUFBVUcsUUFBUTtLQUNyQjtJQUNELE9BQU8sSUFBSVIsc0RBQVNBLENBQUNDLDREQUFNQSxDQUFDSztBQUNoQyxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvcHVia2V5LmpzPzQ3YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCI7XG4vLyBTeW5jIHZlcnNpb24gb2Ygd2ViMy5QdWJsaWNLZXkuY3JlYXRlV2l0aFNlZWQuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlV2l0aFNlZWRTeW5jKGZyb21QdWJsaWNLZXksIHNlZWQsIHByb2dyYW1JZCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW1xuICAgICAgICBmcm9tUHVibGljS2V5LnRvQnVmZmVyKCksXG4gICAgICAgIEJ1ZmZlci5mcm9tKHNlZWQpLFxuICAgICAgICBwcm9ncmFtSWQudG9CdWZmZXIoKSxcbiAgICBdKTtcbiAgICByZXR1cm4gbmV3IFB1YmxpY0tleShzaGEyNTYoYnVmZmVyKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJrZXkuanMubWFwIl0sIm5hbWVzIjpbIkJ1ZmZlciIsIlB1YmxpY0tleSIsInNoYTI1NiIsImNyZWF0ZVdpdGhTZWVkU3luYyIsImZyb21QdWJsaWNLZXkiLCJzZWVkIiwicHJvZ3JhbUlkIiwiYnVmZmVyIiwiY29uY2F0IiwidG9CdWZmZXIiLCJmcm9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/pubkey.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/registry.js":
/*!********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/registry.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUpgradeableLoaderState: () => (/* binding */ decodeUpgradeableLoaderState),\n/* harmony export */   fetchData: () => (/* binding */ fetchData),\n/* harmony export */   verifiedBuild: () => (/* binding */ verifiedBuild)\n/* harmony export */ });\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/../node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @coral-xyz/borsh */ \"(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js\");\n/* harmony import */ var _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */ async function verifiedBuild(connection, programId, limit = 5) {\n    const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n    const [programData, latestBuildsResp] = await Promise.all([\n        fetchData(connection, programId),\n        cross_fetch__WEBPACK_IMPORTED_MODULE_0___default()(url)\n    ]);\n    // Filter out all non successful builds.\n    const latestBuilds = (await latestBuildsResp.json()).filter((b)=>!b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n    if (latestBuilds.length === 0) {\n        return null;\n    }\n    // Get the latest build.\n    const build = latestBuilds[0];\n    // Has the program been upgraded since the last build?\n    if (programData.slot.toNumber() !== build.verified_slot) {\n        return null;\n    }\n    // Success.\n    return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */ async function fetchData(connection, programId) {\n    const accountInfo = await connection.getAccountInfo(programId);\n    if (accountInfo === null) {\n        throw new Error(\"program account not found\");\n    }\n    const { program } = decodeUpgradeableLoaderState(accountInfo.data);\n    const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n    if (programdataAccountInfo === null) {\n        throw new Error(\"program data account not found\");\n    }\n    const { programData } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n    return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.rustEnum([\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([], \"uninitialized\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(), \"authorityAddress\")\n    ], \"buffer\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(\"programdataAddress\")\n    ], \"program\"),\n    _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.struct([\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u64(\"slot\"),\n        _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.option(_coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.publicKey(), \"upgradeAuthorityAddress\")\n    ], \"programData\")\n], undefined, _coral_xyz_borsh__WEBPACK_IMPORTED_MODULE_1__.u32());\nfunction decodeUpgradeableLoaderState(data) {\n    return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n} //# sourceMappingURL=registry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3JlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBZ0M7QUFDVTtBQUMxQzs7OztDQUlDLEdBQ00sZUFBZUUsY0FBY0MsVUFBVSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsQ0FBQztJQUNoRSxNQUFNQyxNQUFNLENBQUMsbUNBQW1DLEVBQUVGLFVBQVVHLFFBQVEsR0FBRyxjQUFjLEVBQUVGLE1BQU0sQ0FBQztJQUM5RixNQUFNLENBQUNHLGFBQWFDLGlCQUFpQixHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztRQUN0REMsVUFBVVQsWUFBWUM7UUFDdEJKLGtEQUFLQSxDQUFDTTtLQUNUO0lBQ0Qsd0NBQXdDO0lBQ3hDLE1BQU1PLGVBQWUsQ0FBQyxNQUFNSixpQkFBaUJLLElBQUksRUFBQyxFQUFHQyxNQUFNLENBQUMsQ0FBQ0MsSUFBTSxDQUFDQSxFQUFFQyxPQUFPLElBQUlELEVBQUVFLEtBQUssS0FBSyxXQUFXRixFQUFFRyxRQUFRLEtBQUs7SUFDdkgsSUFBSU4sYUFBYU8sTUFBTSxLQUFLLEdBQUc7UUFDM0IsT0FBTztJQUNYO0lBQ0Esd0JBQXdCO0lBQ3hCLE1BQU1DLFFBQVFSLFlBQVksQ0FBQyxFQUFFO0lBQzdCLHNEQUFzRDtJQUN0RCxJQUFJTCxZQUFZYyxJQUFJLENBQUNDLFFBQVEsT0FBT0YsTUFBTUcsYUFBYSxFQUFFO1FBQ3JELE9BQU87SUFDWDtJQUNBLFdBQVc7SUFDWCxPQUFPSDtBQUNYO0FBQ0E7OztDQUdDLEdBQ00sZUFBZVQsVUFBVVQsVUFBVSxFQUFFQyxTQUFTO0lBQ2pELE1BQU1xQixjQUFjLE1BQU10QixXQUFXdUIsY0FBYyxDQUFDdEI7SUFDcEQsSUFBSXFCLGdCQUFnQixNQUFNO1FBQ3RCLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLDZCQUE2QkosWUFBWUssSUFBSTtJQUNqRSxNQUFNQyx5QkFBeUIsTUFBTTVCLFdBQVd1QixjQUFjLENBQUNFLFFBQVFJLGtCQUFrQjtJQUN6RixJQUFJRCwyQkFBMkIsTUFBTTtRQUNqQyxNQUFNLElBQUlKLE1BQU07SUFDcEI7SUFDQSxNQUFNLEVBQUVuQixXQUFXLEVBQUUsR0FBR3FCLDZCQUE2QkUsdUJBQXVCRCxJQUFJO0lBQ2hGLE9BQU90QjtBQUNYO0FBQ0EsTUFBTXlCLGtDQUFrQ2hDLHNEQUFjLENBQUM7SUFDbkRBLG9EQUFZLENBQUMsRUFBRSxFQUFFO0lBQ2pCQSxvREFBWSxDQUFDO1FBQUNBLG9EQUFZLENBQUNBLHVEQUFlLElBQUk7S0FBb0IsRUFBRTtJQUNwRUEsb0RBQVksQ0FBQztRQUFDQSx1REFBZSxDQUFDO0tBQXNCLEVBQUU7SUFDdERBLG9EQUFZLENBQUM7UUFDVEEsaURBQVMsQ0FBQztRQUNWQSxvREFBWSxDQUFDQSx1REFBZSxJQUFJO0tBQ25DLEVBQUU7Q0FDTixFQUFFc0MsV0FBV3RDLGlEQUFTO0FBQ2hCLFNBQVM0Qiw2QkFBNkJDLElBQUk7SUFDN0MsT0FBT0csZ0NBQWdDUSxNQUFNLENBQUNYO0FBQ2xELEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS91dGlscy9yZWdpc3RyeS5qcz8yNWU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tIFwiY3Jvc3MtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIGJvcnNoIGZyb20gXCJAY29yYWwteHl6L2JvcnNoXCI7XG4vKipcbiAqIFJldHVybnMgYSB2ZXJpZmllZCBidWlsZCBmcm9tIHRoZSBhbmNob3IgcmVnaXN0cnkuIG51bGwgaWYgbm8gc3VjaFxuICogdmVyaWZpZWQgYnVpbGQgZXhpc3RzLCBlLmcuLCBpZiB0aGUgcHJvZ3JhbSBoYXMgYmVlbiB1cGdyYWRlZCBzaW5jZSB0aGVcbiAqIGxhc3QgdmVyaWZpZWQgYnVpbGQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZmllZEJ1aWxkKGNvbm5lY3Rpb24sIHByb2dyYW1JZCwgbGltaXQgPSA1KSB7XG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLmFwci5kZXYvYXBpL3YwL3Byb2dyYW0vJHtwcm9ncmFtSWQudG9TdHJpbmcoKX0vbGF0ZXN0P2xpbWl0PSR7bGltaXR9YDtcbiAgICBjb25zdCBbcHJvZ3JhbURhdGEsIGxhdGVzdEJ1aWxkc1Jlc3BdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaERhdGEoY29ubmVjdGlvbiwgcHJvZ3JhbUlkKSxcbiAgICAgICAgZmV0Y2godXJsKSxcbiAgICBdKTtcbiAgICAvLyBGaWx0ZXIgb3V0IGFsbCBub24gc3VjY2Vzc2Z1bCBidWlsZHMuXG4gICAgY29uc3QgbGF0ZXN0QnVpbGRzID0gKGF3YWl0IGxhdGVzdEJ1aWxkc1Jlc3AuanNvbigpKS5maWx0ZXIoKGIpID0+ICFiLmFib3J0ZWQgJiYgYi5zdGF0ZSA9PT0gXCJCdWlsdFwiICYmIGIudmVyaWZpZWQgPT09IFwiVmVyaWZpZWRcIik7XG4gICAgaWYgKGxhdGVzdEJ1aWxkcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIEdldCB0aGUgbGF0ZXN0IGJ1aWxkLlxuICAgIGNvbnN0IGJ1aWxkID0gbGF0ZXN0QnVpbGRzWzBdO1xuICAgIC8vIEhhcyB0aGUgcHJvZ3JhbSBiZWVuIHVwZ3JhZGVkIHNpbmNlIHRoZSBsYXN0IGJ1aWxkP1xuICAgIGlmIChwcm9ncmFtRGF0YS5zbG90LnRvTnVtYmVyKCkgIT09IGJ1aWxkLnZlcmlmaWVkX3Nsb3QpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIFN1Y2Nlc3MuXG4gICAgcmV0dXJuIGJ1aWxkO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBwcm9ncmFtIGRhdGEgYWNjb3VudCBmb3IgdGhpcyBwcm9ncmFtLCBjb250YWluaW5nIHRoZVxuICogbWV0YWRhdGEgZm9yIHRoaXMgcHJvZ3JhbSwgZS5nLiwgdGhlIHVwZ3JhZGUgYXV0aG9yaXR5LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKGNvbm5lY3Rpb24sIHByb2dyYW1JZCkge1xuICAgIGNvbnN0IGFjY291bnRJbmZvID0gYXdhaXQgY29ubmVjdGlvbi5nZXRBY2NvdW50SW5mbyhwcm9ncmFtSWQpO1xuICAgIGlmIChhY2NvdW50SW5mbyA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwcm9ncmFtIGFjY291bnQgbm90IGZvdW5kXCIpO1xuICAgIH1cbiAgICBjb25zdCB7IHByb2dyYW0gfSA9IGRlY29kZVVwZ3JhZGVhYmxlTG9hZGVyU3RhdGUoYWNjb3VudEluZm8uZGF0YSk7XG4gICAgY29uc3QgcHJvZ3JhbWRhdGFBY2NvdW50SW5mbyA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0QWNjb3VudEluZm8ocHJvZ3JhbS5wcm9ncmFtZGF0YUFkZHJlc3MpO1xuICAgIGlmIChwcm9ncmFtZGF0YUFjY291bnRJbmZvID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInByb2dyYW0gZGF0YSBhY2NvdW50IG5vdCBmb3VuZFwiKTtcbiAgICB9XG4gICAgY29uc3QgeyBwcm9ncmFtRGF0YSB9ID0gZGVjb2RlVXBncmFkZWFibGVMb2FkZXJTdGF0ZShwcm9ncmFtZGF0YUFjY291bnRJbmZvLmRhdGEpO1xuICAgIHJldHVybiBwcm9ncmFtRGF0YTtcbn1cbmNvbnN0IFVQR1JBREVBQkxFX0xPQURFUl9TVEFURV9MQVlPVVQgPSBib3JzaC5ydXN0RW51bShbXG4gICAgYm9yc2guc3RydWN0KFtdLCBcInVuaW5pdGlhbGl6ZWRcIiksXG4gICAgYm9yc2guc3RydWN0KFtib3JzaC5vcHRpb24oYm9yc2gucHVibGljS2V5KCksIFwiYXV0aG9yaXR5QWRkcmVzc1wiKV0sIFwiYnVmZmVyXCIpLFxuICAgIGJvcnNoLnN0cnVjdChbYm9yc2gucHVibGljS2V5KFwicHJvZ3JhbWRhdGFBZGRyZXNzXCIpXSwgXCJwcm9ncmFtXCIpLFxuICAgIGJvcnNoLnN0cnVjdChbXG4gICAgICAgIGJvcnNoLnU2NChcInNsb3RcIiksXG4gICAgICAgIGJvcnNoLm9wdGlvbihib3JzaC5wdWJsaWNLZXkoKSwgXCJ1cGdyYWRlQXV0aG9yaXR5QWRkcmVzc1wiKSxcbiAgICBdLCBcInByb2dyYW1EYXRhXCIpLFxuXSwgdW5kZWZpbmVkLCBib3JzaC51MzIoKSk7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVXBncmFkZWFibGVMb2FkZXJTdGF0ZShkYXRhKSB7XG4gICAgcmV0dXJuIFVQR1JBREVBQkxFX0xPQURFUl9TVEFURV9MQVlPVVQuZGVjb2RlKGRhdGEpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVnaXN0cnkuanMubWFwIl0sIm5hbWVzIjpbImZldGNoIiwiYm9yc2giLCJ2ZXJpZmllZEJ1aWxkIiwiY29ubmVjdGlvbiIsInByb2dyYW1JZCIsImxpbWl0IiwidXJsIiwidG9TdHJpbmciLCJwcm9ncmFtRGF0YSIsImxhdGVzdEJ1aWxkc1Jlc3AiLCJQcm9taXNlIiwiYWxsIiwiZmV0Y2hEYXRhIiwibGF0ZXN0QnVpbGRzIiwianNvbiIsImZpbHRlciIsImIiLCJhYm9ydGVkIiwic3RhdGUiLCJ2ZXJpZmllZCIsImxlbmd0aCIsImJ1aWxkIiwic2xvdCIsInRvTnVtYmVyIiwidmVyaWZpZWRfc2xvdCIsImFjY291bnRJbmZvIiwiZ2V0QWNjb3VudEluZm8iLCJFcnJvciIsInByb2dyYW0iLCJkZWNvZGVVcGdyYWRlYWJsZUxvYWRlclN0YXRlIiwiZGF0YSIsInByb2dyYW1kYXRhQWNjb3VudEluZm8iLCJwcm9ncmFtZGF0YUFkZHJlc3MiLCJVUEdSQURFQUJMRV9MT0FERVJfU1RBVEVfTEFZT1VUIiwicnVzdEVudW0iLCJzdHJ1Y3QiLCJvcHRpb24iLCJwdWJsaWNLZXkiLCJ1NjQiLCJ1bmRlZmluZWQiLCJ1MzIiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/registry.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js":
/*!***************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMultipleAccounts: () => (/* binding */ getMultipleAccounts),\n/* harmony export */   getMultipleAccountsAndContext: () => (/* binding */ getMultipleAccountsAndContext),\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   simulateTransaction: () => (/* binding */ simulateTransaction)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n/* harmony import */ var _program_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../program/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/common.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../provider.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/provider.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! superstruct */ \"(ssr)/../node_modules/superstruct/lib/index.es.js\");\n\n\n\n\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */ async function invoke(programId, accounts, data, provider) {\n    programId = (0,_program_common_js__WEBPACK_IMPORTED_MODULE_2__.translateAddress)(programId);\n    if (!provider) {\n        provider = (0,_provider_js__WEBPACK_IMPORTED_MODULE_3__.getProvider)();\n    }\n    const tx = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction();\n    tx.add(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.TransactionInstruction({\n        programId,\n        keys: accounts !== null && accounts !== void 0 ? accounts : [],\n        data\n    }));\n    if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n    }\n    return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n    const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n    return results.map((result)=>{\n        return result ? {\n            publicKey: result.publicKey,\n            account: result.account\n        } : null;\n    });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n    if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n        return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n    } else {\n        const batches = (0,_utils_common_js__WEBPACK_IMPORTED_MODULE_1__.chunks)(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n        const results = await Promise.all(batches.map((batch)=>getMultipleAccountsAndContextCore(connection, batch, commitment)));\n        return results.flat();\n    }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n    const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n    const { value: accountInfos, context } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    const accounts = accountInfos.map((account, idx)=>{\n        if (account === null) {\n            return null;\n        }\n        return {\n            publicKey: publicKeys[idx],\n            account,\n            context\n        };\n    });\n    return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n    var _a;\n    if (signers && signers.length > 0) {\n        transaction.sign(...signers);\n    }\n    // @ts-expect-error\n    const message = transaction._compile();\n    const signData = message.serialize();\n    // @ts-expect-error\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString(\"base64\");\n    const config = {\n        encoding: \"base64\",\n        commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment\n    };\n    if (includeAccounts) {\n        const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map((key)=>key.toBase58());\n        config[\"accounts\"] = {\n            encoding: \"base64\",\n            addresses\n        };\n    }\n    if (signers && signers.length > 0) {\n        config.sigVerify = true;\n    }\n    const args = [\n        encodedTransaction,\n        config\n    ];\n    // @ts-expect-error\n    const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n    const res = (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.create)(unsafeRes, SimulatedTransactionResponseStruct);\n    if (\"error\" in res) {\n        let logs;\n        if (\"data\" in res.error) {\n            logs = (_a = res.error.data) === null || _a === void 0 ? void 0 : _a.logs;\n            if (logs && Array.isArray(logs)) {\n                const traceIndent = \"\\n    \";\n                const logTrace = traceIndent + logs.join(traceIndent);\n                console.error(res.error.message, logTrace);\n            }\n        }\n        throw new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n    }\n    return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n    return (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.coerce)(createRpcResult(schema), UnknownRpcResult, (value)=>{\n        if (\"error\" in value) {\n            return value;\n        } else {\n            return {\n                ...value,\n                result: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.create)(value.result, schema)\n            };\n        }\n    });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.unknown)());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n    return (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.union)([\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            jsonrpc: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.literal)(\"2.0\"),\n            id: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n            result\n        }),\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            jsonrpc: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.literal)(\"2.0\"),\n            id: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n            error: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n                code: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.unknown)(),\n                message: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n                data: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.any)())\n            })\n        })\n    ]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n    return jsonRpcResult((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n        context: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n            slot: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)()\n        }),\n        value\n    }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n    err: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.union)([\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({}),\n        (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)()\n    ])),\n    logs: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)())),\n    accounts: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.nullable)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.type)({\n        executable: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.boolean)(),\n        owner: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)(),\n        lamports: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)(),\n        data: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.string)()),\n        rentEpoch: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)())\n    }))))),\n    unitsConsumed: (0,superstruct__WEBPACK_IMPORTED_MODULE_4__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_4__.number)())\n})); //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3JwYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkY7QUFDakQ7QUFDWTtBQUNYO0FBQ2lHO0FBQzlJOzs7Q0FHQyxHQUNNLGVBQWVvQixPQUFPQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRO0lBQzVESCxZQUFZakIsb0VBQWdCQSxDQUFDaUI7SUFDN0IsSUFBSSxDQUFDRyxVQUFVO1FBQ1hBLFdBQVduQix5REFBV0E7SUFDMUI7SUFDQSxNQUFNb0IsS0FBSyxJQUFJekIsd0RBQVdBO0lBQzFCeUIsR0FBR0MsR0FBRyxDQUFDLElBQUl6QixtRUFBc0JBLENBQUM7UUFDOUJvQjtRQUNBTSxNQUFNTCxhQUFhLFFBQVFBLGFBQWEsS0FBSyxJQUFJQSxXQUFXLEVBQUU7UUFDOURDO0lBQ0o7SUFDQSxJQUFJQyxTQUFTSSxjQUFjLEtBQUtDLFdBQVc7UUFDdkMsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxNQUFNTixTQUFTSSxjQUFjLENBQUNILElBQUksRUFBRTtBQUMvQztBQUNBLE1BQU1NLDhCQUE4QjtBQUM3QixlQUFlQyxvQkFBb0JDLFVBQVUsRUFBRUMsVUFBVSxFQUFFQyxVQUFVO0lBQ3hFLE1BQU1DLFVBQVUsTUFBTUMsOEJBQThCSixZQUFZQyxZQUFZQztJQUM1RSxPQUFPQyxRQUFRRSxHQUFHLENBQUMsQ0FBQ0M7UUFDaEIsT0FBT0EsU0FDRDtZQUFFQyxXQUFXRCxPQUFPQyxTQUFTO1lBQUVDLFNBQVNGLE9BQU9FLE9BQU87UUFBQyxJQUN2RDtJQUNWO0FBQ0o7QUFDTyxlQUFlSiw4QkFBOEJKLFVBQVUsRUFBRUMsVUFBVSxFQUFFQyxVQUFVO0lBQ2xGLElBQUlELFdBQVdRLE1BQU0sSUFBSVgsNkJBQTZCO1FBQ2xELE9BQU8sTUFBTVksa0NBQWtDVixZQUFZQyxZQUFZQztJQUMzRSxPQUNLO1FBQ0QsTUFBTVMsVUFBVXpDLHdEQUFNQSxDQUFDK0IsWUFBWUg7UUFDbkMsTUFBTUssVUFBVSxNQUFNUyxRQUFRQyxHQUFHLENBQUNGLFFBQVFOLEdBQUcsQ0FBQyxDQUFDUyxRQUFVSixrQ0FBa0NWLFlBQVljLE9BQU9aO1FBQzlHLE9BQU9DLFFBQVFZLElBQUk7SUFDdkI7QUFDSjtBQUNBLGVBQWVMLGtDQUFrQ1YsVUFBVSxFQUFFQyxVQUFVLEVBQUVlLGtCQUFrQjtJQUN2RixNQUFNZCxhQUFhYyx1QkFBdUIsUUFBUUEsdUJBQXVCLEtBQUssSUFBSUEscUJBQXFCaEIsV0FBV0UsVUFBVTtJQUM1SCxNQUFNLEVBQUVlLE9BQU9DLFlBQVksRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTW5CLFdBQVdvQixpQ0FBaUMsQ0FBQ25CLFlBQVlDO0lBQ3hHLE1BQU1iLFdBQVc2QixhQUFhYixHQUFHLENBQUMsQ0FBQ0csU0FBU2E7UUFDeEMsSUFBSWIsWUFBWSxNQUFNO1lBQ2xCLE9BQU87UUFDWDtRQUNBLE9BQU87WUFDSEQsV0FBV04sVUFBVSxDQUFDb0IsSUFBSTtZQUMxQmI7WUFDQVc7UUFDSjtJQUNKO0lBQ0EsT0FBTzlCO0FBQ1g7QUFDQSx3REFBd0Q7QUFDakQsZUFBZWlDLG9CQUFvQnRCLFVBQVUsRUFBRXVCLFdBQVcsRUFBRUMsT0FBTyxFQUFFdEIsVUFBVSxFQUFFdUIsZUFBZTtJQUNuRyxJQUFJQztJQUNKLElBQUlGLFdBQVdBLFFBQVFmLE1BQU0sR0FBRyxHQUFHO1FBQy9CYyxZQUFZSSxJQUFJLElBQUlIO0lBQ3hCO0lBQ0EsbUJBQW1CO0lBQ25CLE1BQU1JLFVBQVVMLFlBQVlNLFFBQVE7SUFDcEMsTUFBTUMsV0FBV0YsUUFBUUcsU0FBUztJQUNsQyxtQkFBbUI7SUFDbkIsTUFBTUMsa0JBQWtCVCxZQUFZVSxVQUFVLENBQUNIO0lBQy9DLE1BQU1JLHFCQUFxQkYsZ0JBQWdCRyxRQUFRLENBQUM7SUFDcEQsTUFBTUMsU0FBUztRQUNYQyxVQUFVO1FBQ1ZuQyxZQUFZQSxlQUFlLFFBQVFBLGVBQWUsS0FBSyxJQUFJQSxhQUFhRixXQUFXRSxVQUFVO0lBQ2pHO0lBQ0EsSUFBSXVCLGlCQUFpQjtRQUNqQixNQUFNYSxZQUFZLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ2YsbUJBQW1CQSxrQkFBa0JHLFFBQVFhLGFBQWEsRUFBQyxFQUFHcEMsR0FBRyxDQUFDLENBQUNxQyxNQUFRQSxJQUFJQyxRQUFRO1FBQ3hIUCxNQUFNLENBQUMsV0FBVyxHQUFHO1lBQ2pCQyxVQUFVO1lBQ1ZDO1FBQ0o7SUFDSjtJQUNBLElBQUlkLFdBQVdBLFFBQVFmLE1BQU0sR0FBRyxHQUFHO1FBQy9CMkIsT0FBT1EsU0FBUyxHQUFHO0lBQ3ZCO0lBQ0EsTUFBTUMsT0FBTztRQUFDWDtRQUFvQkU7S0FBTztJQUN6QyxtQkFBbUI7SUFDbkIsTUFBTVUsWUFBWSxNQUFNOUMsV0FBVytDLFdBQVcsQ0FBQyx1QkFBdUJGO0lBQ3RFLE1BQU1HLE1BQU1oRSxtREFBTUEsQ0FBQzhELFdBQVdHO0lBQzlCLElBQUksV0FBV0QsS0FBSztRQUNoQixJQUFJRTtRQUNKLElBQUksVUFBVUYsSUFBSUcsS0FBSyxFQUFFO1lBQ3JCRCxPQUFPLENBQUN4QixLQUFLc0IsSUFBSUcsS0FBSyxDQUFDN0QsSUFBSSxNQUFNLFFBQVFvQyxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUd3QixJQUFJO1lBQ3pFLElBQUlBLFFBQVFYLE1BQU1DLE9BQU8sQ0FBQ1UsT0FBTztnQkFDN0IsTUFBTUUsY0FBYztnQkFDcEIsTUFBTUMsV0FBV0QsY0FBY0YsS0FBS0ksSUFBSSxDQUFDRjtnQkFDekNHLFFBQVFKLEtBQUssQ0FBQ0gsSUFBSUcsS0FBSyxDQUFDdkIsT0FBTyxFQUFFeUI7WUFDckM7UUFDSjtRQUNBLE1BQU0sSUFBSXBGLGlFQUFvQkEsQ0FBQyxxQ0FBcUMrRSxJQUFJRyxLQUFLLENBQUN2QixPQUFPLEVBQUVzQjtJQUMzRjtJQUNBLE9BQU9GLElBQUkxQyxNQUFNO0FBQ3JCO0FBQ0EsNEJBQTRCO0FBQzVCLFNBQVNrRCxjQUFjQyxNQUFNO0lBQ3pCLE9BQU8xRSxtREFBTUEsQ0FBQzJFLGdCQUFnQkQsU0FBU0Usa0JBQWtCLENBQUMxQztRQUN0RCxJQUFJLFdBQVdBLE9BQU87WUFDbEIsT0FBT0E7UUFDWCxPQUNLO1lBQ0QsT0FBTztnQkFDSCxHQUFHQSxLQUFLO2dCQUNSWCxRQUFRdEIsbURBQU1BLENBQUNpQyxNQUFNWCxNQUFNLEVBQUVtRDtZQUNqQztRQUNKO0lBQ0o7QUFDSjtBQUNBLDRCQUE0QjtBQUM1QixNQUFNRSxtQkFBbUJELGdCQUFnQnpFLG9EQUFPQTtBQUNoRCw0QkFBNEI7QUFDNUIsU0FBU3lFLGdCQUFnQnBELE1BQU07SUFDM0IsT0FBTzFCLGtEQUFLQSxDQUFDO1FBQ1ROLGlEQUFJQSxDQUFDO1lBQ0RzRixTQUFTakYsb0RBQU9BLENBQUM7WUFDakJrRixJQUFJckYsbURBQU1BO1lBQ1Y4QjtRQUNKO1FBQ0FoQyxpREFBSUEsQ0FBQztZQUNEc0YsU0FBU2pGLG9EQUFPQSxDQUFDO1lBQ2pCa0YsSUFBSXJGLG1EQUFNQTtZQUNWMkUsT0FBTzdFLGlEQUFJQSxDQUFDO2dCQUNSd0YsTUFBTTdFLG9EQUFPQTtnQkFDYjJDLFNBQVNwRCxtREFBTUE7Z0JBQ2ZjLE1BQU1ULHFEQUFRQSxDQUFDSyxnREFBR0E7WUFDdEI7UUFDSjtLQUNIO0FBQ0w7QUFDQSw0QkFBNEI7QUFDNUIsU0FBUzZFLHdCQUF3QjlDLEtBQUs7SUFDbEMsT0FBT3VDLGNBQWNsRixpREFBSUEsQ0FBQztRQUN0QjZDLFNBQVM3QyxpREFBSUEsQ0FBQztZQUNWMEYsTUFBTXpGLG1EQUFNQTtRQUNoQjtRQUNBMEM7SUFDSjtBQUNKO0FBQ0EsNEJBQTRCO0FBQzVCLE1BQU1nQyxxQ0FBcUNjLHdCQUF3QnpGLGlEQUFJQSxDQUFDO0lBQ3BFMkYsS0FBS25GLHFEQUFRQSxDQUFDRixrREFBS0EsQ0FBQztRQUFDTixpREFBSUEsQ0FBQyxDQUFDO1FBQUlFLG1EQUFNQTtLQUFHO0lBQ3hDMEUsTUFBTXBFLHFEQUFRQSxDQUFDTCxrREFBS0EsQ0FBQ0QsbURBQU1BO0lBQzNCYSxVQUFVUixxREFBUUEsQ0FBQ0MscURBQVFBLENBQUNMLGtEQUFLQSxDQUFDSyxxREFBUUEsQ0FBQ1IsaURBQUlBLENBQUM7UUFDNUM0RixZQUFZeEYsb0RBQU9BO1FBQ25CeUYsT0FBTzNGLG1EQUFNQTtRQUNiNEYsVUFBVTdGLG1EQUFNQTtRQUNoQmUsTUFBTWIsa0RBQUtBLENBQUNELG1EQUFNQTtRQUNsQjZGLFdBQVd4RixxREFBUUEsQ0FBQ04sbURBQU1BO0lBQzlCO0lBQ0ErRixlQUFlekYscURBQVFBLENBQUNOLG1EQUFNQTtBQUNsQyxLQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3IvZGlzdC9lc20vdXRpbHMvcnBjLmpzP2RiMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNhY3Rpb24sIFRyYW5zYWN0aW9uSW5zdHJ1Y3Rpb24sIFNlbmRUcmFuc2FjdGlvbkVycm9yLCB9IGZyb20gXCJAc29sYW5hL3dlYjMuanNcIjtcbmltcG9ydCB7IGNodW5rcyB9IGZyb20gXCIuLi91dGlscy9jb21tb24uanNcIjtcbmltcG9ydCB7IHRyYW5zbGF0ZUFkZHJlc3MgfSBmcm9tIFwiLi4vcHJvZ3JhbS9jb21tb24uanNcIjtcbmltcG9ydCB7IGdldFByb3ZpZGVyIH0gZnJvbSBcIi4uL3Byb3ZpZGVyLmpzXCI7XG5pbXBvcnQgeyB0eXBlIGFzIHBpY2ssIG51bWJlciwgc3RyaW5nLCBhcnJheSwgYm9vbGVhbiwgbGl0ZXJhbCwgdW5pb24sIG9wdGlvbmFsLCBudWxsYWJsZSwgY29lcmNlLCBjcmVhdGUsIHVua25vd24sIGFueSwgfSBmcm9tIFwic3VwZXJzdHJ1Y3RcIjtcbi8qKlxuICogU2VuZHMgYSB0cmFuc2FjdGlvbiB0byBhIHByb2dyYW0gd2l0aCB0aGUgZ2l2ZW4gYWNjb3VudHMgYW5kIGluc3RydWN0aW9uXG4gKiBkYXRhLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW52b2tlKHByb2dyYW1JZCwgYWNjb3VudHMsIGRhdGEsIHByb3ZpZGVyKSB7XG4gICAgcHJvZ3JhbUlkID0gdHJhbnNsYXRlQWRkcmVzcyhwcm9ncmFtSWQpO1xuICAgIGlmICghcHJvdmlkZXIpIHtcbiAgICAgICAgcHJvdmlkZXIgPSBnZXRQcm92aWRlcigpO1xuICAgIH1cbiAgICBjb25zdCB0eCA9IG5ldyBUcmFuc2FjdGlvbigpO1xuICAgIHR4LmFkZChuZXcgVHJhbnNhY3Rpb25JbnN0cnVjdGlvbih7XG4gICAgICAgIHByb2dyYW1JZCxcbiAgICAgICAga2V5czogYWNjb3VudHMgIT09IG51bGwgJiYgYWNjb3VudHMgIT09IHZvaWQgMCA/IGFjY291bnRzIDogW10sXG4gICAgICAgIGRhdGEsXG4gICAgfSkpO1xuICAgIGlmIChwcm92aWRlci5zZW5kQW5kQ29uZmlybSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgZnVuY3Rpb24gcmVxdWlyZXMgJ1Byb3ZpZGVyLnNlbmRBbmRDb25maXJtJyB0byBiZSBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCBwcm92aWRlci5zZW5kQW5kQ29uZmlybSh0eCwgW10pO1xufVxuY29uc3QgR0VUX01VTFRJUExFX0FDQ09VTlRTX0xJTUlUID0gOTk7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TXVsdGlwbGVBY2NvdW50cyhjb25uZWN0aW9uLCBwdWJsaWNLZXlzLCBjb21taXRtZW50KSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IGdldE11bHRpcGxlQWNjb3VudHNBbmRDb250ZXh0KGNvbm5lY3Rpb24sIHB1YmxpY0tleXMsIGNvbW1pdG1lbnQpO1xuICAgIHJldHVybiByZXN1bHRzLm1hcCgocmVzdWx0KSA9PiB7XG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgICAgID8geyBwdWJsaWNLZXk6IHJlc3VsdC5wdWJsaWNLZXksIGFjY291bnQ6IHJlc3VsdC5hY2NvdW50IH1cbiAgICAgICAgICAgIDogbnVsbDtcbiAgICB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNdWx0aXBsZUFjY291bnRzQW5kQ29udGV4dChjb25uZWN0aW9uLCBwdWJsaWNLZXlzLCBjb21taXRtZW50KSB7XG4gICAgaWYgKHB1YmxpY0tleXMubGVuZ3RoIDw9IEdFVF9NVUxUSVBMRV9BQ0NPVU5UU19MSU1JVCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgZ2V0TXVsdGlwbGVBY2NvdW50c0FuZENvbnRleHRDb3JlKGNvbm5lY3Rpb24sIHB1YmxpY0tleXMsIGNvbW1pdG1lbnQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgYmF0Y2hlcyA9IGNodW5rcyhwdWJsaWNLZXlzLCBHRVRfTVVMVElQTEVfQUNDT1VOVFNfTElNSVQpO1xuICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoYmF0Y2hlcy5tYXAoKGJhdGNoKSA9PiBnZXRNdWx0aXBsZUFjY291bnRzQW5kQ29udGV4dENvcmUoY29ubmVjdGlvbiwgYmF0Y2gsIGNvbW1pdG1lbnQpKSk7XG4gICAgICAgIHJldHVybiByZXN1bHRzLmZsYXQoKTtcbiAgICB9XG59XG5hc3luYyBmdW5jdGlvbiBnZXRNdWx0aXBsZUFjY291bnRzQW5kQ29udGV4dENvcmUoY29ubmVjdGlvbiwgcHVibGljS2V5cywgY29tbWl0bWVudE92ZXJyaWRlKSB7XG4gICAgY29uc3QgY29tbWl0bWVudCA9IGNvbW1pdG1lbnRPdmVycmlkZSAhPT0gbnVsbCAmJiBjb21taXRtZW50T3ZlcnJpZGUgIT09IHZvaWQgMCA/IGNvbW1pdG1lbnRPdmVycmlkZSA6IGNvbm5lY3Rpb24uY29tbWl0bWVudDtcbiAgICBjb25zdCB7IHZhbHVlOiBhY2NvdW50SW5mb3MsIGNvbnRleHQgfSA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0TXVsdGlwbGVBY2NvdW50c0luZm9BbmRDb250ZXh0KHB1YmxpY0tleXMsIGNvbW1pdG1lbnQpO1xuICAgIGNvbnN0IGFjY291bnRzID0gYWNjb3VudEluZm9zLm1hcCgoYWNjb3VudCwgaWR4KSA9PiB7XG4gICAgICAgIGlmIChhY2NvdW50ID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXlzW2lkeF0sXG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICByZXR1cm4gYWNjb3VudHM7XG59XG4vLyBjb3B5IGZyb20gQHNvbGFuYS93ZWIzLmpzIHRoYXQgaGFzIGEgY29tbWl0bWVudCBwYXJhbVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpbXVsYXRlVHJhbnNhY3Rpb24oY29ubmVjdGlvbiwgdHJhbnNhY3Rpb24sIHNpZ25lcnMsIGNvbW1pdG1lbnQsIGluY2x1ZGVBY2NvdW50cykge1xuICAgIHZhciBfYTtcbiAgICBpZiAoc2lnbmVycyAmJiBzaWduZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdHJhbnNhY3Rpb24uc2lnbiguLi5zaWduZXJzKTtcbiAgICB9XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgIGNvbnN0IG1lc3NhZ2UgPSB0cmFuc2FjdGlvbi5fY29tcGlsZSgpO1xuICAgIGNvbnN0IHNpZ25EYXRhID0gbWVzc2FnZS5zZXJpYWxpemUoKTtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgY29uc3Qgd2lyZVRyYW5zYWN0aW9uID0gdHJhbnNhY3Rpb24uX3NlcmlhbGl6ZShzaWduRGF0YSk7XG4gICAgY29uc3QgZW5jb2RlZFRyYW5zYWN0aW9uID0gd2lyZVRyYW5zYWN0aW9uLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgICAgZW5jb2Rpbmc6IFwiYmFzZTY0XCIsXG4gICAgICAgIGNvbW1pdG1lbnQ6IGNvbW1pdG1lbnQgIT09IG51bGwgJiYgY29tbWl0bWVudCAhPT0gdm9pZCAwID8gY29tbWl0bWVudCA6IGNvbm5lY3Rpb24uY29tbWl0bWVudCxcbiAgICB9O1xuICAgIGlmIChpbmNsdWRlQWNjb3VudHMpIHtcbiAgICAgICAgY29uc3QgYWRkcmVzc2VzID0gKEFycmF5LmlzQXJyYXkoaW5jbHVkZUFjY291bnRzKSA/IGluY2x1ZGVBY2NvdW50cyA6IG1lc3NhZ2Uubm9uUHJvZ3JhbUlkcygpKS5tYXAoKGtleSkgPT4ga2V5LnRvQmFzZTU4KCkpO1xuICAgICAgICBjb25maWdbXCJhY2NvdW50c1wiXSA9IHtcbiAgICAgICAgICAgIGVuY29kaW5nOiBcImJhc2U2NFwiLFxuICAgICAgICAgICAgYWRkcmVzc2VzLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoc2lnbmVycyAmJiBzaWduZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uZmlnLnNpZ1ZlcmlmeSA9IHRydWU7XG4gICAgfVxuICAgIGNvbnN0IGFyZ3MgPSBbZW5jb2RlZFRyYW5zYWN0aW9uLCBjb25maWddO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICBjb25zdCB1bnNhZmVSZXMgPSBhd2FpdCBjb25uZWN0aW9uLl9ycGNSZXF1ZXN0KFwic2ltdWxhdGVUcmFuc2FjdGlvblwiLCBhcmdzKTtcbiAgICBjb25zdCByZXMgPSBjcmVhdGUodW5zYWZlUmVzLCBTaW11bGF0ZWRUcmFuc2FjdGlvblJlc3BvbnNlU3RydWN0KTtcbiAgICBpZiAoXCJlcnJvclwiIGluIHJlcykge1xuICAgICAgICBsZXQgbG9ncztcbiAgICAgICAgaWYgKFwiZGF0YVwiIGluIHJlcy5lcnJvcikge1xuICAgICAgICAgICAgbG9ncyA9IChfYSA9IHJlcy5lcnJvci5kYXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubG9ncztcbiAgICAgICAgICAgIGlmIChsb2dzICYmIEFycmF5LmlzQXJyYXkobG9ncykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFjZUluZGVudCA9IFwiXFxuICAgIFwiO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvZ1RyYWNlID0gdHJhY2VJbmRlbnQgKyBsb2dzLmpvaW4odHJhY2VJbmRlbnQpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IocmVzLmVycm9yLm1lc3NhZ2UsIGxvZ1RyYWNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgU2VuZFRyYW5zYWN0aW9uRXJyb3IoXCJmYWlsZWQgdG8gc2ltdWxhdGUgdHJhbnNhY3Rpb246IFwiICsgcmVzLmVycm9yLm1lc3NhZ2UsIGxvZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLnJlc3VsdDtcbn1cbi8vIGNvcHkgZnJvbSBAc29sYW5hL3dlYjMuanNcbmZ1bmN0aW9uIGpzb25ScGNSZXN1bHQoc2NoZW1hKSB7XG4gICAgcmV0dXJuIGNvZXJjZShjcmVhdGVScGNSZXN1bHQoc2NoZW1hKSwgVW5rbm93blJwY1Jlc3VsdCwgKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmIChcImVycm9yXCIgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBjcmVhdGUodmFsdWUucmVzdWx0LCBzY2hlbWEpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8gY29weSBmcm9tIEBzb2xhbmEvd2ViMy5qc1xuY29uc3QgVW5rbm93blJwY1Jlc3VsdCA9IGNyZWF0ZVJwY1Jlc3VsdCh1bmtub3duKCkpO1xuLy8gY29weSBmcm9tIEBzb2xhbmEvd2ViMy5qc1xuZnVuY3Rpb24gY3JlYXRlUnBjUmVzdWx0KHJlc3VsdCkge1xuICAgIHJldHVybiB1bmlvbihbXG4gICAgICAgIHBpY2soe1xuICAgICAgICAgICAganNvbnJwYzogbGl0ZXJhbChcIjIuMFwiKSxcbiAgICAgICAgICAgIGlkOiBzdHJpbmcoKSxcbiAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgfSksXG4gICAgICAgIHBpY2soe1xuICAgICAgICAgICAganNvbnJwYzogbGl0ZXJhbChcIjIuMFwiKSxcbiAgICAgICAgICAgIGlkOiBzdHJpbmcoKSxcbiAgICAgICAgICAgIGVycm9yOiBwaWNrKHtcbiAgICAgICAgICAgICAgICBjb2RlOiB1bmtub3duKCksXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogc3RyaW5nKCksXG4gICAgICAgICAgICAgICAgZGF0YTogb3B0aW9uYWwoYW55KCkpLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pLFxuICAgIF0pO1xufVxuLy8gY29weSBmcm9tIEBzb2xhbmEvd2ViMy5qc1xuZnVuY3Rpb24ganNvblJwY1Jlc3VsdEFuZENvbnRleHQodmFsdWUpIHtcbiAgICByZXR1cm4ganNvblJwY1Jlc3VsdChwaWNrKHtcbiAgICAgICAgY29udGV4dDogcGljayh7XG4gICAgICAgICAgICBzbG90OiBudW1iZXIoKSxcbiAgICAgICAgfSksXG4gICAgICAgIHZhbHVlLFxuICAgIH0pKTtcbn1cbi8vIGNvcHkgZnJvbSBAc29sYW5hL3dlYjMuanNcbmNvbnN0IFNpbXVsYXRlZFRyYW5zYWN0aW9uUmVzcG9uc2VTdHJ1Y3QgPSBqc29uUnBjUmVzdWx0QW5kQ29udGV4dChwaWNrKHtcbiAgICBlcnI6IG51bGxhYmxlKHVuaW9uKFtwaWNrKHt9KSwgc3RyaW5nKCldKSksXG4gICAgbG9nczogbnVsbGFibGUoYXJyYXkoc3RyaW5nKCkpKSxcbiAgICBhY2NvdW50czogb3B0aW9uYWwobnVsbGFibGUoYXJyYXkobnVsbGFibGUocGljayh7XG4gICAgICAgIGV4ZWN1dGFibGU6IGJvb2xlYW4oKSxcbiAgICAgICAgb3duZXI6IHN0cmluZygpLFxuICAgICAgICBsYW1wb3J0czogbnVtYmVyKCksXG4gICAgICAgIGRhdGE6IGFycmF5KHN0cmluZygpKSxcbiAgICAgICAgcmVudEVwb2NoOiBvcHRpb25hbChudW1iZXIoKSksXG4gICAgfSkpKSkpLFxuICAgIHVuaXRzQ29uc3VtZWQ6IG9wdGlvbmFsKG51bWJlcigpKSxcbn0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJwYy5qcy5tYXAiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb24iLCJUcmFuc2FjdGlvbkluc3RydWN0aW9uIiwiU2VuZFRyYW5zYWN0aW9uRXJyb3IiLCJjaHVua3MiLCJ0cmFuc2xhdGVBZGRyZXNzIiwiZ2V0UHJvdmlkZXIiLCJ0eXBlIiwicGljayIsIm51bWJlciIsInN0cmluZyIsImFycmF5IiwiYm9vbGVhbiIsImxpdGVyYWwiLCJ1bmlvbiIsIm9wdGlvbmFsIiwibnVsbGFibGUiLCJjb2VyY2UiLCJjcmVhdGUiLCJ1bmtub3duIiwiYW55IiwiaW52b2tlIiwicHJvZ3JhbUlkIiwiYWNjb3VudHMiLCJkYXRhIiwicHJvdmlkZXIiLCJ0eCIsImFkZCIsImtleXMiLCJzZW5kQW5kQ29uZmlybSIsInVuZGVmaW5lZCIsIkVycm9yIiwiR0VUX01VTFRJUExFX0FDQ09VTlRTX0xJTUlUIiwiZ2V0TXVsdGlwbGVBY2NvdW50cyIsImNvbm5lY3Rpb24iLCJwdWJsaWNLZXlzIiwiY29tbWl0bWVudCIsInJlc3VsdHMiLCJnZXRNdWx0aXBsZUFjY291bnRzQW5kQ29udGV4dCIsIm1hcCIsInJlc3VsdCIsInB1YmxpY0tleSIsImFjY291bnQiLCJsZW5ndGgiLCJnZXRNdWx0aXBsZUFjY291bnRzQW5kQ29udGV4dENvcmUiLCJiYXRjaGVzIiwiUHJvbWlzZSIsImFsbCIsImJhdGNoIiwiZmxhdCIsImNvbW1pdG1lbnRPdmVycmlkZSIsInZhbHVlIiwiYWNjb3VudEluZm9zIiwiY29udGV4dCIsImdldE11bHRpcGxlQWNjb3VudHNJbmZvQW5kQ29udGV4dCIsImlkeCIsInNpbXVsYXRlVHJhbnNhY3Rpb24iLCJ0cmFuc2FjdGlvbiIsInNpZ25lcnMiLCJpbmNsdWRlQWNjb3VudHMiLCJfYSIsInNpZ24iLCJtZXNzYWdlIiwiX2NvbXBpbGUiLCJzaWduRGF0YSIsInNlcmlhbGl6ZSIsIndpcmVUcmFuc2FjdGlvbiIsIl9zZXJpYWxpemUiLCJlbmNvZGVkVHJhbnNhY3Rpb24iLCJ0b1N0cmluZyIsImNvbmZpZyIsImVuY29kaW5nIiwiYWRkcmVzc2VzIiwiQXJyYXkiLCJpc0FycmF5Iiwibm9uUHJvZ3JhbUlkcyIsImtleSIsInRvQmFzZTU4Iiwic2lnVmVyaWZ5IiwiYXJncyIsInVuc2FmZVJlcyIsIl9ycGNSZXF1ZXN0IiwicmVzIiwiU2ltdWxhdGVkVHJhbnNhY3Rpb25SZXNwb25zZVN0cnVjdCIsImxvZ3MiLCJlcnJvciIsInRyYWNlSW5kZW50IiwibG9nVHJhY2UiLCJqb2luIiwiY29uc29sZSIsImpzb25ScGNSZXN1bHQiLCJzY2hlbWEiLCJjcmVhdGVScGNSZXN1bHQiLCJVbmtub3duUnBjUmVzdWx0IiwianNvbnJwYyIsImlkIiwiY29kZSIsImpzb25ScGNSZXN1bHRBbmRDb250ZXh0Iiwic2xvdCIsImVyciIsImV4ZWN1dGFibGUiLCJvd25lciIsImxhbXBvcnRzIiwicmVudEVwb2NoIiwidW5pdHNDb25zdW1lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/rpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/sha256.js":
/*!******************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/sha256.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hash: () => (/* binding */ hash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/../node_modules/@noble/hashes/esm/sha256.js\");\n\nfunction hash(data) {\n    return new TextDecoder().decode((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(data));\n} //# sourceMappingURL=sha256.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3NoYTI1Ni5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUN2QyxTQUFTQyxLQUFLQyxJQUFJO0lBQ3JCLE9BQU8sSUFBSUMsY0FBY0MsTUFBTSxDQUFDSiw0REFBTUEsQ0FBQ0U7QUFDM0MsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3NoYTI1Ni5qcz9lYjVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiO1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2goZGF0YSkge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoc2hhMjU2KGRhdGEpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYTI1Ni5qcy5tYXAiXSwibmFtZXMiOlsic2hhMjU2IiwiaGFzaCIsImRhdGEiLCJUZXh0RGVjb2RlciIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/sha256.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/token.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/utils/token.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASSOCIATED_PROGRAM_ID: () => (/* binding */ ASSOCIATED_PROGRAM_ID),\n/* harmony export */   TOKEN_PROGRAM_ID: () => (/* binding */ TOKEN_PROGRAM_ID),\n/* harmony export */   associatedAddress: () => (/* binding */ associatedAddress)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\n\nconst TOKEN_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nfunction associatedAddress({ mint, owner }) {\n    return _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey.findProgramAddressSync([\n        owner.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        mint.toBuffer()\n    ], ASSOCIATED_PROGRAM_ID)[0];\n} //# sourceMappingURL=token.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEM7QUFDckMsTUFBTUMsbUJBQW1CLElBQUlELHNEQUFTQSxDQUFDLCtDQUErQztBQUN0RixNQUFNRSx3QkFBd0IsSUFBSUYsc0RBQVNBLENBQUMsZ0RBQWdEO0FBQzVGLFNBQVNHLGtCQUFrQixFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRztJQUM5QyxPQUFPTCxzREFBU0EsQ0FBQ00sc0JBQXNCLENBQUM7UUFBQ0QsTUFBTUUsUUFBUTtRQUFJTixpQkFBaUJNLFFBQVE7UUFBSUgsS0FBS0csUUFBUTtLQUFHLEVBQUVMLHNCQUFzQixDQUFDLEVBQUU7QUFDdkksRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3V0aWxzL3Rva2VuLmpzPzc4NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuZXhwb3J0IGNvbnN0IFRPS0VOX1BST0dSQU1fSUQgPSBuZXcgUHVibGljS2V5KFwiVG9rZW5rZWdRZmVaeWlOd0FKYk5iR0tQRlhDV3VCdmY5U3M2MjNWUTVEQVwiKTtcbmV4cG9ydCBjb25zdCBBU1NPQ0lBVEVEX1BST0dSQU1fSUQgPSBuZXcgUHVibGljS2V5KFwiQVRva2VuR1B2YmRHVnhyMWIyaHZaYnNpcVc1eFdIMjVlZlROc0xKQThrbkxcIik7XG5leHBvcnQgZnVuY3Rpb24gYXNzb2NpYXRlZEFkZHJlc3MoeyBtaW50LCBvd25lciwgfSkge1xuICAgIHJldHVybiBQdWJsaWNLZXkuZmluZFByb2dyYW1BZGRyZXNzU3luYyhbb3duZXIudG9CdWZmZXIoKSwgVE9LRU5fUFJPR1JBTV9JRC50b0J1ZmZlcigpLCBtaW50LnRvQnVmZmVyKCldLCBBU1NPQ0lBVEVEX1BST0dSQU1fSUQpWzBdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9rZW4uanMubWFwIl0sIm5hbWVzIjpbIlB1YmxpY0tleSIsIlRPS0VOX1BST0dSQU1fSUQiLCJBU1NPQ0lBVEVEX1BST0dSQU1fSUQiLCJhc3NvY2lhdGVkQWRkcmVzcyIsIm1pbnQiLCJvd25lciIsImZpbmRQcm9ncmFtQWRkcmVzc1N5bmMiLCJ0b0J1ZmZlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/token.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/workspace.js":
/*!***************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/dist/esm/workspace.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var toml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! toml */ \"(ssr)/../node_modules/toml/index.js\");\n/* harmony import */ var toml__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(toml__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var snake_case__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! snake-case */ \"(ssr)/../node_modules/snake-case/dist.es2015/index.js\");\n/* harmony import */ var _program_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./program/index.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/program/index.js\");\n/* harmony import */ var _utils_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/common.js */ \"(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/utils/common.js\");\n\n\n\n\n/**\n * The `workspace` namespace provides a convenience API to automatically\n * search for and deserialize [[Program]] objects defined by compiled IDLs\n * in an Anchor workspace.\n *\n * This API is for Node only.\n */ const workspace = new Proxy({}, {\n    get (workspaceCache, programName) {\n        var _a, _b;\n        if (_utils_common_js__WEBPACK_IMPORTED_MODULE_2__.isBrowser) {\n            throw new Error(\"Workspaces aren't available in the browser\");\n        }\n        // Converting `programName` to snake_case enables the ability to use any\n        // of the following to access the workspace program:\n        // `workspace.myProgram`, `workspace.MyProgram`, `workspace[\"my-program\"]`...\n        programName = (0,snake_case__WEBPACK_IMPORTED_MODULE_3__.snakeCase)(programName);\n        // Check whether the program name contains any digits\n        if (/\\d/.test(programName)) {\n            // Numbers cannot be properly converted from camelCase to snake_case,\n            // e.g. if the `programName` is `myProgram2`, the actual program name could\n            // be `my_program2` or `my_program_2`. This implementation assumes the\n            // latter as the default and always converts to `_numbers`.\n            //\n            // A solution to the conversion of program names with numbers in them\n            // would be to always convert the `programName` to camelCase instead of\n            // snake_case. The problem with this approach is that it would require\n            // converting everything else e.g. program names in Anchor.toml and IDL\n            // file names which are both snake_case.\n            programName = programName.replace(/\\d+/g, (match)=>\"_\" + match).replace(\"__\", \"_\");\n        }\n        // Return early if the program is in cache\n        if (workspaceCache[programName]) return workspaceCache[programName];\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const path = __webpack_require__(/*! path */ \"path\");\n        // Override the workspace programs if the user put them in the config.\n        const anchorToml = toml__WEBPACK_IMPORTED_MODULE_0__.parse(fs.readFileSync(\"Anchor.toml\"));\n        const clusterId = anchorToml.provider.cluster;\n        const programEntry = (_b = (_a = anchorToml.programs) === null || _a === void 0 ? void 0 : _a[clusterId]) === null || _b === void 0 ? void 0 : _b[programName];\n        let idlPath;\n        let programId;\n        if (typeof programEntry === \"object\" && programEntry.idl) {\n            idlPath = programEntry.idl;\n            programId = programEntry.address;\n        } else {\n            idlPath = path.join(\"target\", \"idl\", `${programName}.json`);\n        }\n        if (!fs.existsSync(idlPath)) {\n            throw new Error(`${idlPath} doesn't exist. Did you run \\`anchor build\\`?`);\n        }\n        const idl = JSON.parse(fs.readFileSync(idlPath));\n        if (programId) {\n            idl.address = programId;\n        }\n        workspaceCache[programName] = new _program_index_js__WEBPACK_IMPORTED_MODULE_1__.Program(idl);\n        return workspaceCache[programName];\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (workspace); //# sourceMappingURL=workspace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL2Rpc3QvZXNtL3dvcmtzcGFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkI7QUFDVTtBQUNNO0FBQ0M7QUFDOUM7Ozs7OztDQU1DLEdBQ0QsTUFBTUksWUFBWSxJQUFJQyxNQUFNLENBQUMsR0FBRztJQUM1QkMsS0FBSUMsY0FBYyxFQUFFQyxXQUFXO1FBQzNCLElBQUlDLElBQUlDO1FBQ1IsSUFBSVAsdURBQVNBLEVBQUU7WUFDWCxNQUFNLElBQUlRLE1BQU07UUFDcEI7UUFDQSx3RUFBd0U7UUFDeEUsb0RBQW9EO1FBQ3BELDZFQUE2RTtRQUM3RUgsY0FBY1AscURBQVNBLENBQUNPO1FBQ3hCLHFEQUFxRDtRQUNyRCxJQUFJLEtBQUtJLElBQUksQ0FBQ0osY0FBYztZQUN4QixxRUFBcUU7WUFDckUsMkVBQTJFO1lBQzNFLHNFQUFzRTtZQUN0RSwyREFBMkQ7WUFDM0QsRUFBRTtZQUNGLHFFQUFxRTtZQUNyRSx1RUFBdUU7WUFDdkUsc0VBQXNFO1lBQ3RFLHVFQUF1RTtZQUN2RSx3Q0FBd0M7WUFDeENBLGNBQWNBLFlBQ1RLLE9BQU8sQ0FBQyxRQUFRLENBQUNDLFFBQVUsTUFBTUEsT0FDakNELE9BQU8sQ0FBQyxNQUFNO1FBQ3ZCO1FBQ0EsMENBQTBDO1FBQzFDLElBQUlOLGNBQWMsQ0FBQ0MsWUFBWSxFQUMzQixPQUFPRCxjQUFjLENBQUNDLFlBQVk7UUFDdEMsTUFBTU8sS0FBS0MsbUJBQU9BLENBQUMsY0FBSTtRQUN2QixNQUFNQyxPQUFPRCxtQkFBT0EsQ0FBQyxrQkFBTTtRQUMzQixzRUFBc0U7UUFDdEUsTUFBTUUsYUFBYWxCLHVDQUFVLENBQUNlLEdBQUdLLFlBQVksQ0FBQztRQUM5QyxNQUFNQyxZQUFZSCxXQUFXSSxRQUFRLENBQUNDLE9BQU87UUFDN0MsTUFBTUMsZUFBZSxDQUFDZCxLQUFLLENBQUNELEtBQUtTLFdBQVdPLFFBQVEsTUFBTSxRQUFRaEIsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxFQUFFLENBQUNZLFVBQVUsTUFBTSxRQUFRWCxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEVBQUUsQ0FBQ0YsWUFBWTtRQUM5SixJQUFJa0I7UUFDSixJQUFJQztRQUNKLElBQUksT0FBT0gsaUJBQWlCLFlBQVlBLGFBQWFJLEdBQUcsRUFBRTtZQUN0REYsVUFBVUYsYUFBYUksR0FBRztZQUMxQkQsWUFBWUgsYUFBYUssT0FBTztRQUNwQyxPQUNLO1lBQ0RILFVBQVVULEtBQUthLElBQUksQ0FBQyxVQUFVLE9BQU8sQ0FBQyxFQUFFdEIsWUFBWSxLQUFLLENBQUM7UUFDOUQ7UUFDQSxJQUFJLENBQUNPLEdBQUdnQixVQUFVLENBQUNMLFVBQVU7WUFDekIsTUFBTSxJQUFJZixNQUFNLENBQUMsRUFBRWUsUUFBUSw2Q0FBNkMsQ0FBQztRQUM3RTtRQUNBLE1BQU1FLE1BQU1JLEtBQUtiLEtBQUssQ0FBQ0osR0FBR0ssWUFBWSxDQUFDTTtRQUN2QyxJQUFJQyxXQUFXO1lBQ1hDLElBQUlDLE9BQU8sR0FBR0Y7UUFDbEI7UUFDQXBCLGNBQWMsQ0FBQ0MsWUFBWSxHQUFHLElBQUlOLHNEQUFPQSxDQUFDMEI7UUFDMUMsT0FBT3JCLGNBQWMsQ0FBQ0MsWUFBWTtJQUN0QztBQUNKO0FBQ0EsaUVBQWVKLFNBQVNBLEVBQUMsQ0FDekIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AY29yYWwteHl6L2FuY2hvci9kaXN0L2VzbS93b3Jrc3BhY2UuanM/NTQzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0b21sIGZyb20gXCJ0b21sXCI7XG5pbXBvcnQgeyBzbmFrZUNhc2UgfSBmcm9tIFwic25ha2UtY2FzZVwiO1xuaW1wb3J0IHsgUHJvZ3JhbSB9IGZyb20gXCIuL3Byb2dyYW0vaW5kZXguanNcIjtcbmltcG9ydCB7IGlzQnJvd3NlciB9IGZyb20gXCIuL3V0aWxzL2NvbW1vbi5qc1wiO1xuLyoqXG4gKiBUaGUgYHdvcmtzcGFjZWAgbmFtZXNwYWNlIHByb3ZpZGVzIGEgY29udmVuaWVuY2UgQVBJIHRvIGF1dG9tYXRpY2FsbHlcbiAqIHNlYXJjaCBmb3IgYW5kIGRlc2VyaWFsaXplIFtbUHJvZ3JhbV1dIG9iamVjdHMgZGVmaW5lZCBieSBjb21waWxlZCBJRExzXG4gKiBpbiBhbiBBbmNob3Igd29ya3NwYWNlLlxuICpcbiAqIFRoaXMgQVBJIGlzIGZvciBOb2RlIG9ubHkuXG4gKi9cbmNvbnN0IHdvcmtzcGFjZSA9IG5ldyBQcm94eSh7fSwge1xuICAgIGdldCh3b3Jrc3BhY2VDYWNoZSwgcHJvZ3JhbU5hbWUpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKGlzQnJvd3Nlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV29ya3NwYWNlcyBhcmVuJ3QgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvbnZlcnRpbmcgYHByb2dyYW1OYW1lYCB0byBzbmFrZV9jYXNlIGVuYWJsZXMgdGhlIGFiaWxpdHkgdG8gdXNlIGFueVxuICAgICAgICAvLyBvZiB0aGUgZm9sbG93aW5nIHRvIGFjY2VzcyB0aGUgd29ya3NwYWNlIHByb2dyYW06XG4gICAgICAgIC8vIGB3b3Jrc3BhY2UubXlQcm9ncmFtYCwgYHdvcmtzcGFjZS5NeVByb2dyYW1gLCBgd29ya3NwYWNlW1wibXktcHJvZ3JhbVwiXWAuLi5cbiAgICAgICAgcHJvZ3JhbU5hbWUgPSBzbmFrZUNhc2UocHJvZ3JhbU5hbWUpO1xuICAgICAgICAvLyBDaGVjayB3aGV0aGVyIHRoZSBwcm9ncmFtIG5hbWUgY29udGFpbnMgYW55IGRpZ2l0c1xuICAgICAgICBpZiAoL1xcZC8udGVzdChwcm9ncmFtTmFtZSkpIHtcbiAgICAgICAgICAgIC8vIE51bWJlcnMgY2Fubm90IGJlIHByb3Blcmx5IGNvbnZlcnRlZCBmcm9tIGNhbWVsQ2FzZSB0byBzbmFrZV9jYXNlLFxuICAgICAgICAgICAgLy8gZS5nLiBpZiB0aGUgYHByb2dyYW1OYW1lYCBpcyBgbXlQcm9ncmFtMmAsIHRoZSBhY3R1YWwgcHJvZ3JhbSBuYW1lIGNvdWxkXG4gICAgICAgICAgICAvLyBiZSBgbXlfcHJvZ3JhbTJgIG9yIGBteV9wcm9ncmFtXzJgLiBUaGlzIGltcGxlbWVudGF0aW9uIGFzc3VtZXMgdGhlXG4gICAgICAgICAgICAvLyBsYXR0ZXIgYXMgdGhlIGRlZmF1bHQgYW5kIGFsd2F5cyBjb252ZXJ0cyB0byBgX251bWJlcnNgLlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIEEgc29sdXRpb24gdG8gdGhlIGNvbnZlcnNpb24gb2YgcHJvZ3JhbSBuYW1lcyB3aXRoIG51bWJlcnMgaW4gdGhlbVxuICAgICAgICAgICAgLy8gd291bGQgYmUgdG8gYWx3YXlzIGNvbnZlcnQgdGhlIGBwcm9ncmFtTmFtZWAgdG8gY2FtZWxDYXNlIGluc3RlYWQgb2ZcbiAgICAgICAgICAgIC8vIHNuYWtlX2Nhc2UuIFRoZSBwcm9ibGVtIHdpdGggdGhpcyBhcHByb2FjaCBpcyB0aGF0IGl0IHdvdWxkIHJlcXVpcmVcbiAgICAgICAgICAgIC8vIGNvbnZlcnRpbmcgZXZlcnl0aGluZyBlbHNlIGUuZy4gcHJvZ3JhbSBuYW1lcyBpbiBBbmNob3IudG9tbCBhbmQgSURMXG4gICAgICAgICAgICAvLyBmaWxlIG5hbWVzIHdoaWNoIGFyZSBib3RoIHNuYWtlX2Nhc2UuXG4gICAgICAgICAgICBwcm9ncmFtTmFtZSA9IHByb2dyYW1OYW1lXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcZCsvZywgKG1hdGNoKSA9PiBcIl9cIiArIG1hdGNoKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKFwiX19cIiwgXCJfXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJldHVybiBlYXJseSBpZiB0aGUgcHJvZ3JhbSBpcyBpbiBjYWNoZVxuICAgICAgICBpZiAod29ya3NwYWNlQ2FjaGVbcHJvZ3JhbU5hbWVdKVxuICAgICAgICAgICAgcmV0dXJuIHdvcmtzcGFjZUNhY2hlW3Byb2dyYW1OYW1lXTtcbiAgICAgICAgY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIik7XG4gICAgICAgIGNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcbiAgICAgICAgLy8gT3ZlcnJpZGUgdGhlIHdvcmtzcGFjZSBwcm9ncmFtcyBpZiB0aGUgdXNlciBwdXQgdGhlbSBpbiB0aGUgY29uZmlnLlxuICAgICAgICBjb25zdCBhbmNob3JUb21sID0gdG9tbC5wYXJzZShmcy5yZWFkRmlsZVN5bmMoXCJBbmNob3IudG9tbFwiKSk7XG4gICAgICAgIGNvbnN0IGNsdXN0ZXJJZCA9IGFuY2hvclRvbWwucHJvdmlkZXIuY2x1c3RlcjtcbiAgICAgICAgY29uc3QgcHJvZ3JhbUVudHJ5ID0gKF9iID0gKF9hID0gYW5jaG9yVG9tbC5wcm9ncmFtcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2NsdXN0ZXJJZF0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYltwcm9ncmFtTmFtZV07XG4gICAgICAgIGxldCBpZGxQYXRoO1xuICAgICAgICBsZXQgcHJvZ3JhbUlkO1xuICAgICAgICBpZiAodHlwZW9mIHByb2dyYW1FbnRyeSA9PT0gXCJvYmplY3RcIiAmJiBwcm9ncmFtRW50cnkuaWRsKSB7XG4gICAgICAgICAgICBpZGxQYXRoID0gcHJvZ3JhbUVudHJ5LmlkbDtcbiAgICAgICAgICAgIHByb2dyYW1JZCA9IHByb2dyYW1FbnRyeS5hZGRyZXNzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWRsUGF0aCA9IHBhdGguam9pbihcInRhcmdldFwiLCBcImlkbFwiLCBgJHtwcm9ncmFtTmFtZX0uanNvbmApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZnMuZXhpc3RzU3luYyhpZGxQYXRoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2lkbFBhdGh9IGRvZXNuJ3QgZXhpc3QuIERpZCB5b3UgcnVuIFxcYGFuY2hvciBidWlsZFxcYD9gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpZGwgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhpZGxQYXRoKSk7XG4gICAgICAgIGlmIChwcm9ncmFtSWQpIHtcbiAgICAgICAgICAgIGlkbC5hZGRyZXNzID0gcHJvZ3JhbUlkO1xuICAgICAgICB9XG4gICAgICAgIHdvcmtzcGFjZUNhY2hlW3Byb2dyYW1OYW1lXSA9IG5ldyBQcm9ncmFtKGlkbCk7XG4gICAgICAgIHJldHVybiB3b3Jrc3BhY2VDYWNoZVtwcm9ncmFtTmFtZV07XG4gICAgfSxcbn0pO1xuZXhwb3J0IGRlZmF1bHQgd29ya3NwYWNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ya3NwYWNlLmpzLm1hcCJdLCJuYW1lcyI6WyJ0b21sIiwic25ha2VDYXNlIiwiUHJvZ3JhbSIsImlzQnJvd3NlciIsIndvcmtzcGFjZSIsIlByb3h5IiwiZ2V0Iiwid29ya3NwYWNlQ2FjaGUiLCJwcm9ncmFtTmFtZSIsIl9hIiwiX2IiLCJFcnJvciIsInRlc3QiLCJyZXBsYWNlIiwibWF0Y2giLCJmcyIsInJlcXVpcmUiLCJwYXRoIiwiYW5jaG9yVG9tbCIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiY2x1c3RlcklkIiwicHJvdmlkZXIiLCJjbHVzdGVyIiwicHJvZ3JhbUVudHJ5IiwicHJvZ3JhbXMiLCJpZGxQYXRoIiwicHJvZ3JhbUlkIiwiaWRsIiwiYWRkcmVzcyIsImpvaW4iLCJleGlzdHNTeW5jIiwiSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/dist/esm/workspace.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/node_modules/base-x/src/index.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/node_modules/base-x/src/index.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = (__webpack_require__(/*! safe-buffer */ \"(ssr)/../node_modules/safe-buffer/index.js\").Buffer);\nfunction base(ALPHABET) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n    ;\n    var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n    ;\n    function encode(source) {\n        if (Array.isArray(source) || source instanceof Uint8Array) {\n            source = _Buffer.from(source);\n        }\n        if (!_Buffer.isBuffer(source)) {\n            throw new TypeError(\"Expected Buffer\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return _Buffer.alloc(0);\n        }\n        var psz = 0;\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (source.length - psz) * FACTOR + 1 >>> 0 // log(58) / log(256), rounded up.\n        ;\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while(psz < source.length){\n            // Find code of next character\n            var charCode = source.charCodeAt(psz);\n            // Base map can not be indexed using char code\n            if (charCode > 255) {\n                return;\n            }\n            // Decode character\n            var carry = BASE_MAP[charCode];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = _Buffer.allocUnsafe(zeroes + (size - it4));\n        vch.fill(0x00, 0, zeroes);\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(\"Non-base\" + BASE + \" character\");\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nmodule.exports = base;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/node_modules/base-x/src/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js":
/*!********************************************************************!*\
  !*** ../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var basex = __webpack_require__(/*! base-x */ \"(ssr)/../node_modules/@coral-xyz/anchor/node_modules/base-x/src/index.js\");\nvar ALPHABET = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nmodule.exports = basex(ALPHABET);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0Bjb3JhbC14eXovYW5jaG9yL25vZGVfbW9kdWxlcy9iczU4L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3BCLElBQUlDLFdBQVc7QUFFZkMsT0FBT0MsT0FBTyxHQUFHSixNQUFNRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvQGNvcmFsLXh5ei9hbmNob3Ivbm9kZV9tb2R1bGVzL2JzNTgvaW5kZXguanM/MGY3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZXggPSByZXF1aXJlKCdiYXNlLXgnKVxudmFyIEFMUEhBQkVUID0gJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZXgoQUxQSEFCRVQpXG4iXSwibmFtZXMiOlsiYmFzZXgiLCJyZXF1aXJlIiwiQUxQSEFCRVQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/anchor/node_modules/bs58/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js":
/*!******************************************************!*\
  !*** ../node_modules/@coral-xyz/borsh/dist/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = __webpack_require__(/*! buffer-layout */ \"(ssr)/../node_modules/buffer-layout/lib/Layout.js\");\nconst web3_js_1 = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/../node_modules/@solana/web3.js/lib/index.esm.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/../node_modules/bn.js/lib/bn.js\"));\nvar buffer_layout_2 = __webpack_require__(/*! buffer-layout */ \"(ssr)/../node_modules/buffer-layout/lib/Layout.js\");\nObject.defineProperty(exports, \"u8\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.u8;\n    }\n}));\nObject.defineProperty(exports, \"i8\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.s8;\n    }\n}));\nObject.defineProperty(exports, \"u16\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.u16;\n    }\n}));\nObject.defineProperty(exports, \"i16\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.s16;\n    }\n}));\nObject.defineProperty(exports, \"u32\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.u32;\n    }\n}));\nObject.defineProperty(exports, \"i32\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.s32;\n    }\n}));\nObject.defineProperty(exports, \"f32\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.f32;\n    }\n}));\nObject.defineProperty(exports, \"f64\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.f64;\n    }\n}));\nObject.defineProperty(exports, \"struct\", ({\n    enumerable: true,\n    get: function() {\n        return buffer_layout_2.struct;\n    }\n}));\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property){\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property){\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b)=>new web3_js_1.PublicKey(b), (key)=>key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property){\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        } else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        } else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    } else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\")\n    ]);\n    return new WrappedLayout(layout, ({ values })=>values, (values)=>({\n            values\n        }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\")\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data)=>({\n            tag,\n            data\n        }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\")\n    ]);\n    return new WrappedLayout(layout, ({ data })=>data, (data)=>({\n            data\n        }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data)=>data.toString(\"utf-8\"), (s)=>Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index)=>unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\")\n    ]);\n    return new WrappedLayout(layout, ({ values })=>values, (values)=>({\n            values\n        }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property){\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [\n            key,\n            value\n        ];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset);\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\")\n    ]);\n    return new WrappedLayout(layout, ({ values })=>new Map(values), (values)=>({\n            values: Array.from(values.entries())\n        }), property);\n}\nexports.map = map; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@coral-xyz/borsh/dist/index.js\n");

/***/ })

};
;